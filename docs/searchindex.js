Search.setIndex({"docnames": ["api/cfg/band_structure", "api/cfg/band_structure_2d", "api/cfg/dos", "api/cfg/fermi_surface_2d", "api/cfg/fermi_surface_3d", "api/cfg/index", "api/cfg/unfold", "api/core/_autosummary/pyprocar.core.BrillouinZone", "api/core/_autosummary/pyprocar.core.BrillouinZone.__init__", "api/core/_autosummary/pyprocar.core.BrillouinZone.wigner_seitz", "api/core/_autosummary/pyprocar.core.DensityOfStates", "api/core/_autosummary/pyprocar.core.DensityOfStates.__init__", "api/core/_autosummary/pyprocar.core.DensityOfStates.coupled_to_uncoupled_basis", "api/core/_autosummary/pyprocar.core.DensityOfStates.dos_sum", "api/core/_autosummary/pyprocar.core.DensityOfStates.get_current_basis", "api/core/_autosummary/pyprocar.core.DensityOfStates.is_non_collinear", "api/core/_autosummary/pyprocar.core.DensityOfStates.n_dos", "api/core/_autosummary/pyprocar.core.DensityOfStates.n_energies", "api/core/_autosummary/pyprocar.core.DensityOfStates.n_spins", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.__init__", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_gradient", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_gradient_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_hessian", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_hessian_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.calculate_scalar_gradient", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.calculate_scalar_integral", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.create_nd_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.create_scaler_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.create_vector_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.ebs_ipr", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.ebs_ipr_atom", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.ebs_sum", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.fermi_speed", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.fermi_speed_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.fermi_velocity", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.fermi_velocity_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.fix_collinear_spin", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.harmonic_average_effective_mass", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.harmonic_average_effective_mass_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.ibz2fbz", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.index_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.interpolate_mesh_grid", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.is_non_collinear", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_cartesian", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_cartesian_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_reduced", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.mesh_to_array", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.n_kx", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.n_ky", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.n_kz", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.natoms", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nbands", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nkpoints", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.norbitals", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nprincipals", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nspins", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.plot_kpoints", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.projected_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.projected_phase_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.ravel_array", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.unfold", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_weights", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.weights_mesh", "api/core/_autosummary/pyprocar.core.FermiSurface", "api/core/_autosummary/pyprocar.core.FermiSurface.__init__", "api/core/_autosummary/pyprocar.core.FermiSurface.add_axes_labels", "api/core/_autosummary/pyprocar.core.FermiSurface.add_legend", "api/core/_autosummary/pyprocar.core.FermiSurface.find_energy", "api/core/_autosummary/pyprocar.core.FermiSurface.plot", "api/core/_autosummary/pyprocar.core.FermiSurface.savefig", "api/core/_autosummary/pyprocar.core.FermiSurface.show", "api/core/_autosummary/pyprocar.core.FermiSurface.spin_texture", "api/core/_autosummary/pyprocar.core.FermiSurface3D", "api/core/_autosummary/pyprocar.core.FermiSurface3D.__init__", "api/core/_autosummary/pyprocar.core.FermiSurface3D.extend_surface", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_atomic_projections", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_fermi_speed", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_fermi_velocity", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_harmonic_effective_mass", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_spin_texture_atomic_projections", "api/core/_autosummary/pyprocar.core.Isosurface", "api/core/_autosummary/pyprocar.core.Isosurface.__init__", "api/core/_autosummary/pyprocar.core.Isosurface.dxyz", "api/core/_autosummary/pyprocar.core.Isosurface.nX", "api/core/_autosummary/pyprocar.core.Isosurface.nY", "api/core/_autosummary/pyprocar.core.Isosurface.nZ", "api/core/_autosummary/pyprocar.core.Isosurface.surface_boundaries", "api/core/_autosummary/pyprocar.core.KPath", "api/core/_autosummary/pyprocar.core.KPath.__init__", "api/core/_autosummary/pyprocar.core.KPath.get_kpoints_transformed", "api/core/_autosummary/pyprocar.core.KPath.get_optimized_kpoints_transformed", "api/core/_autosummary/pyprocar.core.KPath.kdistances", "api/core/_autosummary/pyprocar.core.KPath.nsegments", "api/core/_autosummary/pyprocar.core.KPath.tick_names", "api/core/_autosummary/pyprocar.core.KPath.tick_positions", "api/core/_autosummary/pyprocar.core.KPath.write_to_file", "api/core/_autosummary/pyprocar.core.Structure", "api/core/_autosummary/pyprocar.core.Structure.__init__", "api/core/_autosummary/pyprocar.core.Structure.a", "api/core/_autosummary/pyprocar.core.Structure.alpha", "api/core/_autosummary/pyprocar.core.Structure.atomic_numbers", "api/core/_autosummary/pyprocar.core.Structure.b", "api/core/_autosummary/pyprocar.core.Structure.beta", "api/core/_autosummary/pyprocar.core.Structure.c", "api/core/_autosummary/pyprocar.core.Structure.cell_convex_hull", "api/core/_autosummary/pyprocar.core.Structure.density", "api/core/_autosummary/pyprocar.core.Structure.gamma", "api/core/_autosummary/pyprocar.core.Structure.get_space_group_international", "api/core/_autosummary/pyprocar.core.Structure.get_space_group_number", "api/core/_autosummary/pyprocar.core.Structure.get_spglib_symmetry_dataset", "api/core/_autosummary/pyprocar.core.Structure.get_wyckoff_positions", "api/core/_autosummary/pyprocar.core.Structure.is_point_inside", "api/core/_autosummary/pyprocar.core.Structure.lattice_corners", "api/core/_autosummary/pyprocar.core.Structure.masses", "api/core/_autosummary/pyprocar.core.Structure.natoms", "api/core/_autosummary/pyprocar.core.Structure.nspecies", "api/core/_autosummary/pyprocar.core.Structure.plot_cell_convex_hull", "api/core/_autosummary/pyprocar.core.Structure.reciprocal_lattice", "api/core/_autosummary/pyprocar.core.Structure.species", "api/core/_autosummary/pyprocar.core.Structure.supercell", "api/core/_autosummary/pyprocar.core.Structure.transform", "api/core/_autosummary/pyprocar.core.Structure.volume", "api/core/_autosummary/pyprocar.core.Surface", "api/core/_autosummary/pyprocar.core.Surface.__init__", "api/core/_autosummary/pyprocar.core.Surface.centers", "api/core/_autosummary/pyprocar.core.Surface.export", "api/core/_autosummary/pyprocar.core.Surface.faces_array", "api/core/_autosummary/pyprocar.core.Surface.set_color_with_cmap", "api/core/_autosummary/pyprocar.core.Surface.set_scalars", "api/core/_autosummary/pyprocar.core.Surface.set_vectors", "api/core/brillouin_zone", "api/core/dos", "api/core/ebs", "api/core/fermi2d", "api/core/fermi3d", "api/core/index", "api/core/isosurface", "api/core/kpath", "api/core/structure", "api/core/surface", "api/index", "api/io/_autosummary/pyprocar.io.abinit.AbinitKpoints", "api/io/_autosummary/pyprocar.io.abinit.AbinitKpoints.__init__", "api/io/_autosummary/pyprocar.io.abinit.AbinitProcar", "api/io/_autosummary/pyprocar.io.abinit.AbinitProcar.__init__", "api/io/_autosummary/pyprocar.io.abinit.Output", "api/io/_autosummary/pyprocar.io.abinit.Output.__init__", "api/io/_autosummary/pyprocar.io.bxsf.BxsfParser", "api/io/_autosummary/pyprocar.io.bxsf.BxsfParser.__init__", "api/io/_autosummary/pyprocar.io.bxsf.BxsfParser.parse_bxsf", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.__init__", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_parametric", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_projected", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_to_dict", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_total", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.final_structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.initial_structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.parse_structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.species", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.structures", "api/io/_autosummary/pyprocar.io.qe.QEParser", "api/io/_autosummary/pyprocar.io.qe.QEParser.__init__", "api/io/_autosummary/pyprocar.io.qe.QEParser.final_structure", "api/io/_autosummary/pyprocar.io.qe.QEParser.getKpointLabels", "api/io/_autosummary/pyprocar.io.qe.QEParser.initial_structure", "api/io/_autosummary/pyprocar.io.qe.QEParser.kpoints_cart", "api/io/_autosummary/pyprocar.io.qe.QEParser.species", "api/io/_autosummary/pyprocar.io.qe.QEParser.structure", "api/io/_autosummary/pyprocar.io.qe.QEParser.structures", "api/io/_autosummary/pyprocar.io.siesta.SiestaParser", "api/io/_autosummary/pyprocar.io.siesta.SiestaParser.__init__", "api/io/_autosummary/pyprocar.io.vasp.Kpoints", "api/io/_autosummary/pyprocar.io.vasp.Kpoints.__init__", "api/io/_autosummary/pyprocar.io.vasp.Outcar", "api/io/_autosummary/pyprocar.io.vasp.Outcar.__init__", "api/io/_autosummary/pyprocar.io.vasp.Outcar.efermi", "api/io/_autosummary/pyprocar.io.vasp.Outcar.get_symmetry_operations", "api/io/_autosummary/pyprocar.io.vasp.Outcar.reciprocal_lattice", "api/io/_autosummary/pyprocar.io.vasp.Outcar.rotations", "api/io/_autosummary/pyprocar.io.vasp.Poscar", "api/io/_autosummary/pyprocar.io.vasp.Poscar.__init__", "api/io/_autosummary/pyprocar.io.vasp.Procar", "api/io/_autosummary/pyprocar.io.vasp.Procar.__init__", "api/io/_autosummary/pyprocar.io.vasp.Procar.kpoints_cartesian", "api/io/_autosummary/pyprocar.io.vasp.Procar.kpoints_reduced", "api/io/_autosummary/pyprocar.io.vasp.Procar.repair", "api/io/_autosummary/pyprocar.io.vasp.Procar.symmetrize", "api/io/_autosummary/pyprocar.io.vasp.VaspXML", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.__init__", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.bands", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.bands_projected", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.conv", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.convergence", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.convergence_electronic", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.convergence_ionic", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos_projected", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos_to_dict", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos_total", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.energies", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.energy", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.fermi", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.final_structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.forces", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_general", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_params", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_scstep", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_set", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_varray", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.incar", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.initial_structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.is_finished", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.iteration_data", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.kpoints", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.kpoints_list", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.last_energy", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.parse_vasprun", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.potcar_info", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.read", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.species", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.structures", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.text_to_bool", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.vasp_parameters", "api/io/abinit", "api/io/bxsf", "api/io/index", "api/io/lobster", "api/io/qe", "api/io/siesta", "api/io/vasp", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.__init__", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.draw_fermi", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.grid", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.legend", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_dos", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_parametric", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_parametric_line", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_stack", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_stack_orbitals", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_stack_species", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.save", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_xlabel", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_xlim", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_xticks", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_ylabel", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_ylim", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_yticks", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.show", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.update_config", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.__init__", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.draw_fermi", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.grid", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.legend", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_atomic_levels", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_bands", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_parameteric", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_parameteric_overlay", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_scatter", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.save", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_colorbar_title", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_title", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_xlabel", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_xlim", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_xticks", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_ylabel", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_ylim", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_yticks", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.show", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.update_config", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.__init__", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.atomicPlot", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.parametricPlot", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.plotBands", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.scatterPlot", "api/plotter/bandsplot", "api/plotter/dosplot", "api/plotter/index", "api/plotter/procarplot", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.__init__", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.add", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.load_from_data", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.parse", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.remove", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.sort", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.write", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.xyz", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscarDiff", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.__init__", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.add", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.change_elements", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.pos_multiply", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.pos_sum", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.remove", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.scale_lattice", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.shift", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.write", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_supercell", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_supercell.__init__", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_supercell.supercell", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_supercell.write", "api/pyposcar/index", "api/pyposcar/poscar", "api/pyposcar/poscarutils", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.__init__", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.create_isovalue_gif", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_cross_section", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_cross_section_box_widget", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_isoslider", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_surface", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.print_default_settings", "api/scripts/_autosummary/pyprocar.scripts.bandgap", "api/scripts/_autosummary/pyprocar.scripts.bandsdosplot", "api/scripts/_autosummary/pyprocar.scripts.bandsplot", "api/scripts/_autosummary/pyprocar.scripts.cat", "api/scripts/_autosummary/pyprocar.scripts.dosplot", "api/scripts/_autosummary/pyprocar.scripts.fermi2D", "api/scripts/_autosummary/pyprocar.scripts.generate2dkmesh", "api/scripts/_autosummary/pyprocar.scripts.kpath", "api/scripts/_autosummary/pyprocar.scripts.repair", "api/scripts/bandgap", "api/scripts/bandsdosplot", "api/scripts/bandsplot", "api/scripts/cat", "api/scripts/dosplot", "api/scripts/fermi2d", "api/scripts/fermihandler", "api/scripts/generate2dkmesh", "api/scripts/index", "api/scripts/kpath", "api/scripts/repair", "dftprep/abinit", "dftprep/dftb+", "dftprep/elk", "dftprep/index", "dftprep/lobster", "dftprep/qe", "dftprep/siesta", "dftprep/vasp", "examples/00-band_structure/index", "examples/00-band_structure/plot_2d_bands", "examples/00-band_structure/plot_atomic_levels", "examples/00-band_structure/plot_autobands", "examples/00-band_structure/plot_bandsplot_configurations", "examples/00-band_structure/plot_colinear", "examples/00-band_structure/plot_compare_bands", "examples/00-band_structure/plot_ipr", "examples/00-band_structure/plot_noncolinear_qe", "examples/00-band_structure/plot_noncolinear_vasp", "examples/00-band_structure/plot_spin_polarized", "examples/00-band_structure/plot_unfolding", "examples/00-band_structure/sg_execution_times", "examples/01-dos/index", "examples/01-dos/plot_colinear_dos", "examples/01-dos/plot_dosplot_configurations", "examples/01-dos/plot_noncolinear_dos_qe", "examples/01-dos/plot_noncolinear_dos_vasp", "examples/01-dos/plot_spin_polarized_dos", "examples/01-dos/sg_execution_times", "examples/02-bands_dos/index", "examples/02-bands_dos/plot_bandsdosplot", "examples/02-bands_dos/plot_bandsdosplot_configurations", "examples/02-bands_dos/sg_execution_times", "examples/03-fermi2d/index", "examples/03-fermi2d/plot_fermi2d", "examples/03-fermi2d/plot_fermi2d_configurations", "examples/03-fermi2d/plot_fermi2d_spin_texture", "examples/03-fermi2d/plot_rashba_spin_spliting", "examples/03-fermi2d/sg_execution_times", "examples/04-fermi3d/index", "examples/04-fermi3d/plot_de_hass_van_alphen", "examples/04-fermi3d/plot_fermi3d_configurations", "examples/04-fermi3d/plot_fermi3d_cross_section", "examples/04-fermi3d/plot_fermi3d_isoslider", "examples/04-fermi3d/plot_fermi3d_isovalue_gif", "examples/04-fermi3d/plot_fermi3d_plain", "examples/04-fermi3d/plot_fermi3d_spin-polarized", "examples/04-fermi3d/plot_fermi3d_spin_texture", "examples/04-fermi3d/sg_execution_times", "examples/05-other/index", "examples/05-other/plot_2dkmesh_generation", "examples/05-other/plot_bandgap", "examples/05-other/plot_ebs", "examples/05-other/plot_kpath_generation", "examples/05-other/sg_execution_times", "examples/06-PyPoscar/index", "examples/06-PyPoscar/plot_clusters_pyposcar", "examples/06-PyPoscar/plot_finding_defects_pyposcar", "examples/06-PyPoscar/plot_rdf_cutoff_pyposcar", "examples/06-PyPoscar/plot_subsitution_pyposcar", "examples/06-PyPoscar/plot_utils_pyposcar", "examples/06-PyPoscar/sg_execution_times", "examples/index", "getting-started/authors", "getting-started/index", "getting-started/installation", "getting-started/why", "index", "user-guide/atomic_projections", "user-guide/bands", "user-guide/cat", "user-guide/comparebands", "user-guide/dos", "user-guide/ebs", "user-guide/fermi2d", "user-guide/fermi3d", "user-guide/filter", "user-guide/index", "user-guide/kpath", "user-guide/repair", "user-guide/structure", "user-guide/unfold"], "filenames": ["api\\cfg\\band_structure.rst", "api\\cfg\\band_structure_2d.rst", "api\\cfg\\dos.rst", "api\\cfg\\fermi_surface_2d.rst", "api\\cfg\\fermi_surface_3d.rst", "api\\cfg\\index.rst", "api\\cfg\\unfold.rst", "api\\core\\_autosummary\\pyprocar.core.BrillouinZone.rst", "api\\core\\_autosummary\\pyprocar.core.BrillouinZone.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.BrillouinZone.wigner_seitz.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.coupled_to_uncoupled_basis.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.dos_sum.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.get_current_basis.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.is_non_collinear.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.n_dos.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.n_energies.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.n_spins.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_gradient.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_gradient_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_hessian.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_hessian_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.calculate_scalar_gradient.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.calculate_scalar_integral.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.create_nd_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.create_scaler_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.create_vector_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.ebs_ipr.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.ebs_ipr_atom.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.ebs_sum.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.fermi_speed.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.fermi_speed_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.fermi_velocity.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.fermi_velocity_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.fix_collinear_spin.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.harmonic_average_effective_mass.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.harmonic_average_effective_mass_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.ibz2fbz.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.index_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.interpolate_mesh_grid.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.is_non_collinear.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_cartesian.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_cartesian_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_reduced.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.mesh_to_array.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.n_kx.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.n_ky.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.n_kz.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.natoms.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nbands.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nkpoints.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.norbitals.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nprincipals.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nspins.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.plot_kpoints.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.projected_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.projected_phase_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.ravel_array.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.unfold.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_weights.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.weights_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.add_axes_labels.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.add_legend.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.find_energy.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.plot.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.savefig.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.show.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.spin_texture.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.extend_surface.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_atomic_projections.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_fermi_speed.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_fermi_velocity.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_harmonic_effective_mass.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_spin_texture_atomic_projections.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.dxyz.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.nX.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.nY.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.nZ.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.surface_boundaries.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.get_kpoints_transformed.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.get_optimized_kpoints_transformed.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.kdistances.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.nsegments.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.tick_names.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.tick_positions.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.write_to_file.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.a.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.alpha.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.atomic_numbers.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.b.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.beta.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.c.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.cell_convex_hull.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.density.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.gamma.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_space_group_international.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_space_group_number.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_spglib_symmetry_dataset.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_wyckoff_positions.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.is_point_inside.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.lattice_corners.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.masses.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.natoms.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.nspecies.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.plot_cell_convex_hull.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.reciprocal_lattice.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.species.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.supercell.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.transform.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.volume.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.centers.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.export.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.faces_array.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.set_color_with_cmap.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.set_scalars.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.set_vectors.rst", "api\\core\\brillouin_zone.rst", "api\\core\\dos.rst", "api\\core\\ebs.rst", "api\\core\\fermi2d.rst", "api\\core\\fermi3d.rst", "api\\core\\index.rst", "api\\core\\isosurface.rst", "api\\core\\kpath.rst", "api\\core\\structure.rst", "api\\core\\surface.rst", "api\\index.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitKpoints.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitKpoints.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitProcar.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitProcar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.Output.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.Output.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.bxsf.BxsfParser.rst", "api\\io\\_autosummary\\pyprocar.io.bxsf.BxsfParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.bxsf.BxsfParser.parse_bxsf.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_parametric.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_projected.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_to_dict.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_total.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.final_structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.initial_structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.parse_structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.species.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.structures.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.final_structure.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.getKpointLabels.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.initial_structure.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.kpoints_cart.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.species.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.structure.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.structures.rst", "api\\io\\_autosummary\\pyprocar.io.siesta.SiestaParser.rst", "api\\io\\_autosummary\\pyprocar.io.siesta.SiestaParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Kpoints.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Kpoints.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.efermi.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.get_symmetry_operations.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.reciprocal_lattice.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.rotations.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Poscar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Poscar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.kpoints_cartesian.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.kpoints_reduced.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.repair.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.symmetrize.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.bands.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.bands_projected.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.conv.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.convergence.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.convergence_electronic.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.convergence_ionic.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos_projected.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos_to_dict.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos_total.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.energies.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.energy.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.fermi.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.final_structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.forces.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_general.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_params.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_scstep.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_set.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_varray.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.incar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.initial_structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.is_finished.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.iteration_data.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.kpoints.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.kpoints_list.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.last_energy.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.parse_vasprun.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.potcar_info.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.read.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.species.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.structures.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.text_to_bool.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.vasp_parameters.rst", "api\\io\\abinit.rst", "api\\io\\bxsf.rst", "api\\io\\index.rst", "api\\io\\lobster.rst", "api\\io\\qe.rst", "api\\io\\siesta.rst", "api\\io\\vasp.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.__init__.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.draw_fermi.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.grid.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.legend.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_dos.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_parametric.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_parametric_line.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_stack.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_stack_orbitals.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_stack_species.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.save.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_xlabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_xlim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_xticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_ylabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_ylim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_yticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.show.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.update_config.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.__init__.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.draw_fermi.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.grid.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.legend.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_atomic_levels.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_bands.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_parameteric.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_parameteric_overlay.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_scatter.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.save.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_colorbar_title.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_title.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_xlabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_xlim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_xticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_ylabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_ylim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_yticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.show.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.update_config.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.__init__.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.atomicPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.parametricPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.plotBands.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.scatterPlot.rst", "api\\plotter\\bandsplot.rst", "api\\plotter\\dosplot.rst", "api\\plotter\\index.rst", "api\\plotter\\procarplot.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.__init__.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.add.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.load_from_data.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.parse.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.remove.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.sort.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.write.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.xyz.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscarDiff.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.__init__.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.add.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.change_elements.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.pos_multiply.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.pos_sum.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.remove.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.scale_lattice.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.shift.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.write.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_supercell.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_supercell.__init__.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_supercell.supercell.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_supercell.write.rst", "api\\pyposcar\\index.rst", "api\\pyposcar\\poscar.rst", "api\\pyposcar\\poscarutils.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.__init__.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.create_isovalue_gif.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_cross_section.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_cross_section_box_widget.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_isoslider.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_surface.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.print_default_settings.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandgap.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandsdosplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandsplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.cat.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.dosplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.fermi2D.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.generate2dkmesh.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.kpath.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.repair.rst", "api\\scripts\\bandgap.rst", "api\\scripts\\bandsdosplot.rst", "api\\scripts\\bandsplot.rst", "api\\scripts\\cat.rst", "api\\scripts\\dosplot.rst", "api\\scripts\\fermi2d.rst", "api\\scripts\\fermihandler.rst", "api\\scripts\\generate2dkmesh.rst", "api\\scripts\\index.rst", "api\\scripts\\kpath.rst", "api\\scripts\\repair.rst", "dftprep\\abinit.rst", "dftprep\\dftb+.rst", "dftprep\\elk.rst", "dftprep\\index.rst", "dftprep\\lobster.rst", "dftprep\\qe.rst", "dftprep\\siesta.rst", "dftprep\\vasp.rst", "examples\\00-band_structure\\index.rst", "examples\\00-band_structure\\plot_2d_bands.rst", "examples\\00-band_structure\\plot_atomic_levels.rst", "examples\\00-band_structure\\plot_autobands.rst", "examples\\00-band_structure\\plot_bandsplot_configurations.rst", "examples\\00-band_structure\\plot_colinear.rst", "examples\\00-band_structure\\plot_compare_bands.rst", "examples\\00-band_structure\\plot_ipr.rst", "examples\\00-band_structure\\plot_noncolinear_qe.rst", "examples\\00-band_structure\\plot_noncolinear_vasp.rst", "examples\\00-band_structure\\plot_spin_polarized.rst", "examples\\00-band_structure\\plot_unfolding.rst", "examples\\00-band_structure\\sg_execution_times.rst", "examples\\01-dos\\index.rst", "examples\\01-dos\\plot_colinear_dos.rst", "examples\\01-dos\\plot_dosplot_configurations.rst", "examples\\01-dos\\plot_noncolinear_dos_qe.rst", "examples\\01-dos\\plot_noncolinear_dos_vasp.rst", "examples\\01-dos\\plot_spin_polarized_dos.rst", "examples\\01-dos\\sg_execution_times.rst", "examples\\02-bands_dos\\index.rst", "examples\\02-bands_dos\\plot_bandsdosplot.rst", "examples\\02-bands_dos\\plot_bandsdosplot_configurations.rst", "examples\\02-bands_dos\\sg_execution_times.rst", "examples\\03-fermi2d\\index.rst", "examples\\03-fermi2d\\plot_fermi2d.rst", "examples\\03-fermi2d\\plot_fermi2d_configurations.rst", "examples\\03-fermi2d\\plot_fermi2d_spin_texture.rst", "examples\\03-fermi2d\\plot_rashba_spin_spliting.rst", "examples\\03-fermi2d\\sg_execution_times.rst", "examples\\04-fermi3d\\index.rst", "examples\\04-fermi3d\\plot_de_hass_van_alphen.rst", "examples\\04-fermi3d\\plot_fermi3d_configurations.rst", "examples\\04-fermi3d\\plot_fermi3d_cross_section.rst", "examples\\04-fermi3d\\plot_fermi3d_isoslider.rst", "examples\\04-fermi3d\\plot_fermi3d_isovalue_gif.rst", "examples\\04-fermi3d\\plot_fermi3d_plain.rst", "examples\\04-fermi3d\\plot_fermi3d_spin-polarized.rst", "examples\\04-fermi3d\\plot_fermi3d_spin_texture.rst", "examples\\04-fermi3d\\sg_execution_times.rst", "examples\\05-other\\index.rst", "examples\\05-other\\plot_2dkmesh_generation.rst", "examples\\05-other\\plot_bandgap.rst", "examples\\05-other\\plot_ebs.rst", "examples\\05-other\\plot_kpath_generation.rst", "examples\\05-other\\sg_execution_times.rst", "examples\\06-PyPoscar\\index.rst", "examples\\06-PyPoscar\\plot_clusters_pyposcar.rst", "examples\\06-PyPoscar\\plot_finding_defects_pyposcar.rst", "examples\\06-PyPoscar\\plot_rdf_cutoff_pyposcar.rst", "examples\\06-PyPoscar\\plot_subsitution_pyposcar.rst", "examples\\06-PyPoscar\\plot_utils_pyposcar.rst", "examples\\06-PyPoscar\\sg_execution_times.rst", "examples\\index.rst", "getting-started\\authors.rst", "getting-started\\index.rst", "getting-started\\installation.rst", "getting-started\\why.rst", "index.rst", "user-guide\\atomic_projections.rst", "user-guide\\bands.rst", "user-guide\\cat.rst", "user-guide\\comparebands.rst", "user-guide\\dos.rst", "user-guide\\ebs.rst", "user-guide\\fermi2d.rst", "user-guide\\fermi3d.rst", "user-guide\\filter.rst", "user-guide\\index.rst", "user-guide\\kpath.rst", "user-guide\\repair.rst", "user-guide\\structure.rst", "user-guide\\unfold.rst"], "titles": ["band structure plotting Options", "band structure 2d plotting Options", "dos plotting Options", "fermi surface 2d plotting Options", "Fermi Surface 3D Configuration API", "Configuration Files", "unfold plotting Options", "pyprocar.core.BrillouinZone", "__init__", "wigner_seitz", "pyprocar.core.DensityOfStates", "__init__", "coupled_to_uncoupled_basis", "dos_sum", "get_current_basis", "is_non_collinear", "n_dos", "n_energies", "n_spins", "pyprocar.core.ElectronicBandStructure", "__init__", "bands_gradient", "bands_gradient_mesh", "bands_hessian", "bands_hessian_mesh", "bands_mesh", "calculate_scalar_gradient", "calculate_scalar_integral", "create_nd_mesh", "create_scaler_mesh", "create_vector_mesh", "ebs_ipr", "ebs_ipr_atom", "ebs_sum", "fermi_speed", "fermi_speed_mesh", "fermi_velocity", "fermi_velocity_mesh", "fix_collinear_spin", "harmonic_average_effective_mass", "harmonic_average_effective_mass_mesh", "ibz2fbz", "index_mesh", "interpolate_mesh_grid", "is_non_collinear", "kpoints_cartesian", "kpoints_cartesian_mesh", "kpoints_mesh", "kpoints_reduced", "mesh_to_array", "n_kx", "n_ky", "n_kz", "natoms", "nbands", "nkpoints", "norbitals", "nprincipals", "nspins", "plot_kpoints", "projected_mesh", "projected_phase_mesh", "ravel_array", "unfold", "update_weights", "weights_mesh", "pyprocar.core.FermiSurface", "__init__", "add_axes_labels", "add_legend", "find_energy", "plot", "savefig", "show", "spin_texture", "pyprocar.core.FermiSurface3D", "__init__", "extend_surface", "project_atomic_projections", "project_fermi_speed", "project_fermi_velocity", "project_harmonic_effective_mass", "project_spin_texture_atomic_projections", "pyprocar.core.Isosurface", "__init__", "dxyz", "nX", "nY", "nZ", "surface_boundaries", "pyprocar.core.KPath", "__init__", "get_kpoints_transformed", "get_optimized_kpoints_transformed", "kdistances", "nsegments", "tick_names", "tick_positions", "write_to_file", "pyprocar.core.Structure", "__init__", "a", "alpha", "atomic_numbers", "b", "beta", "c", "cell_convex_hull", "density", "gamma", "get_space_group_international", "get_space_group_number", "get_spglib_symmetry_dataset", "get_wyckoff_positions", "is_point_inside", "lattice_corners", "masses", "natoms", "nspecies", "plot_cell_convex_hull", "reciprocal_lattice", "species", "supercell", "transform", "volume", "pyprocar.core.Surface", "__init__", "centers", "export", "faces_array", "set_color_with_cmap", "set_scalars", "set_vectors", "BrillouinZone", "DensityOfStates", "ElectronicBandStructure", "FermiSurface", "FermiSurface3D", "Core API", "Isosurface", "KPath", "Structure", "Surface", "API Reference", "pyprocar.io.abinit.AbinitKpoints", "__init__", "pyprocar.io.abinit.AbinitProcar", "__init__", "pyprocar.io.abinit.Output", "__init__", "pyprocar.io.bxsf.BxsfParser", "__init__", "parse_bxsf", "pyprocar.io.lobster.LobsterParser", "__init__", "dos", "dos_parametric", "dos_projected", "dos_to_dict", "dos_total", "final_structure", "initial_structure", "parse_structure", "species", "structure", "structures", "pyprocar.io.qe.QEParser", "__init__", "final_structure", "getKpointLabels", "initial_structure", "kpoints_cart", "species", "structure", "structures", "pyprocar.io.siesta.SiestaParser", "__init__", "pyprocar.io.vasp.Kpoints", "__init__", "pyprocar.io.vasp.Outcar", "__init__", "efermi", "get_symmetry_operations", "reciprocal_lattice", "rotations", "pyprocar.io.vasp.Poscar", "__init__", "pyprocar.io.vasp.Procar", "__init__", "kpoints_cartesian", "kpoints_reduced", "repair", "symmetrize", "pyprocar.io.vasp.VaspXML", "__init__", "bands", "bands_projected", "conv", "convergence", "convergence_electronic", "convergence_ionic", "dos", "dos_projected", "dos_to_dict", "dos_total", "energies", "energy", "fermi", "final_structure", "forces", "get_general", "get_params", "get_scstep", "get_set", "get_structure", "get_varray", "incar", "initial_structure", "is_finished", "iteration_data", "kpoints", "kpoints_list", "last_energy", "parse_vasprun", "potcar_info", "read", "species", "structure", "structures", "text_to_bool", "vasp_parameters", "AbinitParser", "BxsfParser", "IO API", "LobsterParser", "QEParser", "SiestaParser", "VaspParser", "pyprocar.plotter.DOSPlot", "__init__", "draw_fermi", "grid", "legend", "plot_dos", "plot_parametric", "plot_parametric_line", "plot_stack", "plot_stack_orbitals", "plot_stack_species", "save", "set_xlabel", "set_xlim", "set_xticks", "set_ylabel", "set_ylim", "set_yticks", "show", "update_config", "pyprocar.plotter.EBSPlot", "__init__", "draw_fermi", "grid", "legend", "plot_atomic_levels", "plot_bands", "plot_parameteric", "plot_parameteric_overlay", "plot_scatter", "save", "set_colorbar_title", "set_title", "set_xlabel", "set_xlim", "set_xticks", "set_ylabel", "set_ylim", "set_yticks", "show", "update_config", "pyprocar.plotter.ProcarPlot", "__init__", "atomicPlot", "parametricPlot", "plotBands", "scatterPlot", "EBSPlot", "DosPlot", "Plotter API", "ProcarPlot", "pyprocar.pyposcar.Poscar", "__init__", "add", "load_from_data", "parse", "remove", "sort", "write", "xyz", "poscarDiff", "pyprocar.pyposcar.poscar_modify", "__init__", "add", "change_elements", "pos_multiply", "pos_sum", "remove", "scale_lattice", "shift", "write", "pyprocar.pyposcar.poscar_supercell", "__init__", "supercell", "write", "PyPoscar API", "Poscar", "poscarUtils", "pyprocar.scripts.FermiHandler", "__init__", "create_isovalue_gif", "plot_fermi_cross_section", "plot_fermi_cross_section_box_widget", "plot_fermi_isoslider", "plot_fermi_surface", "print_default_settings", "bandgap", "bandsdosplot", "bandsplot", "cat", "dosplot", "fermi2D", "generate2dkmesh", "kpath", "repair", "bandgap", "bandsdosplot", "bandsplot", "cat", "dosplot", "fermi2D", "FermiHandler", "generate2dkmesh", "Scripts API", "kpath", "reapir", "Abinit Perperation", "DFTB+ Preparation", "Elk Perperation", "DFT Prep", "Lobster Perperation", "Quantum Espresso Preparation", "Siesta Perperation", "VASP Preparation", "Band Structure", "Plotting 2D band structure", "Plotting Atomic Levels", "Autobands plotting", "Plotting with Configurations in <cite>pyprocar</cite>", "Plotting band structure", "Comparing band structures", "Plotting Inverse participation ratio", "Plotting non colinear band structures in Quantum Espresso", "Plotting non colinear band structures in VASP", "Plotting spin polarized band structures", "Unfolding Band Structure", "Computation times", "Density of States", "Plotting density of states", "Plotting with Configurations in <cite>pyprocar</cite>", "Plotting non colinear dos in Quantum Espresso", "Plotting non colinear dos in VASP", "Plotting spin-polarized density of states", "Computation times", "Bands and Dos plot", "Plotting bandsdosplot", "Plotting bandsdosplot", "Computation times", "Fermi 2D", "Plotting fermi2d", "Plotting with Configurations in <cite>pyprocar</cite>", "Plotting fermi2d noncolinear", "Plotting rashba spin splitting", "Computation times", "Fermi 3D", "Showing how to get van alphen fequencies from the fermi surface", "Plotting with Configurations in <cite>pyprocar</cite>", "Plotting fermi3d cross_section", "Plotting fermi3d isoslider", "Plotting fermi3d isovalue_gif", "Plotting fermi3d plain", "Plotting fermi3d spin-polarized", "Plotting fermi3d spin_texture", "Computation times", "Other", "Example of kmesh_generator", "Example of finding the bandgap", "Example of finding the bandgap", "Example of kpath_generator", "Computation times", "PyPoscar", "Visualizing Clusters in Bi2Se3 Slab", "Finding defects in a POSCAR file", "Analyzing Radial Distribution Functions (RDF)", "Substituting Atoms in a POSCAR File", "Modifying a POSCAR File: Scaling, Supercells, and Defects", "Computation times", "Examples", "Authors &amp; Citation", "Getting started", "Installation", "Why PyProcar?", "PyProcar", "Atomic Projections", "Band structure", "Concatenating multiple calculations", "Compare bands", "Density of States", "ElectronicBandStructure", "2D spin-texture", "3D Fermi surface", "Filtering data", "User Guide", "K Path", "Repair", "Structure", "Band unfolding"], "terms": {"descript": [0, 1, 2, 3, 5, 6, 83, 89, 216, 356, 367, 378, 415], "The": [0, 1, 2, 3, 4, 5, 6, 10, 13, 16, 17, 18, 19, 26, 31, 32, 33, 41, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 66, 70, 71, 74, 75, 83, 86, 87, 88, 91, 92, 93, 95, 96, 97, 101, 102, 104, 105, 106, 109, 110, 111, 113, 114, 120, 122, 123, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 150, 153, 159, 162, 166, 176, 177, 179, 180, 184, 185, 187, 189, 190, 192, 193, 195, 196, 201, 203, 231, 232, 234, 235, 236, 237, 238, 240, 242, 243, 244, 249, 250, 251, 253, 254, 258, 260, 263, 265, 266, 267, 276, 285, 286, 289, 290, 297, 298, 305, 307, 308, 311, 314, 315, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 345, 348, 349, 351, 354, 355, 356, 359, 362, 366, 367, 370, 373, 374, 378, 383, 394, 395, 396, 399, 400, 401, 403, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424], "line": [0, 2, 3, 4, 6, 7, 240, 245, 260, 297, 356, 359, 362, 367, 370, 374, 378, 385, 396, 401, 406, 408, 418, 420, 424], "valu": [0, 1, 2, 3, 4, 6, 16, 17, 38, 75, 83, 130, 132, 135, 137, 138, 139, 179, 192, 240, 246, 298, 317, 323, 326, 328, 329, 330, 354, 355, 356, 359, 367, 373, 374, 378, 379, 383, 384, 385, 386, 387, 388, 389, 390, 401, 412, 413, 415, 417, 418], "blue": [0, 2, 3, 6, 240, 243, 283, 356, 359, 367, 377, 378, 379, 389, 393, 395, 396, 412, 424], "red": [0, 2, 3, 6, 356, 359, 367, 374, 378, 379, 389, 396], "black": [0, 1, 2, 4, 6, 273, 356, 367, 384, 399, 400, 401, 402, 403, 414], "colorbar": [0, 1, 2, 356, 367], "atom": [0, 2, 13, 32, 33, 53, 74, 78, 80, 81, 82, 99, 100, 103, 116, 117, 138, 141, 156, 157, 163, 166, 172, 179, 244, 245, 246, 247, 269, 289, 290, 291, 292, 294, 295, 298, 299, 301, 302, 305, 318, 319, 320, 321, 322, 325, 326, 328, 329, 341, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 384, 388, 389, 395, 398, 399, 400, 401, 403, 404, 405, 409, 410, 415, 416, 417, 418, 420, 423, 424], "orbit": [0, 1, 2, 4, 10, 12, 13, 14, 33, 56, 74, 156, 244, 245, 246, 247, 248, 269, 318, 319, 320, 321, 322, 325, 326, 328, 329, 353, 355, 356, 358, 360, 361, 362, 366, 367, 368, 369, 370, 374, 377, 378, 379, 380, 384, 388, 389, 395, 409, 410, 414, 415, 416, 417, 418, 420, 424], "project": [0, 1, 2, 3, 4, 10, 11, 12, 19, 20, 31, 32, 33, 41, 60, 61, 66, 74, 75, 78, 80, 81, 82, 134, 135, 136, 138, 156, 157, 158, 166, 192, 196, 202, 203, 269, 326, 328, 345, 349, 351, 354, 356, 357, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 377, 378, 384, 389, 406, 409, 410, 413, 414, 415, 416, 418, 419, 420], "font": [0, 1, 356, 367], "size": [0, 1, 2, 3, 4, 6, 59, 63, 66, 74, 93, 131, 283, 284, 292, 302, 311, 325, 354, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 378, 385, 396, 403, 418, 419, 424], "15": [0, 2, 356, 360, 363, 367, 368, 379, 399, 400, 403, 404, 406, 411, 424], "pad": [0, 2, 75, 83, 84, 356, 367], "20": [0, 2, 345, 353, 356, 367, 380, 393, 396, 399, 400, 403, 406], "tick": [0, 2, 91, 96, 97, 252, 255, 273, 276, 282, 283, 284, 356, 367, 421], "10": [0, 1, 2, 3, 328, 345, 356, 360, 363, 367, 368, 373, 374, 377, 378, 379, 380, 383, 393, 395, 396, 399, 400, 406, 411, 418, 419, 420], "colormap": [0, 1, 2, 3, 4, 6, 130, 356, 367, 374, 378, 384, 414], "us": [0, 1, 2, 3, 4, 5, 6, 7, 38, 63, 66, 75, 83, 89, 125, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 150, 157, 166, 176, 179, 192, 202, 216, 220, 221, 224, 230, 231, 232, 233, 234, 235, 236, 237, 265, 281, 285, 286, 287, 289, 290, 293, 295, 314, 315, 317, 325, 326, 328, 329, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 351, 353, 354, 355, 356, 359, 362, 363, 367, 370, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 395, 396, 399, 400, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424], "jet": [0, 1, 2, 3, 4, 6, 66, 282, 356, 367, 378, 384, 389, 412, 414], "scale": [0, 1, 2, 3, 4, 6, 289, 299, 303, 306, 355, 356, 367, 378, 395, 398, 404, 405], "bar": [0, 1, 2, 3, 6, 269, 325, 356, 367, 378], "none": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 19, 20, 33, 59, 63, 66, 67, 70, 74, 77, 83, 84, 90, 91, 99, 100, 114, 125, 126, 128, 130, 146, 147, 148, 149, 153, 154, 156, 162, 185, 186, 187, 188, 192, 193, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 262, 263, 264, 265, 266, 267, 269, 272, 273, 275, 276, 279, 280, 281, 282, 283, 284, 290, 291, 293, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 331, 356, 367, 377, 378, 379, 380, 383, 384, 395, 406, 412, 413, 417, 419, 424], "fermi": [0, 1, 2, 5, 6, 10, 19, 34, 35, 37, 66, 71, 74, 75, 76, 79, 135, 136, 137, 138, 143, 148, 162, 181, 187, 240, 260, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 328, 329, 338, 339, 341, 348, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 384, 385, 386, 387, 388, 389, 390, 391, 393, 406, 409, 410, 411, 412, 415, 416, 417, 419, 420, 424], "dot": [0, 2, 6, 240, 356, 367, 374, 378, 399, 400, 401, 402, 403], "1": [0, 1, 2, 3, 4, 6, 10, 11, 12, 13, 19, 33, 65, 75, 76, 83, 84, 89, 123, 125, 156, 162, 187, 188, 193, 194, 240, 244, 245, 247, 248, 282, 289, 305, 307, 319, 320, 325, 326, 327, 328, 329, 331, 345, 348, 349, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 366, 367, 370, 373, 374, 377, 378, 379, 380, 384, 385, 386, 387, 389, 390, 393, 394, 395, 396, 399, 400, 401, 402, 403, 406, 413, 417, 418, 419, 420, 424], "If": [0, 2, 6, 70, 179, 180, 238, 258, 289, 293, 298, 307, 326, 327, 328, 329, 345, 351, 356, 367, 385, 406, 407, 412, 413, 415, 417, 418, 419], "true": [0, 1, 2, 3, 4, 6, 13, 33, 38, 59, 90, 91, 144, 145, 177, 178, 192, 218, 246, 258, 259, 282, 291, 296, 301, 302, 303, 304, 305, 307, 308, 312, 316, 317, 319, 320, 321, 322, 324, 325, 326, 328, 331, 346, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 395, 396, 399, 400, 401, 402, 403, 412, 413, 415, 417, 422, 424], "shown": [0, 2, 4, 6, 328, 356, 367], "fals": [0, 1, 2, 3, 4, 6, 19, 38, 59, 93, 246, 247, 248, 289, 290, 291, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 349, 353, 356, 358, 367, 377, 378, 383, 384, 385, 386, 387, 388, 389, 390, 395, 399, 400, 402, 403, 412, 413, 414, 417, 419, 424], "which": [0, 2, 4, 6, 70, 83, 129, 156, 328, 329, 341, 349, 351, 354, 355, 356, 359, 362, 367, 370, 389, 406, 411, 412, 416, 417, 418, 421, 424], "axi": [0, 1, 2, 4, 6, 71, 307, 328, 356, 367, 417], "both": [0, 2, 6, 298, 328, 355, 356, 359, 363, 367, 374, 406, 409, 410, 412, 415, 424], "should": [0, 1, 2, 4, 6, 10, 33, 93, 131, 191, 211, 303, 304, 306, 308, 327, 328, 345, 356, 367, 394, 406, 411, 412, 413, 417, 419, 424], "drawn": [0, 2, 6, 356, 367], "grei": [0, 2, 6, 356, 367, 401], "solid": [0, 2, 3, 6, 83, 356, 367, 378], "draw": [0, 2, 6, 240, 260, 356, 367], "major": [0, 2, 6, 276, 356, 359, 367, 406], "minor": [0, 2, 6, 276, 356, 367], "uparrow": [0, 2, 6, 356, 367, 415, 420], "downarrow": [0, 2, 6, 356, 367, 415, 420], "dash": [0, 2, 3, 6, 356, 367, 378], "0": [0, 1, 2, 3, 4, 6, 10, 12, 13, 59, 75, 76, 83, 89, 123, 125, 156, 191, 193, 194, 260, 283, 289, 294, 298, 302, 305, 307, 319, 320, 325, 326, 328, 329, 331, 345, 346, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374, 375, 377, 378, 379, 381, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 406, 411, 412, 415, 417, 418, 419, 420, 421, 422, 424], "style": [0, 1, 2, 4, 6, 240, 356, 362, 367, 370], "point": [0, 1, 2, 4, 6, 10, 41, 42, 55, 57, 59, 83, 85, 86, 87, 88, 91, 114, 136, 138, 139, 144, 184, 191, 263, 265, 266, 267, 281, 325, 330, 353, 354, 355, 356, 359, 367, 374, 377, 378, 379, 380, 384, 393, 396, 399, 400, 401, 402, 403, 409, 410, 414, 416, 417, 418, 420, 424], "o": [0, 2, 6, 283, 284, 328, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 399, 400, 401, 402, 403, 411, 412, 415], "v": [0, 2, 6, 83, 84, 328, 356, 367, 374, 411, 412, 415, 418], "d": [0, 2, 6, 10, 12, 21, 22, 23, 24, 36, 37, 328, 356, 357, 367, 406, 411, 412, 414, 415], "2": [0, 1, 2, 3, 4, 6, 10, 12, 13, 32, 43, 75, 76, 83, 89, 156, 328, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 383, 384, 386, 387, 388, 389, 399, 400, 401, 402, 403, 406, 417, 418, 419, 420, 424], "file": [0, 2, 6, 98, 146, 148, 150, 152, 153, 162, 166, 169, 176, 177, 179, 180, 181, 184, 185, 187, 193, 231, 232, 234, 235, 236, 237, 268, 289, 290, 293, 296, 297, 298, 308, 312, 314, 315, 317, 324, 325, 327, 328, 331, 332, 336, 341, 343, 344, 345, 346, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 396, 397, 398, 399, 404, 405, 406, 409, 410, 411, 412, 413, 415, 418, 419, 420, 422, 424], "name": [0, 2, 6, 96, 131, 132, 153, 162, 166, 250, 252, 253, 255, 268, 271, 273, 274, 291, 296, 297, 308, 312, 317, 324, 325, 326, 356, 367, 406, 411, 412, 419, 424], "save": [0, 2, 3, 6, 72, 166, 289, 312, 325, 326, 328, 329, 349, 356, 367, 377, 378, 379, 380, 400, 403, 412, 414, 417, 418, 424], "figur": [0, 2, 3, 6, 328, 341, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 412, 414, 424], "null": [0, 2, 6, 356, 367], "displai": [0, 2, 4, 6, 354, 356, 367, 402, 406, 414], "weight": [0, 2, 6, 19, 20, 63, 64, 65, 135, 138, 221, 263, 265, 266, 267, 348, 356, 367, 416, 419, 420, 424], "width": [0, 2, 4, 6, 263, 265, 267, 356, 367, 396, 418, 424], "height": [0, 2, 6, 356, 367], "inch": [0, 2, 6, 356, 367, 374, 378], "9": [0, 2, 6, 282, 283, 344, 354, 356, 359, 360, 367, 368, 378, 379, 380, 389, 395, 399, 411, 420], "6": [0, 1, 2, 4, 6, 10, 13, 156, 328, 346, 353, 354, 356, 357, 358, 361, 362, 363, 366, 367, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 388, 389, 393, 396, 399, 400, 406, 411, 412, 414, 418, 420, 421], "resolut": [0, 2, 6, 356, 359, 367], "per": [0, 1, 2, 6, 157, 290, 295, 356, 367, 374, 378], "": [0, 2, 6, 10, 12, 13, 143, 156, 294, 302, 328, 344, 353, 354, 355, 356, 367, 383, 395, 396, 399, 400, 401, 403, 406, 411, 415, 417, 418, 419, 420], "control": [1, 3, 4, 5, 75, 348, 359, 363, 378, 406], "surfac": [1, 5, 7, 66, 71, 74, 75, 77, 78, 79, 80, 81, 82, 83, 89, 126, 127, 128, 129, 130, 131, 132, 136, 137, 138, 139, 240, 317, 318, 319, 320, 321, 322, 329, 338, 339, 341, 355, 378, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 405, 406, 409, 410, 411, 412, 417, 420], "color": [1, 4, 59, 66, 74, 125, 130, 131, 240, 243, 263, 265, 267, 269, 273, 283, 325, 329, 354, 355, 356, 358, 362, 367, 370, 374, 377, 378, 384, 393, 395, 396, 399, 400, 401, 402, 403, 411, 412, 414, 415, 417, 418, 424], "spin": [1, 2, 3, 4, 10, 13, 18, 33, 38, 58, 66, 74, 80, 82, 136, 150, 156, 159, 243, 244, 245, 246, 247, 248, 258, 259, 263, 265, 266, 267, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 341, 346, 349, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 371, 373, 374, 376, 377, 378, 381, 382, 383, 384, 386, 387, 388, 391, 393, 394, 395, 396, 405, 406, 409, 410, 413, 415, 416, 418, 420, 424], "polar": [1, 352, 353, 354, 355, 356, 357, 358, 359, 363, 364, 365, 366, 367, 371, 373, 374, 377, 382, 383, 384, 386, 387, 388, 391, 394, 395, 396, 405, 411, 412, 413, 420, 424], "opac": [1, 4, 356, 367], "how": [1, 59, 91, 143, 349, 354, 356, 367, 374, 378, 382, 384, 391, 400, 402, 405, 406, 418], "mani": [1, 91, 406, 411, 412, 418, 419], "zone": [1, 4, 7, 59, 83, 133, 138, 413, 416, 417, 424], "gener": [1, 7, 83, 133, 137, 138, 139, 142, 146, 309, 313, 315, 327, 328, 329, 330, 340, 341, 342, 344, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 399, 400, 401, 402, 403, 405, 406, 409, 410, 413, 415, 417, 418, 419, 420], "thi": [1, 5, 7, 10, 12, 15, 19, 32, 38, 43, 44, 59, 63, 66, 71, 74, 75, 83, 89, 125, 128, 137, 138, 139, 142, 143, 144, 146, 148, 150, 152, 156, 166, 169, 197, 210, 211, 212, 213, 218, 224, 229, 230, 233, 287, 293, 295, 302, 308, 310, 311, 313, 317, 325, 326, 327, 328, 329, 331, 332, 341, 344, 345, 347, 349, 351, 353, 354, 355, 356, 359, 363, 367, 373, 374, 378, 379, 383, 384, 385, 386, 387, 388, 389, 390, 393, 395, 396, 399, 400, 401, 402, 403, 406, 407, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424], "i": [1, 4, 5, 13, 15, 19, 21, 22, 23, 24, 25, 32, 34, 35, 36, 37, 38, 39, 40, 44, 60, 61, 63, 65, 66, 74, 75, 83, 114, 123, 125, 128, 130, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 150, 152, 166, 176, 191, 211, 218, 231, 232, 233, 234, 235, 236, 237, 238, 243, 258, 265, 285, 286, 287, 288, 289, 290, 291, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 317, 325, 326, 327, 328, 329, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 395, 396, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 424], "list": [1, 2, 4, 7, 8, 13, 19, 20, 21, 23, 31, 32, 33, 34, 36, 39, 42, 49, 66, 67, 71, 74, 75, 76, 77, 83, 84, 85, 89, 91, 96, 97, 99, 103, 116, 121, 125, 127, 129, 131, 138, 141, 150, 152, 156, 157, 160, 161, 163, 164, 165, 168, 170, 172, 173, 174, 205, 219, 228, 242, 243, 244, 245, 246, 247, 248, 251, 252, 254, 255, 258, 259, 262, 263, 265, 266, 267, 272, 273, 275, 276, 290, 292, 294, 299, 301, 302, 303, 304, 305, 307, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 331, 348, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 399, 400, 402, 403, 406, 412, 413, 415, 416, 417, 418, 419], "direct": [1, 4, 50, 51, 52, 75, 77, 83, 85, 86, 87, 88, 289, 290, 291, 292, 296, 301, 303, 304, 306, 307, 308, 328, 330, 393, 402, 406, 411, 412, 413, 416, 417, 419], "ex": 1, "high": [1, 4, 75, 299, 300, 354, 355, 359, 384, 412, 413], "algorithmus": 1, "either": [1, 406], "normal": [1, 4, 75, 76, 125, 130, 406, 417, 418], "interpol": [1, 4, 10, 43, 71, 74, 83, 89, 137, 138, 153, 162, 187, 193, 326, 412], "factor": [1, 4, 10, 75, 83, 153, 162, 187, 193, 289, 299, 303, 304, 306, 395, 403, 424], "wirefram": [1, 4, 384, 418], "brillouin": [1, 4, 7, 59, 83, 133, 138, 413, 417, 424], "3": [1, 3, 4, 7, 10, 12, 13, 19, 21, 22, 23, 24, 26, 36, 37, 46, 47, 63, 83, 99, 125, 127, 156, 291, 292, 303, 304, 328, 348, 353, 354, 356, 357, 359, 370, 374, 377, 378, 379, 380, 383, 384, 395, 396, 399, 400, 402, 403, 406, 408, 417, 418, 419, 420, 424], "5": [1, 4, 10, 12, 13, 83, 110, 111, 112, 113, 125, 156, 192, 328, 345, 346, 349, 351, 353, 356, 357, 358, 359, 361, 362, 363, 366, 367, 369, 370, 373, 374, 377, 378, 379, 383, 384, 385, 386, 387, 388, 389, 393, 399, 400, 401, 402, 403, 406, 411, 412, 414, 418, 420, 421, 424], "linewidth": [1, 240, 282, 356, 367, 378], "textur": [1, 3, 4, 74, 80, 82, 136, 318, 319, 320, 321, 322, 378, 380, 393, 406, 411, 412, 420], "ax": [1, 3, 4, 238, 239, 258, 259, 281, 282, 283, 284, 325, 326, 328, 354, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 378, 401, 412, 414, 424], "limit": [1, 4, 272, 275, 328, 354, 356, 367, 374, 378, 384, 406, 412], "energi": [1, 4, 10, 11, 17, 19, 66, 70, 71, 74, 75, 134, 135, 136, 138, 148, 159, 162, 181, 187, 207, 222, 260, 263, 265, 281, 317, 318, 321, 324, 325, 326, 328, 329, 345, 351, 354, 355, 359, 366, 367, 368, 369, 370, 374, 377, 378, 379, 383, 384, 385, 386, 387, 388, 389, 390, 409, 410, 412, 416, 417, 418, 420, 424], "kx": [1, 4, 50, 51, 384], "label": [1, 2, 3, 4, 19, 20, 68, 69, 91, 242, 250, 253, 262, 271, 274, 325, 328, 348, 349, 351, 356, 359, 363, 367, 378, 396, 399, 400, 401, 402, 403, 412, 415, 416, 420, 424], "ky": [1, 4, 52, 384], "e": [1, 83, 181, 274, 298, 301, 302, 307, 328, 349, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 383, 401, 406, 415, 417, 419], "kz": [1, 4, 353, 377, 378, 379, 380, 384], "linewdith": 1, "th": [1, 73, 406], "scalar": [1, 4, 26, 27, 125, 126, 131, 137, 138, 139, 395, 399, 400, 402, 403], "titl": [1, 4, 156, 269, 270, 325, 355, 356, 367, 395, 399, 400, 401, 402, 403, 406, 415, 417, 418, 424], "ital": 1, "bold": 1, "4": [1, 4, 10, 12, 13, 32, 59, 156, 328, 353, 354, 356, 357, 358, 359, 361, 362, 363, 366, 367, 369, 370, 374, 377, 378, 379, 383, 384, 388, 389, 395, 399, 402, 403, 406, 411, 414, 418, 420, 424], "x": [1, 2, 3, 4, 74, 83, 85, 86, 132, 250, 251, 271, 272, 273, 301, 303, 307, 328, 330, 344, 346, 348, 349, 367, 378, 379, 380, 393, 401, 408, 412, 417, 418, 419, 420], "posit": [1, 4, 89, 97, 113, 252, 255, 273, 289, 291, 292, 299, 301, 303, 304, 307, 312, 385, 399, 400, 401, 402, 403], "01": [1, 4, 298, 329, 364, 371, 377, 378, 379, 380, 381, 384, 403, 417], "y": [1, 2, 3, 4, 74, 83, 85, 87, 132, 253, 254, 274, 275, 276, 301, 303, 307, 328, 330, 367, 378, 379, 380, 393, 396, 401, 402, 417, 418, 419, 420], "outlin": 1, "white": [1, 4, 384, 422], "background": [1, 4], "36": [1, 4, 384, 396, 399, 400, 402, 403, 424], "number": [1, 4, 10, 13, 16, 17, 18, 33, 50, 51, 52, 53, 54, 55, 56, 57, 58, 75, 86, 87, 88, 95, 103, 110, 111, 117, 118, 131, 163, 172, 244, 245, 247, 248, 290, 303, 304, 318, 321, 328, 330, 359, 395, 406, 412, 414, 416, 418, 420, 421, 422], "05": [1, 4, 110, 111, 112, 113, 192, 331, 371, 384, 391, 396, 399, 400, 402, 403, 404], "step": [1, 4, 179, 205, 209, 212, 219, 227, 228, 349, 351, 399, 400, 402, 403, 406], "clip": [1, 83], "larg": [1, 359, 401, 413, 419], "term": [1, 311, 383, 406], "show": [1, 59, 319, 320, 321, 322, 325, 326, 328, 345, 348, 349, 351, 356, 358, 367, 378, 382, 384, 385, 386, 388, 389, 390, 391, 393, 395, 396, 400, 401, 402, 405, 406, 412, 414, 415, 417, 424], "k": [1, 26, 32, 55, 59, 136, 138, 140, 144, 179, 191, 271, 281, 340, 341, 346, 348, 354, 356, 357, 358, 359, 360, 361, 362, 363, 373, 374, 393, 401, 409, 410, 413, 414, 416, 417, 418, 420, 424], "_": [1, 363, 373, 374, 377, 378, 379, 380, 393, 396, 420], "aa": [1, 3, 378], "ev": [1, 274, 354, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 386, 387, 394, 417], "add": [1, 3, 68, 69, 75, 281, 289, 295, 299, 304, 326, 345, 349, 378, 402, 406, 412], "plane": [1, 136, 138, 329, 385, 393, 411, 412, 417, 418], "level": [1, 4, 66, 71, 74, 260, 281, 289, 290, 299, 300, 313, 314, 325, 345, 352, 355, 359, 364, 380, 386, 387, 405, 411, 412, 418, 419], "25": [1, 351, 383, 387, 399, 400, 403], "text": [1, 2, 197, 229, 367], "whether": [1, 4, 328, 355, 406, 424], "plotter": [1, 4, 143, 285, 286, 288, 354, 359, 363, 393, 395, 396, 399, 400, 402, 403], "render": [1, 4, 59, 383, 384, 385, 386, 387, 388, 389, 390, 393, 395, 396, 399, 400, 402, 403, 406, 418], "offscreen": [1, 4], "caemera": 1, "iso": [1, 4, 329, 384, 417], "isoslid": [1, 4, 382, 391, 405], "modern": [1, 4, 384], "slice": [1, 4], "wheather": 1, "cross": [1, 4, 406], "section": [1, 4, 143, 233, 341, 344, 345, 349, 356, 362, 367, 370, 374, 378, 384, 406, 415, 417, 418, 420], "area": [1, 4, 328, 385, 406, 415], "green": [2, 367], "cyan": [2, 367], "magenta": [2, 367], "yellow": [2, 367], "orang": [2, 367, 415], "purpl": [2, 367], "brown": [2, 367], "navi": [2, 367, 377], "maroon": [2, 367], "oliv": [2, 367], "arial": [2, 367], "16": [2, 325, 353, 360, 367, 368, 380, 383, 399, 400, 406, 411], "total": [2, 10, 11, 134, 138, 158, 159, 203, 204, 290, 328, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 412, 413, 415, 419, 420], "up": [2, 10, 150, 159, 191, 298, 362, 367, 370, 408, 412, 418, 419, 424], "down": [2, 10, 38, 159, 362, 367, 370, 412, 418, 419, 424], "program": [2, 367, 406], "print": [2, 318, 319, 320, 321, 322, 323, 326, 328, 329, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 395, 399, 400, 401, 402, 403, 412, 417, 424], "detail": [2, 134, 135, 136, 137, 140, 141, 179, 328, 345, 357, 360, 361, 362, 366, 367, 368, 369, 370, 396, 406, 412, 418], "inform": [2, 4, 125, 134, 135, 138, 140, 141, 144, 150, 153, 162, 169, 176, 179, 212, 219, 221, 224, 225, 296, 341, 345, 351, 367, 378, 379, 393, 395, 396, 406, 411, 412, 415, 416, 418, 419, 420], "rang": [2, 263, 265, 318, 321, 354, 367, 386, 387, 393, 399, 419, 424], "stack": [2, 246, 247, 248, 328, 367, 368, 369, 373, 374, 420], "mode": [2, 4, 71, 318, 319, 320, 321, 322, 325, 326, 328, 329, 341, 345, 348, 349, 351, 355, 356, 358, 359, 363, 367, 374, 378, 379, 380, 383, 384, 385, 406, 411, 412, 414, 417, 420, 424], "boolean": [3, 15, 19, 44, 59, 93, 114, 177, 192, 240, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 367, 378, 412, 413, 416, 417], "legend": [3, 328, 356, 363, 367, 378, 401], "arrow": [3, 4, 74, 329, 378, 379, 395, 417], "repres": [3, 4, 7, 21, 22, 23, 24, 36, 37, 99, 125, 131, 150, 198, 199, 200, 228, 246, 328, 355, 378, 406, 415, 418, 424], "densiti": [3, 5, 10, 13, 32, 38, 134, 138, 143, 153, 158, 159, 166, 203, 233, 238, 243, 244, 287, 325, 328, 334, 337, 341, 345, 347, 348, 367, 371, 374, 378, 409, 410, 411, 412, 419, 420, 423], "z": [3, 4, 71, 74, 83, 85, 88, 132, 301, 303, 307, 329, 330, 353, 354, 356, 359, 363, 367, 377, 378, 379, 380, 384, 393, 417, 418, 419, 420], "imag": [3, 83, 378, 383, 384, 385, 386, 387, 388, 389, 390, 393, 395, 396, 399, 400, 402, 403, 408, 412, 418], "k_": [3, 378, 393], "class": [4, 7, 10, 19, 66, 74, 75, 83, 90, 99, 125, 134, 135, 137, 138, 139, 141, 142, 144, 146, 148, 150, 153, 166, 175, 176, 177, 179, 185, 187, 193, 238, 258, 279, 288, 289, 291, 292, 293, 296, 299, 300, 308, 309, 310, 311, 314, 315, 316, 317, 383, 384, 385, 386, 387, 388, 389, 390, 401, 406, 416, 418, 421, 423], "pyprocar": [4, 5, 32, 63, 92, 93, 122, 123, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 155, 156, 157, 160, 161, 164, 165, 168, 170, 173, 174, 192, 201, 202, 231, 232, 233, 234, 235, 236, 237, 285, 286, 287, 288, 298, 313, 314, 315, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 373, 374, 376, 377, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 399, 400, 401, 402, 403, 405, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424], "cfg": [4, 5, 143, 356, 367, 378, 384], "fermi_surface_3d": [4, 5, 384], "fermisurface3dconfig": 4, "plot_typ": [4, 384], "base": [4, 5, 294, 302, 355, 396, 406, 412, 416], "plottyp": [4, 384], "custom_set": [4, 384], "type": [4, 5, 75, 83, 138, 143, 197, 287, 313, 326, 341, 353, 359, 400, 403, 406, 411, 412, 417], "dict": [4, 112, 158, 159, 179, 203, 204, 221, 225, 246, 290, 298, 325, 326, 328, 412, 415], "str": [4, 14, 59, 66, 71, 75, 76, 83, 84, 98, 99, 110, 121, 128, 130, 131, 132, 153, 156, 162, 166, 167, 175, 176, 177, 179, 180, 185, 186, 187, 188, 192, 193, 229, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 260, 262, 268, 269, 270, 271, 273, 274, 289, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 302, 308, 309, 310, 312, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 331, 332, 412, 413, 417, 419, 422], "ani": [4, 7, 10, 11, 210, 213, 355, 359, 406, 412, 414, 417, 422], "factori": 4, "fermisurfacemod": 4, "plain": [4, 243, 264, 325, 326, 328, 329, 345, 348, 349, 351, 354, 355, 356, 358, 359, 363, 367, 368, 369, 374, 378, 379, 380, 382, 383, 384, 385, 390, 391, 405, 409, 410, 414, 417, 418, 420, 424], "properti": [4, 5, 15, 16, 17, 18, 21, 22, 23, 24, 25, 34, 35, 36, 37, 39, 40, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 115, 116, 117, 118, 120, 121, 124, 127, 129, 155, 157, 158, 159, 160, 161, 163, 164, 165, 168, 170, 172, 173, 174, 179, 181, 183, 184, 189, 190, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 216, 217, 218, 219, 220, 221, 222, 224, 226, 227, 228, 230, 299, 300, 356, 367, 374, 383, 384, 385, 386, 387, 388, 389, 390, 406, 418], "fermisurfaceproperti": [4, 384], "fermi_spe": [4, 79, 353, 383, 384, 385, 386, 387, 388, 389, 390, 395], "background_color": [4, 384], "plotter_offscreen": [4, 384], "bool": [4, 13, 15, 19, 33, 38, 44, 59, 91, 93, 114, 177, 192, 246, 247, 248, 258, 259, 289, 290, 291, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 331, 412, 413, 417, 419, 424], "plotter_camera_po": [4, 384], "int": [4, 7, 8, 10, 11, 13, 16, 17, 18, 19, 20, 33, 50, 51, 52, 53, 54, 55, 56, 57, 58, 71, 74, 75, 76, 77, 83, 84, 86, 87, 88, 95, 111, 117, 118, 156, 162, 163, 172, 187, 188, 243, 244, 245, 246, 247, 248, 251, 252, 254, 255, 258, 259, 263, 265, 266, 267, 273, 290, 294, 302, 305, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 331, 412, 413, 417, 419], "surface_cmap": [4, 384, 389], "surface_color": [4, 384], "surface_opac": [4, 383, 384], "float": [4, 7, 10, 11, 13, 19, 20, 31, 32, 33, 59, 70, 75, 76, 83, 84, 85, 99, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 116, 124, 125, 127, 130, 162, 187, 188, 192, 193, 194, 240, 260, 263, 265, 272, 275, 276, 290, 298, 301, 303, 304, 307, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 353, 412, 417], "surface_clim": [4, 353, 384], "surface_bands_color": [4, 384], "spin_color": [4, 356, 367, 384, 389], "tupl": [4, 9, 77, 89, 125, 319, 320], "arrow_s": [4, 378, 379, 380, 384, 385, 390], "texture_cmap": [4, 384], "texture_color": [4, 384], "texture_s": [4, 384], "texture_scal": [4, 384], "texture_opac": [4, 384], "brillouin_zone_styl": [4, 384], "brillouin_zone_line_width": [4, 384], "brillouin_zone_color": [4, 384], "brillouin_zone_opac": [4, 384], "add_ax": [4, 384], "x_axes_label": [4, 384], "y_axes_label": [4, 384], "z_axes_label": [4, 384], "axes_label_color": [4, 384], "axes_line_width": [4, 384], "add_scalar_bar": [4, 384], "scalar_bar_label": [4, 384], "scalar_bar_ital": [4, 384], "scalar_bar_bold": [4, 384], "scalar_bar_titl": [4, 353, 384], "scalar_bar_title_font_s": [4, 384], "scalar_bar_label_font_s": [4, 384], "scalar_bar_position_x": [4, 353, 384], "scalar_bar_position_i": [4, 384], "scalar_bar_color": [4, 384], "property_nam": [4, 321, 353, 384], "fermi_toler": [4, 75, 384], "extended_zone_direct": [4, 77, 353, 384], "supercel": [4, 7, 75, 76, 309, 310, 315, 359, 384, 398, 404, 405, 419, 424], "projection_accuraci": [4, 75, 76, 384], "interpolation_factor": [4, 10, 11, 43, 75, 76, 83, 84, 162, 187, 188, 325, 326, 384, 412, 424], "max_dist": [4, 75, 76, 384], "cross_section_slice_linewidth": [4, 384, 385], "cross_section_slice_show_area": [4, 384], "isoslider_titl": [4, 384], "isoslider_styl": [4, 384], "isoslider_color": [4, 384], "orbit_gif_n_point": [4, 384], "orbit_gif_step": [4, 384], "orbit_mp4_n_point": [4, 384], "orbit_mp4_step": [4, 384], "sourc": [4, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 38, 41, 43, 49, 59, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 92, 93, 98, 99, 100, 110, 111, 112, 113, 114, 119, 122, 123, 125, 126, 128, 130, 131, 132, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 162, 166, 167, 169, 171, 175, 176, 177, 178, 179, 180, 182, 185, 186, 187, 188, 191, 192, 193, 194, 197, 210, 211, 212, 213, 214, 215, 223, 225, 229, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 399, 400, 401, 402, 403, 405, 406, 407, 409, 410, 412, 413, 417, 418, 419, 422, 424], "baseconfig": 4, "plot": [4, 5, 32, 38, 59, 66, 68, 69, 72, 73, 74, 119, 136, 138, 140, 143, 238, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 258, 261, 262, 263, 264, 265, 266, 267, 268, 277, 279, 281, 285, 286, 287, 288, 317, 318, 319, 320, 321, 322, 325, 326, 328, 329, 331, 334, 335, 337, 338, 339, 341, 346, 352, 358, 364, 365, 371, 375, 376, 381, 382, 383, 391, 395, 401, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420, 422], "differ": [4, 121, 298, 328, 345, 348, 349, 351, 356, 360, 363, 367, 368, 374, 378, 380, 384, 400, 402, 406, 412, 413, 414, 415, 418], "paramet": [4, 7, 10, 13, 19, 26, 33, 38, 41, 43, 49, 59, 63, 66, 70, 71, 74, 75, 77, 83, 91, 92, 93, 98, 99, 110, 111, 112, 113, 114, 122, 123, 125, 128, 130, 131, 132, 150, 152, 153, 156, 162, 166, 176, 177, 179, 180, 185, 187, 192, 193, 216, 230, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 260, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 349, 351, 355, 396, 406, 412, 413, 414, 415, 417, 419, 422, 424], "option": [4, 5, 10, 13, 19, 33, 59, 63, 66, 71, 74, 75, 77, 91, 98, 110, 111, 112, 113, 114, 123, 128, 130, 132, 150, 153, 156, 162, 166, 177, 179, 180, 185, 187, 192, 193, 238, 240, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 258, 260, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 331, 344, 345, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 406, 412, 413, 417, 419, 424], "default": [4, 7, 10, 13, 19, 33, 59, 63, 66, 71, 74, 75, 77, 83, 91, 98, 110, 111, 112, 113, 114, 123, 125, 128, 130, 132, 150, 153, 156, 162, 166, 177, 179, 180, 185, 187, 192, 193, 238, 240, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 258, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 290, 291, 293, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 351, 355, 362, 370, 373, 374, 379, 383, 384, 385, 386, 387, 388, 389, 390, 412, 413, 415, 417, 419], "defin": [4, 99, 328, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 396, 399, 400, 402, 403, 406, 412, 415, 417, 418, 419, 420], "represent": [4, 7, 46, 47, 83, 416, 418], "ar": [4, 5, 12, 38, 59, 63, 70, 74, 83, 91, 125, 138, 159, 166, 229, 246, 287, 289, 291, 298, 299, 301, 307, 326, 328, 329, 341, 345, 346, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 399, 400, 401, 403, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420], "parametr": [4, 244, 245, 266, 328, 341, 354, 355, 356, 358, 359, 363, 367, 373, 374, 378, 379, 380, 383, 384, 385, 386, 387, 390, 411, 412, 414, 420], "spin_textur": [4, 318, 319, 320, 321, 322, 329, 353, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 405, 417], "appear": [4, 374, 378, 384], "set": [4, 5, 71, 83, 130, 131, 132, 183, 213, 250, 251, 252, 253, 254, 255, 269, 270, 271, 272, 273, 274, 275, 276, 289, 323, 327, 328, 329, 344, 345, 346, 348, 349, 351, 353, 356, 357, 358, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 396, 400, 401, 409, 410, 411, 412, 413, 414, 415, 417, 418, 422, 424], "determin": [4, 19, 33, 44, 59, 91, 93, 114, 177, 329, 355, 406, 417], "specifi": [4, 180, 197, 317, 328, 346, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 406, 412, 415], "camera": [4, 418], "specif": [4, 328, 341, 348, 354, 355, 384, 401, 402, 406, 407, 411, 412, 415, 418], "each": [4, 5, 10, 21, 22, 23, 24, 25, 34, 35, 36, 37, 39, 40, 60, 61, 65, 83, 85, 116, 125, 134, 138, 205, 215, 219, 262, 263, 265, 266, 267, 289, 290, 299, 303, 304, 307, 328, 355, 359, 399, 401, 406, 411, 412, 413, 414, 415, 416, 418, 419, 420], "band": [4, 5, 19, 20, 21, 22, 23, 24, 25, 41, 54, 63, 66, 67, 70, 75, 83, 91, 95, 135, 136, 138, 140, 143, 150, 166, 167, 169, 192, 196, 238, 243, 258, 264, 265, 268, 270, 279, 280, 285, 287, 288, 318, 319, 320, 321, 322, 324, 325, 326, 329, 331, 335, 339, 341, 346, 348, 354, 355, 356, 359, 364, 370, 373, 374, 378, 380, 383, 389, 394, 396, 409, 410, 411, 415, 417, 418, 419, 420, 421], "map": [4, 91, 125, 130, 131, 179, 355, 411, 412, 417], "element": [4, 10, 160, 161, 164, 168, 170, 173, 210, 213, 262, 289, 290, 291, 292, 295, 298, 299, 301, 302, 328, 400, 402, 419], "flag": [4, 290, 327, 344, 345, 346, 348, 349, 351, 413, 424], "appli": [4, 7, 41, 83, 307, 317, 353, 359, 395, 406, 411, 412, 422], "ad": [4, 297, 308, 312, 348, 406, 418], "advanc": 4, "toler": [4, 75, 110, 111, 112, 113, 298, 396], "search": [4, 70, 75, 359, 386, 387, 410], "around": [4, 70, 359, 386, 387, 420], "extend": [4, 77, 359, 406], "accuraci": [4, 75], "maximum": [4, 130, 328, 412, 417, 419], "distanc": [4, 298, 401, 421, 424], "keep": [4, 181, 328, 406, 411, 419], "from": [4, 13, 38, 74, 125, 128, 133, 138, 139, 142, 146, 148, 153, 156, 166, 179, 289, 305, 308, 325, 326, 327, 328, 345, 355, 363, 380, 382, 391, 393, 396, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 422, 424], "isosurfac": [4, 75, 84, 85, 86, 87, 88, 89, 137, 138, 387, 418], "center": [4, 359, 385, 393, 406, 417, 420], "view": [4, 406, 418], "under": [4, 328, 406, 415], "slider": [4, 318, 321], "interfac": [4, 143, 359, 406, 418], "miscellan": 4, "creat": [4, 83, 125, 310, 311, 315, 328, 331, 345, 348, 349, 351, 363, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 396, 412, 418, 419], "gif": [4, 387], "anim": 4, "between": [4, 83, 85, 91, 102, 105, 109, 125, 298, 359, 401, 406, 412, 422], "mp4": 4, "method": [4, 7, 10, 19, 59, 63, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 90, 92, 93, 99, 114, 119, 122, 125, 144, 146, 148, 150, 152, 153, 162, 166, 169, 175, 177, 179, 180, 185, 187, 192, 193, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 289, 295, 299, 308, 309, 310, 312, 316, 317, 318, 319, 320, 321, 322, 383, 384, 385, 386, 387, 388, 389, 390, 406, 412, 416, 420], "__post_init__": 4, "post": [4, 341, 363, 373, 374, 377, 378, 379, 380, 393, 396, 406, 409, 410, 419], "initi": [4, 8, 76, 84, 126, 155, 180, 217, 317, 385, 395, 402, 406], "addit": [4, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 406, 420], "like": [4, 10, 74, 289, 290, 302, 313, 314, 345, 355, 406, 411, 412, 416], "exampl": [4, 83, 125, 156, 328, 345, 348, 349, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 397, 398, 399, 400, 401, 402, 403, 406, 407, 411, 412, 415, 417, 418, 419, 420], "To": [4, 125, 327, 344, 345, 346, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 406, 408, 412, 413, 415, 417, 418, 420], "basic": [4, 345, 406, 409, 410, 412, 415], "config": 4, "custom": [4, 5, 326, 374, 378, 384, 406, 412], "custom_config": 4, "magma": 4, "8": [4, 10, 13, 156, 328, 349, 353, 356, 357, 358, 360, 361, 362, 366, 367, 368, 369, 370, 374, 377, 378, 379, 383, 384, 388, 389, 395, 399, 411, 412, 414, 418, 420], "as_dict": 4, "return": [4, 9, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 70, 71, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 127, 128, 129, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 170, 171, 172, 173, 174, 181, 183, 184, 189, 190, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 228, 230, 238, 240, 241, 242, 243, 249, 250, 253, 256, 258, 264, 298, 311, 324, 328, 329, 330, 358, 406, 417], "dictionari": [4, 158, 179, 203, 211, 214, 246, 298, 325, 326, 328, 341, 412], "enum": 4, "an": [4, 43, 70, 83, 94, 137, 138, 139, 142, 180, 215, 238, 258, 297, 298, 312, 313, 315, 344, 345, 351, 355, 359, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 395, 396, 399, 400, 401, 402, 403, 406, 411, 412, 415, 418, 420], "enumer": [4, 396, 399, 401], "variabl": [4, 179, 290, 293, 412], "simpl": 4, "unadorn": 4, "form": [4, 9, 184, 220, 221, 399, 406, 416], "allow": [4, 355, 359, 406, 411, 412, 417, 424], "complex": [4, 19, 416], "geometr": [4, 355], "transform": [4, 7, 63, 83, 92, 93, 122, 353, 354, 359, 406, 412], "enhanc": [4, 74], "indic": [4, 66, 328, 329, 354, 357, 360, 361, 362, 366, 368, 369, 370, 378, 380, 400, 406, 412, 417, 424], "magnet": [4, 10, 179, 411, 412, 420], "can": [4, 83, 125, 143, 150, 179, 328, 341, 344, 345, 346, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 399, 401, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 423, 424], "visual": [4, 156, 359, 398, 404, 405, 417, 418], "speed": [4, 34, 35, 79], "electron": [4, 5, 19, 135, 138, 143, 162, 179, 195, 198, 199, 205, 219, 238, 258, 285, 287, 314, 315, 355, 363, 373, 374, 377, 378, 379, 380, 393, 395, 396, 406, 409, 410, 411, 412, 418, 420], "travel": 4, "fermi_veloc": [4, 80, 353, 383, 384, 385, 386, 387, 388, 389, 390, 395], "vector": [4, 19, 99, 101, 102, 104, 105, 106, 109, 125, 126, 132, 148, 183, 271, 292, 306, 307, 311, 351, 356, 357, 358, 359, 360, 361, 362, 363, 373, 374, 395, 399, 400, 402, 403, 411, 412], "veloc": [4, 35, 37, 353, 409, 410, 418], "move": [4, 59, 345, 351, 418], "harmonic_average_effective_mass": [4, 395], "harmon": [4, 39, 40, 420], "averag": [4, 39, 40], "effect": [4, 39, 40, 355, 383, 406, 417, 418], "mass": [4, 39, 40, 418], "reflect": [4, 363], "mobil": 4, "harmonic_effective_mass": [4, 81, 353, 383, 384, 385, 386, 387, 388, 389, 390], "help": [5, 63, 66, 136, 138, 153, 345, 347, 349, 351, 407, 419, 424], "our": [5, 354, 355, 359, 380, 406, 407, 417], "code": [5, 143, 150, 153, 154, 216, 233, 316, 317, 324, 325, 326, 328, 329, 344, 345, 346, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 399, 400, 401, 402, 403, 405, 406, 409, 410, 411, 412, 414, 415, 416, 417, 420, 421, 423, 424], "yaml": 5, "contain": [5, 9, 10, 66, 83, 91, 129, 148, 272, 275, 325, 328, 329, 341, 351, 354, 355, 356, 359, 367, 377, 379, 402, 406, 412, 417, 419], "relat": [5, 295, 395, 416, 421, 423], "below": [5, 355, 357, 358, 360, 361, 362, 363, 366, 368, 369, 370, 373, 374, 377, 379, 380, 383, 385, 386, 387, 388, 389, 390, 396, 406, 411, 412, 414], "some": [5, 150, 191, 341, 349, 355, 395, 406, 411], "kei": [5, 159, 179, 246, 298, 326, 328, 355, 406, 412, 418], "you": [5, 143, 290, 312, 345, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 395, 396, 399, 400, 401, 402, 403, 406, 407, 408, 415, 416, 418, 419, 421, 423, 424], "might": [5, 83, 326, 406, 408, 412], "find": [5, 63, 70, 71, 74, 83, 89, 181, 183, 184, 324, 355, 392, 397, 398, 401, 404, 405, 406, 412, 424], "chapter": [5, 138, 287, 313], "intend": [5, 138, 143, 287, 313, 406], "describ": [5, 138, 287, 313], "data": [5, 38, 138, 143, 179, 287, 289, 292, 313, 317, 341, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 394, 395, 396, 399, 400, 401, 402, 403, 406, 409, 410, 416, 420, 421, 423], "assist": [5, 75, 138, 287], "process": [5, 138, 146, 341, 355, 363, 373, 374, 377, 378, 379, 380, 393, 396, 406, 409, 410, 412, 417, 419, 420, 424], "structur": [5, 19, 63, 91, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 135, 138, 140, 143, 148, 160, 161, 166, 168, 170, 179, 187, 188, 192, 208, 210, 214, 217, 238, 239, 258, 264, 270, 279, 287, 288, 289, 313, 315, 325, 326, 331, 335, 339, 341, 346, 348, 355, 356, 359, 364, 367, 373, 374, 377, 378, 379, 380, 384, 393, 394, 395, 396, 399, 401, 406, 409, 410, 411, 414, 415, 419, 420, 421, 424], "ha": [5, 83, 138, 146, 176, 177, 230, 233, 287, 313, 328, 341, 344, 345, 348, 349, 351, 353, 359, 377, 378, 379, 380, 383, 403, 406, 424], "follow": [5, 10, 83, 138, 191, 233, 287, 313, 328, 341, 345, 346, 348, 349, 351, 354, 355, 356, 359, 367, 374, 378, 379, 384, 393, 396, 406, 408, 411, 412, 413, 415, 416, 418, 419, 420, 424], "band_structur": [5, 364], "yml": 5, "band_structure_2d": 5, "2d": [5, 66, 71, 74, 136, 138, 329, 338, 339, 340, 341, 352, 364, 378, 379, 393, 409, 410, 418, 420], "do": [5, 16, 38, 75, 143, 156, 157, 166, 202, 204, 238, 239, 246, 247, 248, 249, 312, 325, 328, 348, 349, 351, 354, 355, 356, 359, 362, 363, 365, 366, 367, 370, 371, 373, 374, 378, 383, 384, 385, 386, 387, 388, 389, 390, 393, 395, 396, 399, 400, 402, 403, 406, 411, 412, 414, 415], "state": [5, 10, 13, 38, 83, 134, 138, 143, 153, 158, 159, 203, 238, 243, 244, 287, 325, 328, 329, 334, 337, 341, 345, 348, 355, 367, 371, 374, 406, 409, 410, 411, 412, 417, 420], "3d": [5, 43, 75, 137, 138, 318, 319, 320, 321, 322, 339, 341, 384, 409, 410, 420], "fermi_surface_2d": 5, "unfold": [5, 351, 352, 364, 405, 409, 410, 420], "api": [5, 339, 415], "reciprocal_lattic": [7, 8, 19, 20, 146, 147, 162, 187, 188, 416, 423], "ndarrai": [7, 8, 10, 11, 19, 20, 21, 22, 23, 24, 25, 26, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 59, 60, 61, 63, 65, 66, 74, 83, 84, 92, 93, 94, 113, 114, 115, 120, 122, 123, 125, 126, 131, 132, 162, 171, 184, 187, 188, 189, 190, 195, 196, 202, 220, 263, 265, 266, 267, 290, 291, 292, 302, 303, 304, 305, 306, 307, 311, 326, 401, 412], "transformation_matrix": [7, 8, 59, 63, 92, 93, 123, 424], "A": [7, 10, 66, 70, 92, 93, 99, 114, 119, 122, 127, 129, 152, 157, 162, 177, 179, 185, 187, 192, 193, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 289, 292, 306, 311, 318, 319, 320, 321, 322, 324, 325, 326, 327, 329, 346, 359, 363, 373, 374, 377, 378, 379, 380, 383, 393, 396, 401, 406, 411, 412, 413, 417, 418, 419, 424], "object": [7, 19, 66, 75, 91, 125, 130, 155, 156, 157, 166, 180, 187, 201, 202, 216, 220, 221, 238, 258, 298, 299, 300, 301, 302, 305, 311, 315, 328, 358, 383, 384, 385, 386, 387, 388, 389, 390, 395, 406, 416, 420, 421, 423], "vert": [7, 9, 83, 125, 126], "face": [7, 9, 125, 126, 127, 129, 131, 138, 142, 418], "calcul": [7, 9, 10, 26, 27, 33, 44, 75, 78, 79, 80, 81, 82, 83, 153, 163, 166, 172, 176, 187, 192, 198, 199, 200, 201, 206, 216, 219, 220, 221, 222, 224, 225, 230, 314, 315, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 341, 344, 346, 347, 348, 355, 359, 362, 363, 370, 382, 383, 384, 385, 386, 387, 388, 389, 390, 394, 401, 405, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424], "correspond": [7, 21, 23, 34, 36, 39, 49, 66, 83, 120, 329, 355, 406, 411, 412, 417, 419, 424], "reciproc": [7, 19, 59, 77, 120, 133, 135, 138, 148, 162, 183, 187, 351, 412, 424], "lattic": [7, 19, 41, 59, 77, 99, 100, 101, 102, 104, 105, 106, 109, 114, 115, 120, 123, 133, 135, 138, 141, 148, 162, 183, 187, 289, 290, 292, 297, 298, 299, 306, 311, 346, 351, 399, 400, 402, 412, 423, 424], "np": [7, 10, 19, 21, 22, 23, 24, 25, 26, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 59, 60, 61, 63, 65, 66, 74, 83, 92, 93, 94, 113, 114, 115, 120, 122, 123, 132, 162, 171, 183, 184, 187, 189, 190, 195, 196, 202, 220, 263, 265, 266, 267, 290, 291, 292, 301, 302, 303, 304, 305, 306, 307, 326, 328, 353, 363, 394, 395, 396, 399, 400, 401, 402, 403, 412, 424], "usgin": 7, "wigner": [7, 9, 420], "seitz": [7, 9, 420], "unit": [7, 124, 289, 399, 400, 402, 403], "cell": [7, 9, 83, 107, 108, 118, 121, 124, 363, 399, 400, 402, 403, 409, 410, 418, 424], "rotat": [7, 41, 99, 100, 185, 186, 329, 377, 378, 379, 380, 395, 416, 418, 420, 423], "attribut": [7, 10, 19, 75, 83, 90, 99, 125, 153, 166, 179, 187, 193, 406, 416], "brillouinzon": [8, 9, 138], "polydata": [8, 59, 76, 84, 125, 126, 138, 142, 395, 399, 400, 402, 403], "n_vert": 9, "n_face": 9, "dtype": [10, 11], "float64": [10, 11], "efermi": [10, 11, 19, 20, 146, 147, 187, 188, 346, 395, 416, 424], "function": [10, 38, 43, 83, 89, 128, 146, 156, 197, 210, 211, 212, 213, 229, 233, 315, 324, 325, 326, 328, 329, 336, 338, 341, 344, 347, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 398, 402, 404, 405, 406, 409, 410, 412, 414, 415, 417, 418, 420, 424], "theori": [10, 328, 347, 410], "spectrum": 10, "shape": [10, 19, 21, 22, 23, 24, 25, 26, 34, 35, 36, 37, 39, 40, 42, 46, 47, 60, 61, 65, 354, 359, 395, 402], "n_do": 10, "system": [10, 206, 222, 290, 348, 355, 406, 413, 417, 424], "etc": [10, 306, 355, 411, 412], "n_atom": [10, 19, 60, 61, 66], "n_princip": 10, "n_orbit": [10, 60, 61, 66], "n_spin": [10, 19, 24, 60, 61, 66, 134, 138], "i_princip": 10, "work": [10, 373, 374, 382, 383, 384, 385, 386, 387, 388, 389, 390, 405, 406, 407, 412, 417, 418], "princip": [10, 33, 57, 244, 245, 247, 248], "quantum": [10, 13, 33, 57, 166, 232, 233, 234, 235, 236, 244, 245, 247, 248, 347, 348, 352, 364, 365, 371, 405, 410, 411, 412, 416, 420], "n": [10, 13, 32, 83, 99, 127, 351, 359, 400, 401, 402, 403, 420, 421], "last": [10, 160, 164, 168, 173, 181, 183, 199, 206, 222, 227, 403, 412], "index": [10, 13, 42, 66, 156, 265, 294, 302, 305, 318, 319, 320, 321, 322, 329, 355, 359, 403, 410, 411, 412, 416, 417, 419, 420], "p": [10, 12, 328, 351, 357, 395, 399, 400, 401, 402, 403, 411, 415, 419, 421], "i_orbit": 10, "similar": [10, 328, 344, 406, 415], "angular": [10, 420], "l": [10, 12, 349, 411, 412, 420, 424], "same": [10, 13, 93, 99, 131, 292, 298, 302, 311, 325, 334, 341, 346, 348, 349, 351, 362, 370, 401, 406, 411, 412, 414, 415, 417, 419, 420], "order": [10, 12, 13, 99, 290, 292, 305, 311, 328, 396, 406, 411, 412, 414], "7": [10, 13, 156, 328, 353, 356, 357, 358, 361, 362, 366, 367, 369, 370, 374, 377, 378, 379, 383, 384, 388, 389, 393, 399, 400, 401, 406, 411, 412, 414, 418, 420], "py": [10, 13, 156, 328, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 408, 419, 420], "pz": [10, 13, 156, 328, 419, 420], "px": [10, 13, 156, 328, 419, 420], "dxy": [10, 13, 156, 328, 420], "dyz": [10, 13, 156, 328, 420], "dz2": [10, 13, 156, 328, 420], "dxz": [10, 13, 156, 328, 420], "dx2": [10, 420], "y2": [10, 13, 83, 156, 328, 330, 393], "i_spin": 10, "m": [10, 12, 124, 345, 346, 353, 401, 411, 412, 413, 420, 424], "increas": [10, 75, 83, 418, 424], "densityofst": [11, 12, 13, 14, 15, 16, 17, 18, 138, 155, 156, 157, 201, 238, 239, 287], "convert": [12, 38, 49, 197, 399, 400, 402, 403, 420], "coupl": [12, 360, 368, 418], "uncoupl": 12, "assum": [12, 406], "coupled_orbit": 12, "j": [12, 396, 406, 411], "uncoupled_orbit": 12, "ret": [12, 13, 31, 32, 33, 210, 213], "principal_q_numb": [13, 33, 244, 245, 247, 248], "sum_noncolinear": [13, 33], "tabl": [13, 328, 424], "lm": [13, 411, 412, 420], "tot": [13, 412, 420], "x2": [13, 83, 156, 328, 330, 393], "need": [13, 59, 146, 156, 218, 281, 290, 328, 344, 345, 354, 355, 356, 359, 363, 367, 374, 378, 383, 384, 385, 386, 387, 388, 389, 390, 393, 395, 396, 399, 400, 402, 403, 406, 412, 414, 415, 418, 419, 424], "sume": [13, 156], "over": [13, 26, 33, 156, 406, 407, 409, 410, 415, 416, 418, 420], "count": [13, 302, 328, 411, 412, 417, 419], "zero": [13, 328, 411, 412, 420], "input": [13, 176, 179, 233, 289, 313, 314, 327, 328, 332, 341, 344, 345, 348, 349, 412, 413, 422], "sum": [13, 33, 156, 299, 412, 415, 416], "string": [14, 130, 163, 172, 179, 243, 244, 245, 246, 247, 248, 262, 268, 269, 270, 271, 274, 289, 301, 325, 326, 327, 328, 385, 412, 413], "current": [14, 63, 323, 348, 355, 382, 383, 384, 385, 386, 387, 388, 389, 390, 405, 410, 411, 412], "basi": [14, 45, 48, 50, 51, 52, 59, 63, 307, 360, 368, 411, 416], "non": [15, 33, 44, 328, 349, 351, 352, 353, 355, 357, 358, 363, 364, 365, 366, 371, 373, 374, 378, 379, 380, 383, 384, 385, 386, 387, 388, 390, 394, 395, 396, 405, 406, 411, 412, 416, 419, 420, 424], "colinear": [15, 33, 44, 327, 346, 349, 351, 352, 353, 354, 356, 359, 362, 364, 365, 367, 370, 371, 377, 378, 379, 380, 385, 389, 390, 396, 405, 411, 412, 413, 419], "calc": [15, 218], "channel": [18, 38, 58, 328, 359, 411, 412, 420], "kpoint": [19, 20, 21, 23, 34, 36, 39, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 59, 63, 66, 67, 75, 91, 92, 93, 98, 135, 137, 138, 144, 145, 162, 171, 178, 187, 189, 190, 192, 221, 233, 279, 280, 317, 329, 331, 348, 349, 351, 354, 359, 363, 393, 395, 396, 412, 416, 418, 419, 420, 424], "n_kx": [19, 20, 22, 24, 25, 26, 35, 37, 40, 42, 46, 47, 60, 61, 65, 187, 188, 416], "n_ky": [19, 20, 22, 24, 25, 26, 35, 37, 40, 42, 46, 47, 60, 61, 65, 187, 188, 416], "n_kz": [19, 20, 22, 24, 25, 26, 35, 37, 40, 42, 46, 47, 60, 61, 65, 187, 188, 416], "projected_phas": [19, 20, 416], "kpath": [19, 20, 59, 91, 92, 93, 94, 95, 96, 97, 98, 135, 138, 146, 147, 169, 187, 188, 258, 259, 325, 341, 348, 396, 416, 420], "store": [19, 21, 22, 23, 24, 25, 34, 35, 36, 37, 39, 40, 42, 60, 61, 65, 75, 134, 135, 137, 138, 140, 141, 179, 180, 229, 289, 296, 298, 311, 314, 317, 416, 419], "informomr": 19, "arrai": [19, 21, 22, 23, 24, 25, 34, 35, 36, 37, 39, 40, 60, 61, 65, 66, 74, 75, 94, 123, 134, 136, 138, 139, 141, 157, 202, 215, 290, 295, 303, 311, 328, 331, 396, 399, 400, 401, 402, 403, 411, 412, 416, 424], "Will": 19, "have": [19, 32, 218, 341, 345, 348, 359, 401, 402, 406, 407, 414, 415, 416, 417, 418, 419, 420], "n_kpoint": [19, 21, 23, 34, 36, 39, 66, 74], "n_band": [19, 21, 22, 23, 24, 25, 34, 35, 36, 37, 39, 40, 60, 61, 66, 74], "norbit": [19, 416], "full": [19, 179, 290, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 399, 400, 401, 402, 403, 406, 413, 416], "incud": 19, "part": [19, 200, 406, 418], "clacul": 19, "matrix": [19, 59, 63, 83, 92, 93, 99, 114, 120, 122, 123, 133, 138, 141, 162, 184, 187, 309, 329, 417, 418, 424], "shifted_to_efermi": [19, 416], "shift": [19, 75, 89, 299, 326, 329, 354, 355, 359, 374, 412, 417, 418, 424], "electronicbandstructur": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 75, 138, 258, 259, 287, 395, 420, 421], "gradient": [21, 22, 26, 416], "numpi": [21, 22, 23, 24, 25, 34, 35, 36, 37, 39, 40, 60, 61, 65, 66, 74, 83, 134, 136, 138, 139, 141, 328, 363, 394, 395, 396, 399, 400, 401, 402, 403, 408, 416, 424], "self": [21, 23, 32, 34, 36, 39, 83, 198, 199, 212, 289, 290, 291, 295, 299, 326, 345, 351, 354, 359, 363, 394, 412], "where": [21, 22, 23, 24, 36, 37, 166, 246, 317, 326, 329, 341, 349, 353, 355, 356, 359, 367, 378, 384, 385, 399, 406, 412, 413, 417, 418, 419, 420], "second": [21, 23, 24, 36, 102, 104, 109, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 399, 400, 401, 402, 403], "dimens": [21, 22, 23, 24, 36, 37, 315], "dx": [21, 22, 23, 24, 36, 37], "dy": [21, 22, 23, 24, 36, 37], "dz": [21, 22, 23, 24, 36, 37], "fradient": [21, 22], "mesh": [22, 24, 25, 26, 35, 37, 40, 42, 43, 46, 47, 49, 60, 61, 65, 340, 351, 393, 409, 410, 416, 418, 420], "grid": [22, 24, 25, 26, 35, 37, 40, 42, 43, 46, 47, 60, 61, 65, 83, 85, 86, 87, 88, 93, 325, 351, 356, 367, 393, 396, 401, 412, 416, 417, 418], "first": [22, 24, 37, 83, 101, 105, 109, 161, 170, 298, 306, 346, 351, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 366, 368, 369, 370, 373, 377, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 396, 400, 403, 406, 414, 417, 418, 419, 424], "hessian": [23, 24, 416], "third": [23, 102, 105, 106, 406], "scalar_mesh": [26, 27], "cartesian": [26, 45, 46, 59, 171, 189, 289, 290, 291, 296, 299, 301, 303, 304, 306, 307, 308, 312, 399, 400, 402, 403, 416, 420], "coordin": [26, 83, 138, 139, 141, 171, 189, 190, 290, 291, 303, 304, 307, 308, 330, 393, 399, 400, 402, 403, 416, 420], "scalar_gradient_mesh": 26, "integr": 27, "nd_list": 28, "scalar_list": 29, "vector_list": 30, "_summary_": [31, 33, 330], "ipr": [31, 32, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 373, 374], "It": [32, 74, 150, 191, 281, 292, 298, 302, 308, 311, 328, 345, 355, 356, 367, 374, 378, 384, 399, 403, 406, 411, 412, 417], "resolv": [32, 406, 411, 412, 415], "pipr": 32, "pipr_j": 32, "frac": [32, 353, 359, 383, 420], "c_j": 32, "sum_i": 32, "c_i": 32, "clearli": [32, 406], "sum_j": 32, "mind": [32, 328, 345, 403, 419], "wavefunct": [32, 345, 351, 420], "c": [32, 306, 383, 399, 401, 403, 406, 407, 408, 418, 423], "_i": 32, "we": [32, 218, 328, 345, 348, 349, 351, 354, 355, 356, 359, 363, 367, 374, 378, 380, 383, 384, 399, 400, 401, 402, 403, 406, 407, 411, 415, 417, 418, 420, 424], "alreadi": [32, 66, 74, 406], "quantiti": 32, "NOT": [32, 406], "readi": [32, 406], "FOR": [32, 406], "pleas": [32, 357, 360, 361, 362, 363, 366, 368, 369, 370, 373, 374, 377, 378, 379, 380, 393, 396, 406, 407, 408, 418, 420], "prefer": [32, 312, 406, 407], "ebs_ipr": 32, "two": [38, 298, 315, 328, 400, 403, 406, 407, 412], "singl": [38, 299, 301, 359, 406, 413], "adjust": [38, 374, 378, 384, 385], "neg": [38, 359, 422], "typic": [38, 359, 396, 406, 422], "No": [38, 406, 412], "requir": [38, 125, 344, 345, 346, 348, 349, 351, 355, 406, 412, 414, 416, 417, 418, 419], "chang": [38, 299, 300, 302, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 402, 403, 406, 415], "otherwis": [38, 406], "symmetri": [41, 91, 110, 111, 112, 113, 177, 184, 192, 317, 355, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 395, 405, 412, 413, 416, 418], "oper": [41, 184, 303, 304, 406, 417], "particular": [42, 348, 406, 416, 417, 419], "mesh_grid": [43, 62], "nd": [43, 290], "nx": [43, 83], "ny": [43, 83], "nz": [43, 83], "fraction": [48, 99, 138, 141, 292], "eb": [49, 75, 76, 166, 258, 259, 362, 370, 395, 416, 421], "lsit": 49, "uniqu": [50, 51, 52, 396, 416], "reduc": [50, 51, 52, 59, 190, 317, 403, 416, 419, 420], "numbersk": 57, "show_brillouin_zon": 59, "r": [59, 274, 345, 346, 353, 401, 412, 415, 418], "point_siz": [59, 393, 395, 396, 399, 400, 402, 403], "render_points_as_spher": [59, 393, 395, 396, 399, 400, 402, 403], "core": [59, 63, 92, 93, 122, 123, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 155, 156, 157, 160, 161, 164, 165, 168, 170, 173, 174, 187, 192, 201, 202, 220, 221, 228, 238, 258, 353, 418], "updat": [59, 63, 131, 132, 289, 295, 399, 406], "new": [59, 63, 191, 291, 403, 406, 419], "implement": [59, 281, 355, 406, 412], "pyvista": [59, 83, 125, 138, 142, 353, 383, 384, 385, 386, 387, 388, 389, 390, 393, 395, 396, 399, 400, 402, 403, 408, 418], "wether": 59, "phase": [61, 135, 138, 351, 355, 416, 424], "done": [63, 303, 304, 328, 351, 355, 373, 394, 408, 413, 417], "expect": [63, 66, 135, 136, 138, 141, 287, 341, 406], "materi": [63, 110, 111, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 394, 395, 396, 406, 411, 412, 414], "spd": [66, 67, 78, 279, 280, 354, 359], "band_indic": [66, 67, 329, 377, 379, 417], "band_color": [66, 67, 329, 377, 379, 417], "loglevel": [66, 67], "30": [66, 67, 328, 345, 349, 366, 371, 399, 400, 402, 403, 406], "kwarg": [66, 67, 238, 239, 258, 259, 318, 319, 320, 321, 322, 325, 326, 328, 329, 412, 417, 424], "nx3": 66, "substract": 66, "n_kppint": 66, "cmap": [66, 130, 281, 282, 284, 356, 367, 374, 378, 411, 412], "given": [66, 70, 136, 138, 156, 291, 294, 307, 311, 315, 317, 329, 377, 383, 384, 385, 386, 387, 388, 389, 390, 393, 396, 406, 409, 410, 415, 417, 424], "_type_": [66, 153, 325, 326, 330, 332, 412, 419, 422], "verbos": [66, 289, 290, 299, 300, 309, 310, 367, 399, 400, 403], "log": 66, "warn": [66, 353, 354, 355, 359, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 400], "fermisurfac": [67, 68, 69, 70, 71, 72, 73, 74, 138], "matplotlib": [68, 69, 71, 238, 258, 326, 328, 329, 363, 401, 408, 411, 420], "rais": [70, 71, 74, 123, 193, 329, 417, 419], "runtimeerror": [70, 71, 74, 329, 417, 419], "found": [70, 181, 191, 193, 298, 317, 326, 349, 373, 374, 383, 384, 385, 386, 387, 388, 389, 390, 394, 396, 400, 406, 412, 415, 420], "error": [70, 71, 74, 123, 191, 218, 298, 355, 359, 413, 417], "500": 71, "along": [71, 74, 94, 307, 406, 413, 416, 421], "onli": [71, 74, 98, 125, 191, 265, 289, 291, 317, 328, 348, 359, 366, 370, 377, 379, 383, 384, 385, 386, 387, 388, 389, 390, 400, 406, 407, 411, 412, 418, 419], "layer": [71, 74, 355, 359, 399, 418], "geometri": [71, 74, 315, 355, 424], "pyplot": [71, 329, 401, 420], "instanc": [71, 300, 310, 311, 341, 355, 359, 363, 411, 412, 422, 424], "wa": [71, 74, 328, 403, 406, 412, 420], "call": [71, 74, 317, 332, 341, 345, 348, 349, 351, 383, 384, 385, 386, 387, 388, 389, 390, 399, 406, 414, 418, 422], "befor": [71, 74, 354, 355, 356, 359, 367, 374, 378, 384, 402, 417, 422, 424], "sx": 74, "sy": 74, "sz": 74, "300": [74, 356, 367, 374, 378], "version": [74, 344, 363, 373, 374, 377, 378, 379, 380, 393, 396, 406, 407, 408, 415, 418, 419], "nkpoint": [74, 416], "nband": [74, 416, 420], "thei": [74, 191, 355, 406, 414], "also": [74, 344, 345, 349, 355, 356, 362, 367, 370, 374, 377, 378, 379, 384, 406, 411, 412, 417, 418, 424], "other": [74, 83, 210, 328, 345, 355, 374, 384, 396, 397, 401, 406, 412, 416, 417, 419, 420, 422], "compon": [74, 406, 417, 419, 420], "marker": [74, 283, 284, 356, 367, 374, 378], "fermi_shift": [75, 76, 325, 326, 328, 329, 412, 417, 424], "manapul": 75, "improv": [75, 355], "effienc": 75, "prior": [75, 146, 406, 408], "select": [75, 290, 291, 328, 355, 362, 370, 415, 418, 420], "within": [75, 355, 359, 396, 399, 406, 408, 412, 419, 420, 424], "everi": [75, 328, 406, 409, 410, 420], "fermisurface3d": [76, 77, 78, 79, 80, 81, 82, 138, 418], "vecctor": 77, "expand": [77, 354, 359, 406], "spd_spin": 82, "xyz": [83, 84, 289, 299, 308, 312], "isovalu": [83, 84, 138, 139, 418], "v_matrix": [83, 84], "algorithm": [83, 84], "lewin": [83, 84], "transform_matrix": [83, 84], "boundari": [83, 84, 307, 355], "all": [83, 156, 181, 209, 228, 230, 289, 293, 299, 305, 307, 323, 327, 328, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 373, 374, 401, 405, 406, 412, 413, 415, 417, 418, 419, 420, 424], "equat": [83, 418, 420], "f": [83, 229, 348, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 394, 395, 396, 402, 406, 411, 412, 417, 418], "must": [83, 289, 341, 348, 349, 385, 396, 406, 412, 424], "x1": [83, 330, 393], "y1": [83, 330, 393], "z1": 83, "z2": 83, "v1": [83, 328], "v2": 83, "constant": [83, 306, 380, 417], "One": [83, 355, 411, 412, 417, 418], "present": [83, 118, 121, 183, 293, 327, 328, 345, 406, 412, 413], "instead": [83, 289, 293, 345, 363, 387, 406, 412, 417], "togeth": [83, 289, 344, 406, 411, 412], "provid": [83, 130, 179, 180, 238, 258, 309, 311, 317, 327, 328, 341, 344, 345, 351, 355, 356, 359, 367, 374, 378, 384, 401, 406, 409, 410, 411, 412, 413, 415, 416, 418, 420, 421, 423], "scikit": [83, 408], "possibl": [83, 406, 411, 412, 418], "classic": 83, "modul": [83, 233, 327, 331, 332, 398, 405, 410, 413, 414, 417, 419, 422, 424], "fourier": 83, "dafault": [83, 415], "period": 83, "dataset": [83, 112, 418, 419], "g": [83, 301, 328, 348, 349, 355, 383, 396, 401, 412, 413, 417, 419], "1st": [83, 407], "bz": [83, 413, 424], "cover": [83, 359, 406], "fulli": [83, 359], "so": [83, 326, 328, 399, 406, 412, 414, 416, 419, 420], "one": [83, 89, 125, 181, 183, 281, 289, 290, 291, 294, 302, 317, 328, 345, 348, 349, 351, 379, 396, 406, 411, 412, 413, 415, 417, 418, 419], "want": [83, 125, 312, 328, 354, 385, 403, 406, 407, 417, 418, 419], "wrap": 83, "look": [83, 359, 389], "afterward": 83, "easili": [83, 415], "doabl": 83, "trimesh": [83, 128, 130, 408, 418], "goe": [83, 412, 415, 419], "eigen_matrix": 83, "In": [83, 143, 328, 345, 351, 354, 355, 363, 383, 396, 399, 400, 401, 402, 403, 406, 407, 411, 412, 415, 418, 419, 420, 424], "word": [83, 328], "super": [83, 409, 410], "withpad": 83, "vertic": [83, 138, 142, 240, 244, 245, 246, 247, 248, 328, 346, 401, 415, 418], "verts_prim": 83, "t": [83, 229, 281, 348, 406, 407], "space": [85, 110, 111, 313, 355, 383, 384, 385, 386, 387, 388, 389, 390, 396, 401, 417, 418, 422, 424], "length": [85, 328, 406], "tri": [89, 191], "correct": [89, 406], "abl": [89, 385, 411, 412, 418, 420], "min": 89, "max": 89, "kname": [90, 91, 325, 326, 345, 412, 421, 424], "ktick": [90, 91, 325, 326, 345, 412, 421, 424], "special_kpoint": [90, 91, 421], "ngrid": [90, 91, 421], "has_time_revers": [90, 91, 144, 145, 177, 178], "handl": [91, 233, 317, 363, 395, 401, 418, 422], "special": [91, 355, 406, 411, 417], "time": [91, 177, 289, 291, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 399, 400, 401, 402, 403, 406, 424], "revers": [91, 177, 396, 406], "get": [92, 93, 169, 333, 348, 382, 391, 395, 396, 399, 400, 403, 405, 406, 418], "same_grid_s": 93, "optim": [93, 355], "after": [93, 402, 406, 415, 420], "transformm": 93, "retain": [93, 406], "segment": [95, 417, 421], "filenam": [98, 144, 145, 150, 152, 153, 162, 166, 177, 178, 179, 180, 185, 186, 187, 188, 192, 193, 194, 249, 268, 289, 290, 296, 297, 298, 299, 300, 308, 310, 312, 324, 325, 328, 329, 332, 385, 400, 415, 417, 422, 424], "fmt": 98, "vasp": [98, 146, 153, 216, 230, 233, 237, 289, 324, 325, 326, 328, 329, 344, 345, 347, 348, 352, 353, 354, 355, 356, 357, 358, 359, 362, 363, 364, 365, 367, 370, 371, 373, 374, 377, 378, 379, 380, 383, 384, 385, 388, 389, 390, 394, 395, 396, 399, 400, 401, 402, 403, 405, 410, 411, 412, 414, 415, 416, 417, 420, 421, 422, 423, 424], "write": [98, 289, 297, 299, 403, 406, 419], "support": [98, 345, 348, 349, 363, 406, 408, 410, 411, 412], "moment": [98, 179, 420], "_description_": [98, 325, 329, 330, 417, 419], "cartesian_coordin": [99, 100, 423], "fractional_coordin": [99, 100, 423], "perid": 99, "crystal": [99, 101, 102, 104, 105, 106, 109, 114, 115, 120, 227, 289, 313, 315, 345, 348, 349, 396, 409, 410], "symbol": [99, 138, 141, 292], "natom": [99, 292, 416, 423], "coordinatesd": 99, "magnitud": [101, 104, 106, 411, 412], "angl": [102, 105, 109, 298, 396, 402, 417], "convex": [107, 119], "hull": [107, 119], "scipi": [107, 408], "spatial": 107, "convexhul": 107, "symprec": [110, 111, 112, 113, 192, 331, 396], "1e": [110, 111, 112, 113, 192, 331, 345, 396], "intern": [110, 289, 295], "group": [110, 111, 289, 383, 384, 385, 386, 387, 388, 389, 390], "spglib": [112, 192], "wyckoff": 113, "insid": [114, 150, 406], "unitcel": [114, 363], "question": 114, "corner": [115, 415], "speci": [118, 248, 290, 301, 328, 401, 415], "crystla": 123, "valueerror": [123, 193], "proper": 123, "face_norm": [125, 126], "vert_norm": [125, 126], "face_color": [125, 126], "vert_color": [125, 126], "hold": 125, "about": [125, 143, 179, 224, 225, 355, 378, 379, 395, 406, 407, 415, 418], "inherit": 125, "minimum": [125, 130, 328, 412, 417, 419], "nvert": 125, "vertici": 125, "integ": [125, 311], "nface": 125, "connect": [125, 396, 406, 418], "vertex": 125, "attach": [125, 406], "glyph": [125, 395], "file_obj": 128, "output": [128, 149, 153, 179, 233, 296, 312, 327, 328, 332, 344, 406, 412, 413, 415, 422], "glb": 128, "file_typ": 128, "new_fac": 129, "viridi": [130, 356, 367, 374, 384], "vmin": [130, 281, 282, 284, 412, 417, 424], "vmax": [130, 281, 282, 284, 412, 417, 424], "scalar_nam": 131, "vectors_x": 132, "vectors_i": 132, "vectors_z": 132, "vectors_nam": 132, "manipul": [134, 135, 138, 313, 314, 315], "1d": [134, 138, 139, 400], "n_energi": [134, 138], "see": [134, 135, 136, 137, 140, 141, 310, 345, 363, 383, 395, 401, 406, 407, 411, 412, 417, 424], "further": [134, 135, 136, 137, 140, 141, 146, 406, 412, 417, 419, 424], "informt": [137, 138], "includ": [137, 138, 143, 156, 179, 184, 241, 242, 246, 289, 341, 348, 351, 355, 406, 409, 410, 411, 412, 420, 424], "extens": [137, 138, 139, 142, 297, 308, 312, 359, 406], "path": [138, 140, 166, 179, 180, 185, 186, 328, 341, 346, 348, 349, 351, 353, 354, 355, 356, 359, 363, 367, 378, 384, 399, 400, 401, 402, 403, 409, 410, 413, 414, 420], "tick_label": [138, 140], "tick_posit": [138, 140, 252, 255, 273, 421], "n_segement": [138, 140], "kdistanc": [138, 140, 421], "learn": [143, 407], "more": [143, 181, 183, 281, 289, 294, 302, 341, 362, 370, 378, 379, 396, 400, 406, 407, 411, 412, 415, 419], "pars": [143, 144, 146, 148, 150, 152, 153, 162, 166, 169, 176, 177, 179, 185, 187, 193, 195, 196, 210, 225, 231, 232, 233, 234, 235, 236, 237, 289, 290, 329, 400, 403, 415, 417], "dft": [143, 328, 345, 348, 354, 396, 406, 409, 410, 411, 412, 413, 415, 416, 420, 423, 424], "highlight": [143, 355, 424], "python": [143, 158, 203, 229, 328, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410], "configur": [143, 323, 339, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 373, 374, 376, 377, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 405], "io": [143, 231, 232, 234, 235, 236, 237, 345, 395, 416, 421, 423], "pyposcar": [143, 298, 314, 315, 355, 399, 400, 401, 402, 403, 404], "modulu": 143, "script": [143, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 399, 400, 401, 402, 403, 406, 412, 413, 417, 419, 422, 424], "bandsplot": [143, 325, 341, 345, 348, 349, 351, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 370, 373, 374, 412, 414, 415], "dosplot": [143, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 287, 325, 341, 348, 349, 351, 366, 367, 368, 369, 370, 373, 374, 415], "bandsdosplot": [143, 341, 348, 349, 351, 372, 375, 405], "abinitkpoint": [145, 233], "dirnam": [146, 147, 153, 154, 166, 167, 316, 317, 324, 325, 326, 328, 329, 345, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 394, 412, 414, 415, 417, 424], "infil": [146, 147, 150, 151, 152, 327, 331, 332, 396, 413, 419, 422], "abinit_output": [146, 147, 148, 149, 327, 344, 412, 413], "procar": [146, 153, 154, 162, 188, 189, 190, 191, 192, 233, 317, 324, 325, 327, 332, 336, 341, 343, 344, 345, 351, 394, 408, 409, 410, 411, 412, 413, 417, 418, 419, 420, 422, 424], "unlik": 146, "here": [146, 191, 281, 290, 308, 345, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 405, 407, 412], "merg": [146, 327, 344, 406, 413], "fix": [146, 191, 218, 299, 327, 344, 359, 406, 413], "format": [146, 191, 229, 233, 313, 327, 328, 344, 345, 348, 393, 394, 395, 396, 406, 409, 410, 412, 413, 420, 422], "issu": [146, 326, 327, 344, 353, 412, 413, 422], "abinitprocar": [147, 233], "through": [150, 152, 318, 321, 355, 406, 411, 412, 416, 417, 418, 421, 423, 424], "becaus": [150, 406, 412], "multipl": [150, 327, 336, 344, 409, 410, 415, 420], "bsxf": 150, "sown": 150, "bxsfparser": [151, 152, 233], "bxsf": [151, 152, 232, 233], "helper": 152, "qe": [153, 154, 233, 234, 235, 328, 348, 349, 351, 358, 360, 366, 368, 386, 387, 415], "lobsterin": [153, 154, 348], "lobsterout": [153, 154, 348], "scfin_filenam": [153, 154], "scf": [153, 154, 166, 167, 345, 348, 349, 351], "outcar": [153, 154, 162, 180, 181, 182, 183, 184, 192, 233, 324, 351, 394, 412, 424], "poscar": [153, 154, 162, 186, 226, 233, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 308, 309, 310, 311, 313, 315, 328, 363, 396, 398, 404, 405, 419, 424], "dos_interpolation_factor": [153, 154, 193, 194], "directori": [153, 166, 317, 326, 327, 328, 329, 341, 345, 346, 348, 349, 351, 353, 354, 355, 356, 359, 367, 373, 374, 383, 384, 385, 386, 387, 388, 389, 390, 402, 412, 413, 417], "put": [153, 328, 413], "lobsterpars": [154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 233], "retrun": 155, "dos_paramater": 156, "separatli": 156, "pychemia": [156, 208, 216, 217, 220, 221, 228, 408], "multi": [157, 202], "diment": [157, 202, 418], "complet": [158, 203, 346], "denis": 158, "sturcutu": 162, "scf_in_filenam": [166, 167], "bands_in_filenam": [166, 167], "pdos_in_filenam": [166, 167], "pdo": [166, 167, 349], "kpdos_in_filenam": [166, 167], "kpdo": [166, 167, 349], "atomic_proj_xml": [166, 167], "atomic_proj": [166, 167, 349], "xml": [166, 167, 193, 194, 197, 218, 225, 328, 345, 349, 415], "expresso": 166, "most": [166, 328, 355, 401, 406, 412], "import": [166, 328, 348, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 399, 400, 401, 402, 403, 406, 408, 416, 417, 418, 421, 423, 424], "come": [166, 406, 409, 410], "parser": [166, 218, 233, 395, 412, 416, 421, 423], "took": 166, "place": [166, 341, 349, 359, 406, 418], "case": [166, 328, 341, 354, 401, 406, 412, 413, 419, 424], "ofstat": 166, "locat": [166, 238, 258, 276, 353, 354, 355, 356, 359, 367, 374, 378, 384, 419], "outdir": 166, "prefix": 166, "qepars": [167, 168, 169, 170, 171, 172, 173, 174, 233], "fdf_file": [175, 176], "siestapars": [176, 233], "siesta": [176, 233, 236, 347], "fdf": 176, "vlaue": 177, "kpioint": 177, "run": [179, 290, 344, 345, 346, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 399, 400, 401, 402, 403, 406, 413, 420], "extract": [179, 212, 213, 351, 419], "summari": [179, 345], "eigenvalu": 179, "stress": 179, "tensor": 179, "forc": [179, 406], "local": [179, 353, 355, 357, 358, 359, 360, 361, 362, 363, 366, 368, 369, 370, 373, 377, 379, 380, 383, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 401, 406], "charg": [179, 345, 359, 406], "dielectr": 179, "amount": [179, 299, 307], "written": [179, 265, 297, 308, 312, 345, 351, 393, 396, 406, 424], "onto": [179, 411, 412, 420], "chosen": 179, "modifi": [179, 289, 300, 310, 328, 398, 404, 405, 406, 411, 412], "nwrite": 179, "tag": [179, 215, 345, 412, 417], "incar": [179, 351, 418], "act": 179, "access": [179, 406, 411, 420], "union": [179, 180], "file_str": 179, "content": [179, 180, 293, 308, 311, 312, 406], "constructor": 180, "read": [180, 218, 328, 349, 396, 406, 415, 424], "its": [180, 359, 406], "just": [181, 183, 281, 290, 307, 308, 312, 418, 419], "field": 181, "than": [181, 183, 210, 281, 328, 345, 400, 406, 411, 412, 419, 424], "ndaarai": 183, "them": [184, 229, 289, 355, 359, 406, 412, 420], "matric": [184, 420], "stupid": 191, "problem": [191, 406], "due": [191, 326, 412, 422, 424], "fortran": [191, 422], "now": [191, 348, 349, 403, 417, 419, 420], "separ": [191, 406, 411, 412, 413], "61": [191, 400], "00000000": [191, 420], "50000000": 191, "But": [191, 379, 406, 417], "precis": [192, 406], "vasprun": [193, 194, 223, 225, 328, 415], "vaspxml": [194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233], "el": 197, "_type": 197, "attrib": 197, "tree": 197, "boolian": [198, 199, 200, 229, 328], "consist": [198, 199, 212, 326, 345, 351, 394, 406, 411, 412, 420], "ionic": [198, 200, 205, 209, 219, 228], "converg": [199, 200, 326, 412], "final": [208, 403, 406, 412, 413], "xml_tree": [210, 211, 212, 213, 214, 215], "calculatio": 210, "scstep": 210, "dest": 211, "recurc": [211, 213], "check": [211, 327, 407, 413], "spell": 211, "tage": 213, "varrai": 215, "vaspincar": 216, "alwai": [218, 289, 307, 417], "accord": [218, 359, 406, 417], "finish": 218, "pseudopotenti": 224, "potcar": 224, "covert": 229, "abinit": [231, 233, 327, 328, 347, 348, 410, 411, 412, 413], "espresso": [232, 233, 234, 235, 236, 347, 348, 352, 364, 365, 371, 405, 410, 411, 412], "decrib": 233, "result": [233, 383, 406, 419, 424], "lobster": [233, 234, 325, 328, 329, 347, 410, 417], "abinitpars": 233, "vasppars": 233, "mpl": [238, 258], "orient": [240, 243, 244, 245, 246, 247, 248, 325, 328, 385, 395, 411, 412, 415], "horizont": [240, 243, 244, 245, 246, 247, 248, 325, 328, 415], "linestyl": [240, 356, 367, 378, 401], "THe": 240, "item": [246, 325, 326, 328, 357, 366, 370, 406, 412, 415, 424], "plot_tot": [246, 328, 367, 415], "overlay_mod": [246, 247, 248], "contribut": [246, 247, 248, 328, 406, 407, 411, 412, 415], "eachoth": 248, "pdf": [249, 268, 328], "interv": [251, 254, 272, 275, 276, 354, 359, 414], "xlim": [251, 354, 359], "tick_nam": [252, 255, 273, 421], "xtick": 252, "ylim": 254, "ytick": 255, "config_dict": [257, 278], "kdirect": [258, 259, 325, 326, 412, 424], "ebsplot": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 287], "fermi_level": 260, "methdo": 262, "width_mask": [263, 265, 267], "color_mask": [263, 265, 267], "width_weight": [263, 265, 267], "color_weight": [263, 265, 267], "elimit": [263, 265, 325, 326, 328, 354, 358, 359, 363, 412, 414, 415, 424], "scatter": [263, 265, 267, 354, 355, 356, 358, 359, 360, 361, 363, 373, 374, 412], "mask": [263, 265, 267, 282, 284, 326, 406, 412], "overlai": [266, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 373, 374, 383, 384, 385, 386, 387, 388, 389, 390, 420], "fo": [271, 274], "begin": [272, 275, 330, 420], "end": [272, 275, 330, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 399, 400, 401, 402, 403, 406, 415, 420], "_f": [274, 356, 357, 358, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374], "depeci": 279, "ot": 279, "procarplot": [280, 281, 282, 283, 284, 287], "hot_r": [281, 284], "handler": [281, 353], "parametricplot": 281, "fake": 281, "shouldn": 281, "invok": [281, 308, 406, 408], "discontinu": [282, 283, 284, 325, 349, 420], "figsiz": [282, 283], "13": [282, 283, 360, 368, 399, 406, 411, 419, 420], "plot_bar": [282, 367], "02": [283, 364, 371, 375, 391], "50": [284, 351, 400, 419], "structutu": 285, "stuctur": 287, "depreci": 288, "low": [289, 313, 314, 354, 359, 419], "tailor": 289, "manual": [289, 385, 396, 412, 413], "coord": [289, 307, 312, 330], "_set_cartesian": 289, "_set_direct": 289, "ie": 289, "angstrom": [289, 292], "load": [289, 290, 292, 293, 345, 383, 384, 385, 386, 387, 388, 389, 390, 399, 400, 403], "whole": [289, 359, 406], "_unpars": 289, "sort": 289, "remov": [289, 299, 402, 406], "automat": [290, 295, 297, 308, 328, 345, 351, 354, 359, 393, 396, 400, 406, 412], "debug": [290, 406], "cpo": 290, "nadarrai": [290, 301], "dpo": [290, 399, 400, 402, 403], "lat": [290, 399, 400, 402, 403], "3x3": [290, 311], "typesp": 290, "aam": 290, "numbersp": 290, "ntotal": [290, 403], "elm": [290, 399, 400, 402, 403], "dynam": [290, 406], "selectflag": 290, "Not": [290, 406], "conveni": [290, 308, 312, 406], "volum": [290, 406, 418, 423], "box": [290, 406], "product": [290, 399, 400, 402, 403, 406], "selectiveflag": 291, "1x3": 291, "direct_posit": 292, "essenci": 292, "direct_po": 292, "coordiant": [292, 301], "fromstr": 293, "memori": [293, 383, 384, 385, 386, 387, 388, 389, 390, 419], "popul": 293, "when": [295, 317, 329, 344, 351, 353, 355, 358, 362, 370, 383, 384, 385, 386, 387, 388, 389, 390, 393, 395, 396, 399, 400, 402, 403, 406, 411, 413, 414, 417, 418, 419, 421], "out": [296, 328, 344, 345, 346, 348, 349, 355, 406, 418], "positon": 296, "falseposit": 296, "comment": [297, 420], "poscar1": 298, "poscar2": 298, "compar": [298, 315, 352, 364, 383, 405, 409, 410, 420, 424], "small": [298, 406, 418], "numer": [298, 406], "ignor": [298, 401, 419], "empti": 298, "comparison": [298, 412, 414], "doe": [298, 305, 328, 355, 363, 382, 383, 384, 385, 386, 387, 388, 389, 390, 405, 406, 415, 417, 418, 419], "rel": [298, 419], "consid": [298, 328, 366, 370, 406, 407, 409, 410, 411, 412], "equal": [298, 328, 358, 386, 387], "pos_multipli": 299, "multipli": [299, 303, 306], "pos_sum": 299, "human": [299, 302, 305, 403], "scale_lattic": [299, 403], "poscar_modifi": [300, 301, 302, 303, 304, 305, 306, 307, 308, 313, 315, 403], "cu": 301, "newel": [302, 403], "replac": [302, 357, 358, 360, 361, 362, 363, 366, 368, 369, 370, 373, 377, 379, 380, 383, 385, 386, 387, 388, 389, 390, 396], "fx": [303, 304], "fy": [303, 304], "fz": [303, 304], "trivial": [305, 355], "equival": [305, 328, 406], "desir": [305, 311, 396, 412, 415], "onc": [305, 345, 354, 355, 356, 359, 367, 374, 378, 384, 408], "start": [305, 328, 399, 400, 403, 406, 411, 412, 417, 419], "keep_cartesian": [306, 403], "b": [306, 401, 402, 403, 406, 423], "what": [306, 405, 406], "cooddin": 306, "remain": [306, 406, 420], "pbc": 307, "enforc": [307, 406], "perod": 307, "condit": [307, 406], "too": [308, 403, 406, 422], "poscar_supercel": [310, 311, 312, 313, 315, 403], "origin": [311, 377, 378, 379, 380, 406, 412, 416, 419], "overwritten": 311, "b1x": 311, "b1y": 311, "b1z": 311, "b2x": 311, "b2y": 311, "b2z": 311, "b3x": 311, "b3y": 311, "b3z": 311, "note": [311, 355, 394, 401, 408, 412, 413, 415, 424], "creation": [311, 406], "make": [311, 345, 349, 351, 353, 354, 359, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 402, 403, 405, 406, 417, 419], "deep": 311, "copi": [311, 349, 406, 415], "analysi": [313, 345, 418, 419], "real": [313, 355, 419], "featur": [313, 351, 355, 362, 370, 406, 417, 418, 419], "storag": [313, 406], "util": [313, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 401, 402, 406, 413, 417, 418, 419, 422], "poscarutil": [313, 403], "poscardiff": [313, 315], "strcutur": 314, "repair": [316, 317, 324, 325, 341, 343, 406, 420], "apply_symmetri": [316, 317, 353, 383, 384, 385, 386, 387, 388, 389, 390], "fermihandl": [317, 318, 319, 320, 321, 322, 323, 341, 345, 351, 383, 384, 385, 386, 387, 388, 389, 390], "Then": [317, 351, 357, 358, 360, 361, 362, 363, 366, 368, 369, 370, 373, 377, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 396, 424], "overid": [317, 373, 374], "srufac": [317, 318, 321], "iso_rang": [318, 321, 386, 387], "iso_surfac": [318, 321, 386, 387], "iso_valu": [318, 321, 387], "save_gif": [318, 322, 387], "print_plot_opt": [318, 319, 320, 321, 322, 325, 326, 328, 329, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 412, 417, 424], "slide": [318, 321], "go": [318, 321, 328, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 399, 400, 401, 402, 403, 408], "ther": [318, 321], "slice_norm": [319, 320, 383, 385], "slice_origin": [319, 320, 383, 385], "save_2d": [319, 320, 321, 322], "save_2d_slic": [319, 320, 385], "save_mp4": 322, "save_3d": 322, "gap": [324, 355, 359, 394], "bands_set": [325, 341, 373, 374], "cubic": [325, 326, 412, 424], "interpolation_typ": [325, 326, 412, 424], "projection_mask": [325, 326, 328, 412, 424], "dos_set": [325, 341, 373, 374], "dos_limit": [325, 328], "savefig": [325, 326, 328, 329, 356, 367, 412, 414, 415, 417, 424], "k_limit": 325, "title_fonts": 325, "draw_fermi": 325, "plot_color_bar": [325, 356, 367, 378, 379, 380], "keyword": [325, 341, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 406, 416], "argument": [325, 328, 341, 345, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 406, 415, 416, 421, 423], "window": [325, 326, 328, 355, 406, 412, 418], "structutr": [326, 412], "sting": [326, 412], "By": [326, 379, 383, 384, 385, 386, 387, 388, 389, 390, 406, 412, 418, 424], "For": [326, 328, 341, 351, 357, 359, 360, 361, 362, 363, 366, 368, 369, 370, 378, 379, 383, 384, 385, 386, 387, 388, 389, 390, 393, 406, 411, 412, 415, 417, 418, 419, 420, 424], "accur": [326, 412], "kanem": [326, 412], "decid": [326, 406, 412, 417], "plt": [326, 328, 329, 401, 412, 417, 424], "outfil": [327, 331, 332, 396, 413, 419, 422], "procar_merg": [327, 413], "gz": [327, 413], "mergeparallel": [327, 413], "fixformat": [327, 413], "nspin": [327, 349, 413, 416], "concaten": [327, 336, 341, 344, 420], "procar_": [327, 413], "compress": [327, 413], "parallel": [327, 344, 413], "detect": [327, 359, 413], "nsppol": [327, 413], "being": [328, 383, 406], "carri": [328, 355, 406, 412, 415], "srvo3": 328, "perform": [328, 345, 346, 349, 351, 406, 409, 410, 417, 419, 421, 424], "explain": [328, 344, 406], "exmapl": [328, 383, 385, 386, 387, 388, 389, 390, 393, 395, 396, 399, 400, 402, 403], "tutori": [328, 363, 407, 418], "parametric_lin": [328, 367, 368, 369, 373, 374, 420], "stack_orbit": [328, 366, 367, 368, 369, 370, 373, 374, 420], "stack_speci": [328, 367, 368, 369, 373, 374, 420], "polor": 328, "packag": [328, 349, 353, 354, 356, 367, 374, 378, 384, 401, 402, 403, 406, 412, 415, 418], "relev": [328, 345, 355, 406], "srvo": [328, 411, 412, 415], "choos": [328, 355, 406], "oxygen": [328, 415], "sr1": 328, "o3": 328, "900891": 328, "000000": [328, 418, 422], "sr": [328, 411, 412, 415], "500000": 328, "noth": [328, 406], "indeci": 328, "relav": 328, "while": [328, 355, 406, 415, 418, 419], "ask": [328, 406, 415], "graph": [328, 406], "higher": 328, "curv": [328, 415], "accept": [328, 406, 416], "png": [328, 385, 412, 415, 424], "jpg": 328, "interact": [328, 401, 406, 418], "well": [328, 355, 377, 379, 406, 412, 413, 418], "entri": [328, 363, 403], "cal": 328, "argumnet": [328, 415], "elk": [328, 347, 410, 411, 412, 414, 415], "fill": [328, 415], "clarif": 328, "visit": 328, "clarifi": 328, "lingo": 328, "top": [328, 415], "take": [328, 341, 349, 355, 359, 360, 368, 406, 416, 421, 423], "treat": [328, 406, 417], "subplot": [328, 401, 402], "larger": [328, 406], "row": [328, 411, 412, 419], "colomun": 328, "fig": [328, 358, 401, 412], "linspac": 328, "pi": [328, 383], "1000": [328, 401], "sin": 328, "plt_show": 328, "skip": [328, 418], "set_ylim": 328, "k_z_plane": [329, 417], "k_z_plane_tol": [329, 417], "rot_symm": [329, 417], "translat": [329, 420], "exportplt": [329, 417, 424], "k_z": [329, 417], "invalid": [329, 406, 417], "nkx": 330, "nky": 330, "grid_siz": 331, "40": [331, 346, 383, 396, 400, 402, 412], "with_time_revers": 331, "recip": [331, 345, 396, 418], "hpkot": [331, 396], "threshold": [331, 396, 401], "07": [331, 396], "angle_toler": 331, "supercell_matrix": [331, 363, 396, 424], "recepi": 331, "procarrepair": [332, 422], "exist": 333, "bandstructur": [334, 406, 413], "user": [341, 355, 357, 359, 360, 361, 362, 366, 368, 369, 370, 396, 406, 411, 412, 417], "pre": [341, 363, 373, 374, 377, 378, 379, 380, 393, 396, 406, 409, 410], "cat": [341, 344, 413, 420], "depend": [341, 408, 415], "mai": [341, 355, 362, 363, 370, 406, 412, 418], "orbitald": 341, "bandtructur": 341, "combin": [341, 374, 378, 406, 411, 412, 413, 418], "fermi2d": [341, 376, 378, 380, 381, 405, 417], "generate2dkmesh": [341, 393], "kmesh": [341, 345, 348, 351, 353, 377, 378, 379, 380, 395], "bandgap": [341, 392, 397, 405], "reapir": 341, "abinitoutput": 344, "prtprocar": 344, "nameofoutputfil": 344, "split": [344, 376, 381, 399, 400, 402, 403, 405, 413, 417], "guid": [345, 347, 349, 351, 357, 360, 361, 362, 366, 368, 369, 370, 407], "eigenvector": 345, "writeeigenvector": 345, "ye": 345, "eigenvectorsastext": 345, "block": [345, 412, 420], "calcualt": 345, "writebandout": 345, "analisi": 345, "writedetailedxml": 345, "writedetailedout": 345, "your": [345, 348, 349, 406, 407, 418], "dftb_in": 345, "hsd": 345, "ouput": 345, "much": [345, 359, 403], "faster": [345, 419], "variou": [345, 348, 349, 351, 356, 367, 374, 378, 384, 409, 410, 416, 420, 421, 423], "independ": [345, 348, 349, 351, 406], "bin": [345, 349, 401], "http": [345, 363, 383, 406, 408, 418], "dftbplu": 345, "readthedoc": 345, "en": 345, "latest": 345, "bandstruct": 345, "html": [345, 363, 406], "sure": [345, 349, 351, 353, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 402, 405, 406], "respect": [345, 359, 403, 406, 411, 412, 417, 419, 424], "readinitialcharg": 345, "maxscciter": 345, "hamiltonian": 345, "kpointsandweight": 345, "suppos": 345, "scctoler": 345, "kline": 345, "333333": 345, "gamma": [345, 346, 351, 354, 393, 412, 413, 421, 423, 424], "bandlin": 346, "band_": [346, 411, 412], "_a": 346, "obtain": [346, 399, 401, 409, 410, 412, 413, 420], "task": [346, 355, 409, 410], "22": [346, 368, 371, 399, 400, 403], "addition": [346, 416], "spinpol": 346, "These": [346, 352, 365, 372, 373, 374, 376, 382, 392, 398, 405, 406, 411, 412, 418], "join": [346, 353, 356, 367, 378, 384, 399, 400, 401, 402, 403], "plot1d": 346, "were": [346, 400, 406], "prepar": 347, "perper": 347, "dftb": 347, "fatband": 348, "lobter": 348, "lobstercod": 348, "v6": [348, 349], "pw": [348, 349], "abov": [348, 349, 351, 355, 380, 383, 386, 387, 400, 406, 411, 412, 414], "bands_dirnam": [348, 349, 351], "dos_dirnam": [348, 349, 351], "bands_mod": [348, 349, 351], "dos_mod": [348, 349, 351], "fermi3d": [348, 349, 382, 391, 405, 418], "right": [348, 359, 401, 406, 415, 418, 420], "wf_collect": 348, "nosym": 348, "noinv": 348, "k_point": [348, 349], "520": 348, "0000000": 348, "1428571": 348, "2857143": 348, "4285714": 348, "0000000000": [348, 349], "0000": 348, "0200000000": 348, "4800000000": 348, "5000000000": [348, 349], "5110420726": 348, "4889579274": 348, "7539676705": 348, "2460323295": 348, "7650097432": 348, "2349902568": 348, "h2": 348, "h0": 348, "2238002446": 348, "meth": 348, "explicitli": [348, 349, 406], "lobster_input_fil": 348, "explicit": [348, 349], "createfatband": 348, "2p_x": 348, "2p_y": 348, "2p_z": 348, "li": [348, 406], "refer": [348, 357, 360, 361, 362, 366, 368, 369, 370, 378, 379, 406, 411, 412, 416, 420, 421, 423], "fe": [348, 356, 357, 358, 360, 361, 362, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 384, 385, 386, 387, 388, 389, 390, 394, 395, 396, 415], "lobster_q": 348, "projwfc": 349, "kresolveddo": 349, "main": [349, 359, 416, 421, 423], "nscf": 349, "crystal_b": 349, "6250000000": 349, "2500000000": 349, "u": [349, 406, 407, 417], "3750000000": 349, "7500000000": 349, "w": [349, 406, 418], "occur": [349, 406, 412], "269": 349, "0083333333": 349, "0166666667": 349, "0250000000": 349, "0333333333": 349, "0416666667": 349, "4916666667": 349, "5062500000": 349, "0125000000": 349, "6125000000": 349, "2250000000": 349, "6187500000": 349, "2375000000": 349, "3691406250": 349, "7382812500": 349, "3632812500": 349, "7265625000": 349, "3574218750": 349, "7148437500": 349, "0058593750": 349, "0117187500": 349, "starting_magnet": 349, "branch": 349, "instal": [349, 402, 406], "git": [349, 408], "clone": 349, "gitlab": 349, "com": [349, 406, 408], "pietrodeluga": 349, "q": [349, 418], "cd": [349, 408], "checkout": 349, "new_proj": 349, "side": [349, 374, 402, 406], "noncolin": 349, "lspinorb": 349, "savesigma": 349, "still": [350, 406], "develop": [350, 363, 373, 374, 377, 378, 379, 380, 393, 396, 410], "lorbit": [351, 424], "11": [351, 360, 368, 390, 391, 399, 406, 411, 420], "12": [351, 360, 368, 374, 399, 400, 411, 418, 420, 424], "wave": [351, 420], "ispin": [351, 424], "lnoncollinear": 351, "icharg": 351, "math": [351, 411, 412], "chgcar": 351, "line_mod": 351, "h": [351, 359, 401, 406, 421, 424], "demonstr": [352, 356, 365, 367, 372, 374, 376, 378, 382, 384, 392, 398, 400, 402, 403, 405], "capabl": [352, 355, 365, 372, 376, 382, 392, 405, 409, 410, 412, 418], "autoband": [352, 364, 405], "invers": [352, 355, 364, 405], "particip": [352, 355, 364, 405], "ratio": [352, 355, 364, 405], "download": [353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 399, 400, 401, 402, 403, 405], "data_dir": [353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 399, 400, 401, 402, 403, 415], "download_exampl": [353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 394, 395, 396], "save_dir": [353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 394, 395, 396], "graphen": 353, "spin_calc_typ": [353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 394, 395, 396], "calc_typ": [353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 394, 395, 396], "2d_band": 353, "root": [353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 394, 395, 396, 399, 400, 401, 402, 403], "sep": [353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 394, 395, 396, 399, 400, 402, 403], "bandstructure2dhandl": 353, "795606": 353, "plot_band_structur": 353, "add_fermi_plan": 353, "fermi_plane_s": 353, "energy_lim": 353, "There": [353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 407], "pass": [353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 406], "0001": 353, "research": [353, 354, 356, 359, 363, 367, 377, 378, 379, 380, 384, 407], "venv_doc": 353, "lib": 353, "site": [353, 411, 412, 420], "52": [353, 400, 420], "userwarn": [353, 354, 359, 363], "caus": [353, 406], "filter": [353, 355, 395, 420], "cast": 353, "float32": 353, "disabl": 353, "force_float": 353, "property_project": 353, "band_veloc": [353, 395], "bisb_monolay": [353, 380], "1904": [353, 380], "fermi_text_posit": 353, "clip_brillouin_zone_factor": 353, "17": [353, 360, 368, 380, 399, 400, 411], "18": [353, 358, 360, 368, 378, 379, 380, 381, 399], "19": [353, 380, 399, 400], "21": [353, 364, 380, 399], "minut": [353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 399, 400, 401, 402, 403], "522": [353, 364], "plot_2d_band": [353, 364], "jupyt": [353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 399, 400, 401, 402, 403, 405], "notebook": [353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 399, 400, 401, 402, 403, 405], "ipynb": [353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 399, 400, 401, 402, 403], "galleri": [353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 399, 400, 401, 402, 403, 405], "sphinx": [353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 399, 400, 401, 402, 403, 405], "illustr": [354, 356, 367, 374, 378, 384, 415, 420], "compound": 354, "hbn": 354, "cncn": 354, "dive": [354, 355, 356, 359, 367, 374, 378, 384, 401, 402], "cnn": 354, "necessari": [354, 355, 359, 406, 412, 420], "librari": [354, 355, 359, 363, 373, 374, 377, 378, 379, 380, 393, 396, 406, 408, 409, 410], "focu": [354, 418], "re": [354, 419], "interest": [354, 355, 359, 406, 418], "96": 354, "97": 354, "42": [354, 400], "44": 354, "clim": [354, 356, 359, 367, 374, 378], "overlay_speci": [354, 355, 356, 358, 359, 360, 361, 362, 363, 373, 374, 420], "overlay_orbit": [354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 370, 373, 374, 420], "did": [354, 355, 359, 374, 415], "ebs_plot": [354, 359, 363, 412, 414], "607": [354, 359], "attempt": [354, 359, 406], "ident": [354, 359], "singular": [354, 359], "set_xlim": [354, 359], "246": 354, "98": 354, "900x600": [354, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370], "ylabel": [354, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374], "435": [354, 364], "plot_atomic_level": [354, 364], "power": [355, 406], "correl": [355, 411, 412], "defect": [355, 398, 401, 404, 405, 406], "tradition": 355, "That": [355, 409, 410], "tediou": 355, "prone": [355, 359], "care": [355, 417], "aim": [355, 406], "bulk": [355, 359], "fundament": [355, 359, 406], "insul": 355, "identifi": [355, 406, 411, 412, 417], "van": [355, 359, 382, 391, 405], "der": [355, 359], "waal": [355, 359], "suitabl": [355, 396, 406], "emphas": 355, "execut": [355, 364, 371, 375, 381, 391, 397, 404, 406, 412], "without": [355, 403, 406, 415, 418], "intervent": 355, "identif": [355, 359], "evalu": 355, "autom": 355, "statist": 355, "distinct": 355, "rest": 355, "scenario": 355, "readili": [355, 406], "appar": 355, "standard": [355, 406], "robust": [355, 409, 410], "yet": [355, 407], "captur": [355, 359], "howev": [355, 359, 406, 412, 418], "anticip": 355, "continu": [355, 406, 418], "feedback": 355, "bi2se3_data_dir": [355, 359], "auto": 355, "As": [355, 401, 406, 412, 420], "slab": [355, 359, 398, 404, 405], "topolog": 355, "bi": 355, "dirac": 355, "cone": 355, "upper": [355, 401], "report": [355, 420], "txt": 355, "info": 355, "compris": 355, "associ": [355, 406], "autobandsplot": 355, "unknow": 355, "ok": 355, "953": 355, "956": 355, "27": [355, 364, 383, 399, 400, 403], "193": [355, 364], "plot_autoband": [355, 364], "wai": [356, 359, 367, 374, 378, 384, 401, 406, 407, 419], "explor": [356, 367, 374, 378, 384, 399, 401], "print_plot_op": 356, "config_path": [356, 367, 378, 384], "__path__": [356, 367, 378, 384], "590136": [356, 362, 370, 377], "colorbar_titl": [356, 367], "colorbar_title_s": [356, 367], "colorbar_title_pad": [356, 367], "colorbar_tick_labels": [356, 367], "fermi_color": [356, 367, 374], "fermi_linestyl": [356, 367, 374], "fermi_linewidth": [356, 367, 374], "grid_axi": [356, 367], "grid_color": [356, 367], "grid_linestyl": [356, 367], "grid_linewidth": [356, 367], "grid_which": [356, 367], "markers": [356, 367, 374], "weighted_color": [356, 367], "weighted_width": [356, 367], "figure_s": [356, 367, 374], "dpi": [356, 367, 374, 378], "xlabel": [356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374], "1000x600": [356, 367], "662": [356, 364], "plot_bandsplot_configur": [356, 364], "599480": [357, 358, 366, 367, 373, 374, 378, 415], "mean": [357, 359, 360, 361, 362, 366, 368, 369, 370, 406], "ref": [357, 360, 361, 362, 366, 368, 369, 370], "atomic_project": [357, 360, 361, 362, 366, 368, 369, 370], "167": [357, 364], "plot_colinear": [357, 364], "vasp_data_dir": 358, "qe_data_dir": 358, "maplotlib": 358, "2398": 358, "534": [358, 364], "plot_compare_band": [358, 364], "often": [359, 424], "usual": [359, 417], "procedur": [359, 406], "cumbersom": 359, "lowest": 359, "unoccupi": 359, "neutral": 359, "c_n": 359, "bn": 359, "practic": [359, 406], "nearest": [359, 401, 403], "neighbor": [359, 401, 403], "delai": 359, "photon": 359, "emitt": 359, "jara2021": 359, "auburger2021": 359, "simpler": [359, 419], "ipr_": 359, "nk": [359, 420], "sum_": [359, 420], "c_": 359, "nki": 359, "left": [359, 401, 418, 420], "sum_a": 359, "nka": 359, "been": [359, 406, 418], "context": [359, 406], "anderson": 359, "evers2000": 359, "kind": [359, 406], "perfectli": 359, "would": [359, 386, 387, 406, 411, 412, 417, 418], "bi2se3": [359, 398, 404, 405], "spinorbit": 359, "c_data_dir": 359, "zhang2009": 359, "six": 359, "quintupl": [359, 399], "five": [359, 411, 412], "thick": 359, "outer": 359, "contrast": [359, 406], "enough": 359, "clear": [359, 406, 414], "substitut": [359, 398, 404, 405], "plu": [359, 406], "adjac": 359, "vacanc": 359, "Its": 359, "ground": 359, "triplet": 359, "microwav": 359, "radiat": 359, "doherty2013": 359, "215": 359, "henc": 359, "to0": 359, "sever": [359, 403, 405, 418], "lie": 359, "dark": 359, "closest": 359, "doubl": [359, 424], "degener": 359, "occupi": 359, "optic": 359, "transit": [359, 417], "430": 359, "to431": 359, "to432": 359, "emiss": 359, "involv": 359, "excit": 359, "simul": 359, "occup": 359, "mention": 359, "delta": 359, "scfmethod": 359, "jin2021": 359, "540": 359, "24": [359, 364, 391, 399], "836": [359, 364], "plot_ipr": [359, 364], "sphinx_gallery_thumbnail_numb": [360, 383, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396], "0536": [360, 368], "express": [360, 368, 406], "therefor": [360, 368, 406, 411, 424], "14": [360, 368, 379, 385, 391, 399, 411, 420], "781": [360, 364], "plot_noncolinear_q": [360, 364], "596151": 361, "174": [361, 364], "plot_noncolinear_vasp": [361, 364], "few": [362, 370], "doc": [362, 370], "default_set": [362, 370], "ini": [362, 370], "556": [362, 364], "plot_spin_polar": [362, 364], "supercell_dir": 363, "mgb2": 363, "supercell_band": 363, "primitive_dir": 363, "primitive_band": 363, "mgb2_unfold": 363, "993523": 363, "unfold_mod": [363, 424], "033090": 363, "diag": [363, 424], "____": [363, 373, 374, 377, 378, 379, 380, 393, 396], "__": [363, 373, 374, 377, 378, 379, 380, 393, 396], "___": [363, 373, 374, 377, 378, 379, 380, 393, 396], "jun": [363, 373, 374, 377, 378, 379, 380, 393, 396], "10th": [363, 373, 374, 377, 378, 379, 380, 393, 396], "2021": [363, 373, 374, 377, 378, 379, 380, 393, 396], "cite": [363, 373, 374, 377, 378, 379, 380, 393, 396, 418], "uthpala": [363, 373, 374, 377, 378, 379, 380, 393, 396, 406], "herath": [363, 373, 374, 377, 378, 379, 380, 393, 396, 406], "pedram": [363, 373, 374, 377, 378, 379, 380, 393, 396, 406], "tavadz": [363, 373, 374, 377, 378, 379, 380, 393, 396, 406], "xu": [363, 373, 374, 377, 378, 379, 380, 393, 396, 406], "he": [363, 373, 374, 377, 378, 379, 380, 393, 396, 406], "eric": [363, 373, 374, 377, 378, 379, 380, 393, 396, 406], "bousquet": [363, 373, 374, 377, 378, 379, 380, 393, 396, 406], "sobhit": [363, 373, 374, 377, 378, 379, 380, 393, 396, 406], "singh": [363, 373, 374, 377, 378, 379, 380, 393, 396, 406], "francisco": [363, 373, 374, 377, 378, 379, 380, 393, 396, 406], "mu\u00f1oz": [363, 373, 374, 377, 378, 379, 380, 393, 396, 406], "aldo": [363, 373, 374, 377, 378, 379, 380, 393, 396, 406], "romero": [363, 373, 374, 377, 378, 379, 380, 393, 396, 406], "comput": [363, 373, 374, 377, 378, 379, 380, 393, 396, 406], "physic": [363, 373, 374, 377, 378, 379, 380, 393, 396, 406], "commun": [363, 373, 374, 377, 378, 379, 380, 393, 396, 406], "251": [363, 373, 374, 377, 378, 379, 380, 393, 396, 406], "2020": [363, 373, 374, 377, 378, 379, 380, 393, 396, 406], "107080": [363, 373, 374, 377, 378, 379, 380, 393, 396, 406], "rees": [363, 373, 374, 377, 378, 379, 380, 393, 396, 406], "boucher": [363, 373, 374, 377, 378, 379, 380, 393, 396, 406], "logan": [363, 373, 374, 377, 378, 379, 380, 393, 396, 406], "lang": [363, 373, 374, 377, 378, 379, 380, 393, 396, 406], "freddi": [363, 373, 374, 377, 378, 379, 380, 393, 396, 406], "farah": [363, 373, 374, 377, 378, 379, 380, 393, 396, 406], "684": [363, 401, 404], "proxi": [363, 406], "artist": 363, "org": [363, 383, 406, 418], "stabl": 363, "intermedi": 363, "legend_guid": 363, "23": [363, 364, 399, 403], "988": [363, 364], "plot_unfold": [363, 364], "04": [364, 371, 391, 397, 401], "53": [364, 400], "848": 364, "examples_00": 364, "03": [364, 371, 397, 400], "mb": [364, 371, 375, 381, 391, 397, 404], "00": [364, 371, 375, 381, 391, 397, 402, 404], "287": [366, 371], "plot_colinear_do": [366, 371], "font_siz": [367, 396], "spin_label": 367, "stack_y_label": 367, "x_label": [367, 378], "y_label": [367, 378], "360": [367, 371], "plot_dosplot_configur": [367, 371], "948": [368, 371], "plot_noncolinear_dos_q": [368, 371], "5962": [369, 379], "546": [369, 371], "plot_noncolinear_dos_vasp": [369, 371], "761": [370, 371], "plot_spin_polarized_do": [370, 371], "902": 371, "examples_01": 371, "bands_dir": [373, 374], "dos_dir": [373, 374], "1650x550": [373, 374], "621": [373, 375], "plot_bandsdosplot": [373, 375], "ll": [374, 378, 384, 399, 400, 401, 402, 403], "overal": 374, "343": [374, 375], "plot_bandsdosplot_configur": [374, 375], "964": 375, "examples_02": 375, "bands_do": 375, "noncolinear": [376, 381, 405, 411], "rashba": [376, 381, 405, 411, 412, 417], "comp": [377, 378, 379, 380], "rot": [377, 378, 379, 380], "trasl": [377, 378, 379, 380], "_____________________________________________________": [377, 378, 379, 380], "add_legend": [377, 378], "specfic": [377, 379, 383, 385, 386, 387, 388, 389, 390], "736": [377, 381], "plot_fermi2d": [377, 381], "plain_band": [378, 379, 380], "add_axes_label": 378, "no_arrow": [378, 380], "arrow_color": [378, 379], "arrow_dens": [378, 379, 380], "spin_project": [378, 379, 380], "335": [378, 381, 404], "plot_fermi2d_configur": [378, 381], "s_z": [379, 411, 412, 417], "arrow_project": 379, "842": [379, 381], "plot_fermi2d_spin_textur": [379, 381], "paper": [380, 383, 406], "had": [380, 406, 412], "bisb": 380, "60ev": 380, "fermei": 380, "90ev": 380, "48": [380, 381], "983": [380, 381], "plot_rashba_spin_split": [380, 381], "32": [381, 399, 400], "897": 381, "examples_03": 381, "06": [381, 391, 404], "turn": [382, 383, 384, 385, 386, 387, 388, 389, 390, 405, 418], "off": [382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 395, 396, 399, 400, 402, 403, 405, 418], "isovalue_gif": [382, 391, 405], "alphen": [382, 391, 405], "fequenc": [382, 391, 405], "cross_sect": [382, 391, 405], "de": [383, 406], "frequenc": 383, "theoret": 383, "freuqenc": 383, "taken": [383, 406], "experiment": 383, "copper": 383, "silver": 383, "gold": 383, "haa": 383, "doi": [383, 396, 406, 418], "1098": 383, "rsta": 383, "1962": 383, "0011": 383, "hbar": 383, "cg": 383, "768e": 383, "statcoulomb": 383, "0e": 383, "cm": 383, "0546e": 383, "erg": 383, "au": 383, "ensur": [383, 384, 385, 386, 387, 388, 389, 390, 393, 395, 396, 399, 400, 402, 403, 406], "screen": [383, 384, 385, 386, 387, 388, 389, 390, 393, 395, 396, 399, 400, 402, 403, 424], "off_screen": [383, 384, 385, 386, 387, 388, 389, 390, 393, 395, 396, 399, 400, 402, 403], "actual": [383, 384, 385, 386, 387, 388, 389, 390, 406], "plot_fermi_cross_section_box_widget": 383, "1586": 383, "ang": 383, "1586e": 383, "365e": 383, "f_": 383, "exp": 383, "50e": 383, "1596": 383, "1596e": 383, "68e": 383, "3956": 383, "3956e": 383, "61e": 383, "85e": 383, "151": [383, 391], "plot_de_hass_van_alphen": [383, 391], "plot_fermi_surfac": [384, 388, 389, 390], "657": [384, 391, 399, 404], "plot_fermi3d_configur": [384, 391], "show_cross_section_area": 385, "outermost": 385, "widget": 385, "line_width": [385, 399, 400, 402, 403], "plot_fermi_cross_sect": 385, "2d_slice": 385, "443": [385, 391], "plot_fermi3d_cross_sect": [385, 391], "throughout": [386, 387, 406], "plot_fermi_isoslid": 386, "47": [386, 391], "330": [386, 391], "plot_fermi3d_isoslid": [386, 391], "exact": [387, 406], "create_isovalue_gif": 387, "46": [387, 391], "365": [387, 391], "plot_fermi3d_isovalue_gif": [387, 391], "180": [388, 391], "plot_fermi3d_plain": [388, 391], "231": [389, 391], "plot_fermi3d_spin": [389, 391], "079": [390, 391], "plot_fermi3d_spin_textur": [390, 391], "436": 391, "examples_04": 391, "09": 391, "kmesh_gener": [392, 397, 405, 417], "kpath_gener": [392, 397, 405], "particularli": [393, 413, 417, 422], "command": [393, 406, 408, 413, 414], "num_grids_x": 393, "num_grids_i": 393, "add_mesh": [393, 395, 399, 400, 402, 403], "show_ax": [393, 396], "show_grid": [393, 396], "384": [393, 397], "plot_2dkmesh_gener": [393, 397], "band_gap": 394, "135": [394, 397], "plot_bandgap": [394, 397], "dir": [395, 416, 421, 423], "pv": [395, 399, 400, 402, 403], "e_fermi": 395, "ibz2fbz": [395, 416], "enectron": 395, "3375": 395, "let": [395, 399, 400, 401, 403, 412], "band_0": 395, "atom_0": 395, "orbital_5": 395, "bands_gradi": 395, "08": 395, "scalar_bar_arg": 395, "band_spe": 395, "show_scalar_bar": [395, 399, 400, 402, 403], "919": [395, 397], "plot_eb": [395, 397], "momentum": [396, 418], "enabl": [396, 406, 417, 418, 424], "suffici": 396, "retriev": [396, 412], "slight": 396, "modif": [396, 403, 406], "regard": [396, 399, 400, 406, 417, 419], "seek": 396, "seekpath": [396, 408], "hinuma": 396, "et": [396, 418], "al": [396, 418], "pizzi": 396, "kumagai": 396, "oba": 396, "tanaka": 396, "diagram": 396, "crystallographi": 396, "scienc": [396, 406], "128": 396, "2017": 396, "140": 396, "184": 396, "1016": [396, 406], "commatsci": 396, "2016": 396, "015": 396, "k_path": 396, "k_label": 396, "ey": 396, "unique_label": 396, "unique_kpath": 396, "append": [396, 401], "ik": 396, "len": [396, 399], "add_lin": 396, "els": 396, "add_point_label": [396, 399, 400, 402, 403], "point_color": 396, "text_color": 396, "always_vis": [396, 399, 400, 402, 403], "view_yz": 396, "507": [396, 397], "plot_kpath_gener": [396, 397], "945": 397, "examples_05": 397, "cluster": [398, 400, 404, 405], "analyz": [398, 404, 405, 417], "radial": [398, 404, 405], "distribut": [398, 404, 405, 406, 407], "rdf": [398, 404, 405], "ql": 399, "itertool": [399, 400, 401, 402, 403], "def": [399, 400, 402, 403], "create_gif": [399, 400, 402, 403], "unit_cel": [399, 400, 402, 403], "save_fil": [399, 400, 402, 403], "add_titl": [399, 400, 402, 403], "delaunay_3d": [399, 400, 402, 403], "extract_feature_edg": [399, 400, 402, 403], "render_lines_as_tub": [399, 400, 402, 403], "show_point": [399, 400, 402, 403], "generate_orbital_path": [399, 400, 402, 403], "n_point": [399, 400, 402, 403], "open_gif": [399, 400, 402, 403], "orbit_on_path": [399, 400, 402, 403], "write_fram": [399, 400, 402, 403], "viewup": [399, 400, 402, 403], "close": [399, 400, 402, 403, 406, 418], "clusters_map": 399, "i_atom": 399, "clusters_arrai": 399, "26": [399, 400, 403], "28": [399, 403, 406], "29": [399, 400, 403, 406], "31": 399, "33": [399, 400], "34": [399, 404], "atoms_befor": [399, 400, 402, 403], "labels_befor": [399, 400, 402, 403], "zip": [399, 400, 401, 402, 403, 405], "labels_aft": [399, 400, 402, 403], "unit_cell_comb": [399, 400, 402, 403], "repeat": [399, 400, 402, 403, 420], "comb": [399, 400, 402, 403], "unit_cell_befor": [399, 400, 403], "atoms_before_clust": 399, "atoms_after_clust": 399, "plot_clusters_pyposcar": [399, 404], "agnr": [400, 401, 403], "finddefect": 400, "all_defect": 400, "nthe": 400, "write_defect": 400, "inspect": 400, "subtitut": 400, "0d": 400, "agrn": 400, "edg": 400, "tmp_a": [400, 403], "atoms_aft": [400, 402, 403], "unit_cell_aft": [400, 403], "atoms_before_defect_find": 400, "atoms_after_defect_find": 400, "find_forgein_atom": 400, "delimit": 400, "minima": 400, "maxima": 400, "less": 400, "nearest_neighbors_environ": 400, "environ": [400, 401], "abund": 400, "35": 400, "51": 400, "54": [400, 424], "55": 400, "56": 400, "57": 400, "58": 400, "59": 400, "60": [400, 403, 406, 417, 419], "62": 400, "63": 400, "64": [400, 403], "65": [400, 403], "601": [400, 404], "plot_finding_defects_pyposcar": [400, 404], "insight": 401, "probabl": 401, "certain": [401, 406, 411, 412, 417], "anoth": [401, 415, 418], "understand": 401, "gridspec": 401, "my_rdf": 401, "thresholdsp": 401, "neighbor_thresholdsp": 401, "spcurv": 401, "kde_curvesp": 401, "share": [401, 406], "domain": [401, 406], "kde_spac": 401, "cutoff": 401, "inter": 401, "meaaningful": 401, "defen": 401, "databas": 401, "neighborsclass": 401, "latticeutil": [401, 403], "estimatemaxbonddist": 401, "neighbor_threshold": 401, "d_max": 401, "9500000000000002": 401, "6500000000000001": 401, "95": 401, "4772259999999975": 401, "height_ratio": 401, "ax1": 401, "ax2": 401, "ax3": 401, "kde_curv": 401, "set_titl": [401, 412], "cc": 401, "cycl": 401, "next": [401, 406, 418], "flatten": 401, "histogram": 401, "distance_matrix": 401, "100": 401, "patch": 401, "hist": 401, "edgecolor": 401, "alpha": [401, 420, 423], "set_xlabel": 401, "tolist": 401, "plotlabel": 401, "var_cutoff": 401, "leg1": 401, "loc": 401, "data_cutoff": 401, "leg2": 401, "color_label": 401, "add_artist": 401, "tight_layout": 401, "7725483399593904": 401, "8348023074035522": 401, "9434419177103412": 401, "7744469683442248": 401, "3036753236814713": 401, "4123149339882604": 401, "2433199846221439": 401, "0520815280171307": 401, "883086578651014": 401, "7140916292848973": 401, "plot_rdf_cutoff_pyposcar": [401, 404], "boron": 402, "nitrogen": 402, "yb6": 402, "nelement": 402, "nposit": 402, "098": 402, "1989": 402, "8011": 402, "nchang": 402, "new_po": 402, "border": 402, "519": [402, 404], "plot_subsitution_pyposcar": [402, 404], "poscar_util": 403, "9agnr": 403, "shrink": [403, 424], "smaller": [403, 419], "atoms_before_sc": 403, "atoms_after_sc": 403, "3878": 403, "71": 403, "726": 403, "9087": 403, "nnow": 403, "3x1x1": 403, "311": 403, "atoms_before_supercel": 403, "atoms_after_supercel": 403, "nfinal": 403, "change_el": 403, "atoms_before_defect": 403, "atoms_after_defect": 403, "nn": 403, "nn_list": 403, "874": [403, 404], "plot_utils_pyposcar": [403, 404], "examples_06": 404, "examples_python": 405, "examples_jupyt": 405, "open": [406, 409, 410, 418], "head": [406, 407], "bibtex": 406, "articl": [406, 418], "herath2020107080": 406, "journal": [406, 418], "page": [406, 407, 410, 418], "year": [406, 418], "issn": 406, "0010": 406, "4655": 406, "cpc": 406, "2019": [406, 418], "url": [406, 418], "www": 406, "sciencedirect": 406, "pii": 406, "s0010465519303935": 406, "condens": 406, "matter": 406, "lang2024109063": 406, "maintain": 406, "reliabl": 406, "297": 406, "109063": 406, "2024": 406, "2023": 406, "s0010465523004083": 406, "andr": 406, "tellez": 406, "nicola": 406, "vasquez": 406, "who": 406, "made": 406, "substanti": 406, "concept": 406, "design": 406, "softwar": [406, 418], "draft": 406, "substant": 406, "revis": 406, "global": 406, "effort": 406, "team": 406, "thank": 406, "jan": 406, "janssen": 406, "litong": 406, "jiang": 406, "nichola": 406, "pike": 406, "contact": 406, "don": [406, 407], "munoz": 406, "departamento": 406, "isica": 406, "facultad": 406, "ciencia": 406, "universidad": 406, "chile": 406, "santiago": 406, "nanosci": 406, "nanotechnologi": 406, "cedenna": 406, "depart": 406, "astronomi": 406, "west": 406, "virginia": 406, "univers": 406, "morgantown": 406, "wv": 406, "26505": 406, "6315": 406, "usa": 406, "rutger": 406, "piscatawai": 406, "nj": 406, "08854": 406, "physiqu": 406, "eoriqu": 406, "mat": 406, "eriaux": 406, "cesam": 406, "universit": 406, "eg": 406, "4000": 406, "sart": 406, "tilman": 406, "belgium": 406, "gnu": 406, "public": [406, 407, 418], "june": 406, "2007": 406, "copyright": 406, "free": 406, "foundat": 406, "inc": 406, "fsf": 406, "everyon": 406, "permit": 406, "verbatim": 406, "document": [406, 415], "preambl": 406, "copyleft": 406, "awai": 406, "freedom": 406, "guarante": 406, "releas": 406, "speak": 406, "price": 406, "wish": [406, 412], "receiv": 406, "piec": 406, "know": 406, "thing": 406, "protect": 406, "prevent": [406, 422], "deni": 406, "surrend": 406, "respons": 406, "grati": 406, "fee": 406, "recipi": 406, "And": 406, "gpl": 406, "assert": 406, "offer": 406, "give": [406, 417, 420], "legal": 406, "permiss": [406, 422], "warranti": 406, "sake": 406, "mark": 406, "erron": [406, 422], "previou": 406, "devic": 406, "although": 406, "manufactur": 406, "incompat": 406, "systemat": 406, "pattern": 406, "abus": 406, "individu": 406, "unaccept": 406, "prohibit": 406, "those": 406, "aris": [406, 422], "stand": 406, "provis": 406, "futur": [406, 412], "threaten": 406, "constantli": 406, "patent": 406, "restrict": 406, "purpos": [406, 424], "avoid": 406, "danger": 406, "could": [406, 412, 417, 419], "proprietari": 406, "assur": 406, "cannot": 406, "AND": 406, "definit": [406, 418], "law": 406, "semiconductor": 406, "license": 406, "address": 406, "organ": 406, "adapt": 406, "fashion": 406, "earlier": 406, "unmodifi": 406, "propag": 406, "anyth": 406, "directli": 406, "secondarili": 406, "liabl": 406, "infring": 406, "applic": 406, "except": 406, "privat": 406, "avail": [406, 407, 412, 417, 418, 424], "countri": 406, "activ": 406, "convei": 406, "parti": 406, "mere": 406, "network": 406, "transfer": 406, "appropri": 406, "notic": 406, "extent": 406, "promin": 406, "visibl": [406, 407], "tell": 406, "menu": 406, "meet": 406, "criterion": 406, "offici": 406, "recogn": 406, "bodi": 406, "languag": 406, "wide": 406, "among": 406, "serv": 406, "essenti": [406, 416], "kernel": 406, "compil": 406, "produc": [406, 424], "interpret": 406, "tool": 406, "link": [406, 415], "subprogram": 406, "intim": 406, "flow": 406, "regener": 406, "grant": 406, "irrevoc": 406, "met": 406, "affirm": 406, "unlimit": 406, "constitut": 406, "acknowledg": [406, 407], "fair": 406, "long": [406, 412], "sole": 406, "exclus": 406, "facil": 406, "compli": 406, "thu": [406, 411], "behalf": 406, "outsid": 406, "relationship": 406, "circumst": 406, "sublicens": 406, "unnecessari": 406, "anti": 406, "circumvent": 406, "shall": 406, "deem": 406, "technolog": 406, "measur": 406, "fulfil": 406, "oblig": 406, "wipo": 406, "treati": 406, "adopt": 406, "decemb": 406, "1996": 406, "waiv": 406, "forbid": 406, "exercis": 406, "disclaim": 406, "intent": 406, "against": 406, "medium": 406, "conspicu": 406, "publish": [406, 418], "intact": 406, "absenc": 406, "date": [406, 408, 418], "entir": 406, "anyon": 406, "possess": 406, "regardless": 406, "natur": 406, "aggreg": 406, "beyond": [406, 412, 415], "inclus": 406, "machin": 406, "readabl": 406, "embodi": 406, "accompani": 406, "durabl": 406, "customarili": 406, "interchang": 406, "valid": 406, "least": 406, "three": [406, 411, 412, 413, 418, 419], "spare": 406, "model": 406, "reason": [406, 412], "cost": 406, "server": 406, "altern": 406, "occasion": 406, "noncommerci": 406, "subsect": 406, "6b": 406, "sai": 406, "host": 406, "satisfi": 406, "peer": 406, "transmiss": 406, "6d": 406, "portion": 406, "whose": 406, "exclud": 406, "consum": 406, "tangibl": 406, "person": 406, "famili": 406, "household": 406, "sold": 406, "incorpor": [406, 412], "dwell": 406, "doubt": 406, "favor": 406, "coverag": 406, "common": 406, "statu": 406, "commerci": 406, "industri": 406, "unless": 406, "signific": 406, "suffic": 406, "interf": 406, "transact": 406, "perpetu": 406, "character": 406, "neither": 406, "nor": 406, "abil": 406, "rom": 406, "servic": 406, "itself": [406, 407], "advers": 406, "affect": 406, "violat": 406, "rule": 406, "protocol": 406, "across": [406, 420], "publicli": 406, "password": 406, "unpack": 406, "supplement": 406, "though": 406, "govern": 406, "own": 406, "notwithstand": 406, "holder": 406, "liabil": 406, "preserv": 406, "misrepresent": 406, "licensor": 406, "declin": 406, "trademark": 406, "trade": 406, "indemnif": 406, "contractu": 406, "assumpt": 406, "impos": 406, "relicens": 406, "surviv": 406, "statement": 406, "termin": [406, 408], "expressli": 406, "void": 406, "paragraph": 406, "ceas": 406, "reinstat": 406, "provision": 406, "until": 406, "perman": 406, "fail": 406, "notifi": 406, "dai": 406, "cessat": 406, "moreov": 406, "cure": 406, "receipt": 406, "qualifi": 406, "ancillari": 406, "consequ": 406, "likewis": 406, "action": [406, 418], "downstream": 406, "subject": 406, "complianc": 406, "entiti": 406, "asset": 406, "subdivid": 406, "whatev": 406, "predecessor": 406, "royalti": 406, "litig": 406, "claim": 406, "counterclaim": 406, "lawsuit": 406, "alleg": 406, "sell": 406, "sale": 406, "acquir": 406, "hereaft": 406, "manner": [406, 412], "worldwid": 406, "agreement": 406, "commit": 406, "denomin": 406, "coven": 406, "sue": 406, "knowingli": 406, "reli": 406, "arrang": [406, 411, 412], "depriv": 406, "yourself": 406, "benefit": 406, "knowledg": 406, "believ": 406, "pursuant": 406, "procur": 406, "convey": 406, "discriminatori": 406, "scope": 406, "busi": 406, "payment": 406, "primarili": 406, "enter": 406, "march": 406, "constru": 406, "impli": 406, "defens": 406, "court": 406, "contradict": 406, "excus": 406, "simultan": 406, "pertin": 406, "agre": 406, "collect": [406, 418], "whom": 406, "refrain": 406, "affero": 406, "concern": [406, 418], "Such": 406, "spirit": 406, "distinguish": 406, "later": 406, "ever": 406, "THERE": 406, "NO": 406, "THE": 406, "TO": 406, "BY": 406, "IN": 406, "OR": 406, "AS": 406, "OF": 406, "BUT": 406, "merchant": 406, "fit": 406, "risk": 406, "qualiti": 406, "WITH": 406, "prove": 406, "event": 406, "WILL": 406, "BE": 406, "damag": 406, "incident": 406, "consequenti": 406, "inabl": 406, "loss": 406, "BEING": 406, "inaccur": 406, "sustain": 406, "failur": 406, "even": [406, 412], "IF": 406, "SUCH": 406, "advis": 406, "review": 406, "approxim": 406, "absolut": 406, "waiver": 406, "civil": 406, "greatest": 406, "best": 406, "achiev": [406, 422], "redistribut": 406, "safest": 406, "pointer": 406, "brief": 406, "idea": 406, "hope": 406, "mail": 406, "short": 406, "welcom": 406, "hypothet": 406, "Of": 406, "cours": 406, "gui": 406, "employ": 406, "programm": 406, "school": 406, "sign": [406, 422], "subroutin": 406, "lesser": 406, "philosophi": 406, "why": 406, "lgpl": 406, "herein": 406, "subclass": 406, "minim": 406, "isol": 406, "reproduc": 406, "bound": 406, "suppli": [406, 412], "good": [406, 418], "faith": 406, "meaning": [406, 414], "header": 406, "choic": [406, 415, 417], "layout": 406, "accessor": 406, "macro": 406, "inlin": 406, "templat": 406, "ten": 406, "fewer": 406, "engin": 406, "dure": [406, 422], "recombin": 406, "relink": 406, "mechan": 406, "properli": 406, "compat": 406, "4d0": 406, "4d1": 406, "uncombin": 406, "prerequisit": 407, "simplest": 407, "recommend": [407, 411, 412, 422], "anaconda": 407, "conda": 407, "forg": [407, 408], "pip": 407, "via": 407, "pypi": 407, "depth": 407, "instruct": [407, 418], "elsevi": 407, "2nd": 407, "scientif": 407, "ase": 408, "romerogroup": 408, "manag": [409, 410, 416, 421, 423], "kohn": [409, 410, 420], "sham": [409, 410, 420], "multitud": [409, 410], "partial": [409, 410], "stll": 410, "convent": [411, 412, 415], "collinear": [411, 412, 416, 420], "s_x": [411, 412, 417, 419], "s_y": [411, 412, 417], "st": [411, 412, 417], "perpendicular": [411, 412, 417], "k_x": [411, 412, 417], "k_y": [411, 412, 417], "seismic": [411, 412], "ion": [411, 412, 419, 420], "_3": [411, 412, 415], "strongli": [411, 412], "jm": 411, "y_": [411, 412, 420], "logic": [411, 412], "probe": [411, 412], "queri": [411, 412], "portrai": 412, "fine": [412, 417], "usag": [412, 413, 414, 415, 417, 419, 422, 424], "39": 412, "79": 412, "119": 412, "159": 412, "syntax": 412, "meant": 412, "suit": 412, "four": 412, "convers": 412, "199": [412, 421, 424], "239": 412, "279": 412, "319": 412, "scriptbandsplot": 412, "hexagon": [413, 424], "procar_g": 413, "procar_k": 413, "procar_m": 413, "seper": 413, "scriptcat": 413, "acheiv": 414, "elk_dir": 414, "vasp_dir": [414, 415], "srvo_3": 414, "veri": [415, 419], "ones": 415, "invlov": 415, "exmpla": 415, "match": 415, "aregumnet": 415, "button": 415, "defalut": 415, "switch": [415, 418], "back": 415, "dos_plain_v": 415, "lawngreen": 415, "royalblu": 415, "stach": 415, "variat": 415, "central": 416, "known": [416, 418, 421, 423], "path_to_calcul": [416, 421, 423], "k1": 416, "k2": 416, "k3": 416, "nprincip": 416, "prinicip": 416, "is_non_collinear": 416, "calcuul": 416, "kpoints_cartesian": 416, "kpoints_reduc": 416, "sometim": 416, "infom": 416, "meshgrid": 416, "index_mesh": 416, "kpoints_mesh": 416, "cartesian_mesh": 416, "bands_mesh": 416, "projected_mesh": 416, "project_phase_mesh": 416, "weights_mesh": 416, "bands_gradient_mesh": 416, "bands_hessian_mesh": 416, "ebs_sum": 416, "recov": 416, "broullin": 416, "dresselhau": 417, "topologi": 417, "examin": 417, "lifshitz": 417, "e_": 417, "noarrow": 417, "heat": 417, "fault": 417, "solut": 417, "90": 417, "degre": 417, "mostli": 417, "220": 417, "Be": 417, "scriptfermi2d": 417, "extern": 418, "phonon": 418, "divid": 418, "sub": 418, "monkhorst": 418, "pack": 418, "isym": 418, "focus": 418, "polygon": 418, "smooth": 418, "cube": 418, "999999": 418, "000001": 418, "triangl": 418, "assign": 418, "aspect": 418, "handel": 418, "isosurfcac": 418, "fermisurfcae3d": 418, "eigen": 418, "amaz": 418, "pyvista_doc": 418, "trimesh_doc": 418, "citat": 418, "trimesh_cit": 418, "author": 418, "dawson": 418, "haggerti": 418, "trimsh": 418, "sullivan2019pyvista": 418, "21105": 418, "joss": 418, "01450": 418, "month": 418, "37": 418, "1450": 418, "bane": 418, "sullivan": 418, "alexand": 418, "kaszynski": 418, "streamlin": 418, "toolkit": 418, "vtk": 418, "linux": 418, "mac": 418, "zoom": 418, "isometr": 418, "reset": 418, "click": 418, "middl": 418, "pan": 418, "scene": 418, "cmd": 418, "ctrl": 418, "mous": 418, "wheel": 418, "ctl": 418, "screenhsot": 418, "backgroundplott": 418, "pick": 418, "decreas": 418, "subset": 419, "heterostructur": 419, "enorm": 419, "consider": 419, "70": 419, "far": 419, "band50": 419, "column": [419, 420], "filtered_sp": 419, "p_x": 419, "especi": 419, "hybrid": 419, "filtered_kpoint": 419, "filtered_spin": 419, "filter_atom": 419, "atom_typ": 419, "rather": [419, 424], "scriptfilt": 419, "orbital_nam": 419, "human_atom": 419, "overview": 420, "guidanc": 420, "conduct": 420, "prep": 420, "commonli": 420, "decompos": 420, "224": 420, "12500000": 420, "65660295": 420, "occ": 420, "052": 420, "000": 420, "nion": 420, "spheric": 420, "sphere": 420, "radiu": 420, "phi_": 420, "mu": 420, "nu": 420, "sigma_": 420, "psi_": 420, "sigma": 420, "pauli": 420, "spinor": 420, "bmatrix": 420, "export": 420, "keyboard": 420, "shortcut": 420, "kapth": 421, "nsegment": 421, "belong": 421, "49": 421, "99": 421, "149": 421, "249": 421, "299": 421, "8660254": 421, "70710678": 421, "4330127": 421, "8291562": 421, "ill": 422, "lack": 422, "5000000": 422, "scriptrepair": 422, "beta": 423, "nspeci": 423, "atomic_numb": 423, "lattice_corn": 423, "cell_convex_hul": 423, "get_space_group_numb": 423, "get_space_group_intern": 423, "get_wyckoff_posit": 423, "get_spglib_symmetry_dataset": 423, "primit": 424, "becom": 424, "quit": 424, "sophist": 424, "fold": 424, "difficult": 424, "scheme": 424, "fat": 424, "proport": 424, "2x2x2": 424, "fname": 424, "shift_efermi": 424, "86": 424, "110": 424, "147": 424, "165": 424, "print_kpt": 424, "show_band": 424, "savetab": 424, "csv": 424, "unfolded_band": 424, "scriptunfold": 424, "unfold_mask": 424, "old": 424, "unfold_result": 424, "unfol": 424}, "objects": {"pyprocar.cfg": [[4, 0, 0, "-", "fermi_surface_3d"]], "pyprocar.cfg.fermi_surface_3d": [[4, 1, 1, "", "FermiSurface3DConfig"], [4, 1, 1, "", "FermiSurfaceMode"], [4, 1, 1, "", "FermiSurfaceProperty"]], "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig": [[4, 2, 1, "", "add_axes"], [4, 2, 1, "", "add_scalar_bar"], [4, 2, 1, "", "arrow_size"], [4, 3, 1, "", "as_dict"], [4, 2, 1, "", "axes_label_color"], [4, 2, 1, "", "axes_line_width"], [4, 2, 1, "", "background_color"], [4, 2, 1, "", "brillouin_zone_color"], [4, 2, 1, "", "brillouin_zone_line_width"], [4, 2, 1, "", "brillouin_zone_opacity"], [4, 2, 1, "", "brillouin_zone_style"], [4, 2, 1, "", "cross_section_slice_linewidth"], [4, 2, 1, "", "cross_section_slice_show_area"], [4, 2, 1, "", "extended_zone_directions"], [4, 2, 1, "", "fermi_tolerance"], [4, 2, 1, "", "interpolation_factor"], [4, 2, 1, "", "isoslider_color"], [4, 2, 1, "", "isoslider_style"], [4, 2, 1, "", "isoslider_title"], [4, 2, 1, "", "max_distance"], [4, 2, 1, "", "mode"], [4, 2, 1, "", "orbit_gif_n_points"], [4, 2, 1, "", "orbit_gif_step"], [4, 2, 1, "", "orbit_mp4_n_points"], [4, 2, 1, "", "orbit_mp4_step"], [4, 2, 1, "", "plotter_camera_pos"], [4, 2, 1, "", "plotter_offscreen"], [4, 2, 1, "", "projection_accuracy"], [4, 2, 1, "", "property"], [4, 2, 1, "", "property_name"], [4, 2, 1, "", "scalar_bar_bold"], [4, 2, 1, "", "scalar_bar_color"], [4, 2, 1, "", "scalar_bar_italic"], [4, 2, 1, "", "scalar_bar_label_font_size"], [4, 2, 1, "", "scalar_bar_labels"], [4, 2, 1, "", "scalar_bar_position_x"], [4, 2, 1, "", "scalar_bar_position_y"], [4, 2, 1, "", "scalar_bar_title"], [4, 2, 1, "", "scalar_bar_title_font_size"], [4, 2, 1, "", "spin_colors"], [4, 2, 1, "", "supercell"], [4, 2, 1, "", "surface_bands_colors"], [4, 2, 1, "", "surface_clim"], [4, 2, 1, "", "surface_cmap"], [4, 2, 1, "", "surface_color"], [4, 2, 1, "", "surface_opacity"], [4, 2, 1, "", "texture_cmap"], [4, 2, 1, "", "texture_color"], [4, 2, 1, "", "texture_opacity"], [4, 2, 1, "", "texture_scale"], [4, 2, 1, "", "texture_size"], [4, 2, 1, "", "x_axes_label"], [4, 2, 1, "", "y_axes_label"], [4, 2, 1, "", "z_axes_label"]], "pyprocar.cfg.fermi_surface_3d.FermiSurfaceMode": [[4, 2, 1, "", "PARAMETRIC"], [4, 2, 1, "", "PLAIN"], [4, 2, 1, "", "SPIN_TEXTURE"]], "pyprocar.cfg.fermi_surface_3d.FermiSurfaceProperty": [[4, 2, 1, "", "FERMI_SPEED"], [4, 2, 1, "", "FERMI_VELOCITY"], [4, 2, 1, "", "HARMONIC_AVERAGE_EFFECTIVE_MASS"]], "pyprocar.core": [[7, 1, 1, "", "BrillouinZone"], [10, 1, 1, "", "DensityOfStates"], [19, 1, 1, "", "ElectronicBandStructure"], [66, 1, 1, "", "FermiSurface"], [75, 1, 1, "", "FermiSurface3D"], [83, 1, 1, "", "Isosurface"], [90, 1, 1, "", "KPath"], [99, 1, 1, "", "Structure"], [125, 1, 1, "", "Surface"]], "pyprocar.core.BrillouinZone": [[8, 3, 1, "", "__init__"], [9, 3, 1, "", "wigner_seitz"]], "pyprocar.core.DensityOfStates": [[11, 3, 1, "", "__init__"], [12, 3, 1, "", "coupled_to_uncoupled_basis"], [13, 3, 1, "", "dos_sum"], [14, 3, 1, "", "get_current_basis"], [15, 4, 1, "", "is_non_collinear"], [16, 4, 1, "", "n_dos"], [17, 4, 1, "", "n_energies"], [18, 4, 1, "", "n_spins"]], "pyprocar.core.ElectronicBandStructure": [[20, 3, 1, "", "__init__"], [21, 4, 1, "", "bands_gradient"], [22, 4, 1, "", "bands_gradient_mesh"], [23, 4, 1, "", "bands_hessian"], [24, 4, 1, "", "bands_hessian_mesh"], [25, 4, 1, "", "bands_mesh"], [26, 3, 1, "", "calculate_scalar_gradient"], [27, 3, 1, "", "calculate_scalar_integral"], [28, 3, 1, "", "create_nd_mesh"], [29, 3, 1, "", "create_scaler_mesh"], [30, 3, 1, "", "create_vector_mesh"], [31, 3, 1, "", "ebs_ipr"], [32, 3, 1, "", "ebs_ipr_atom"], [33, 3, 1, "", "ebs_sum"], [34, 4, 1, "", "fermi_speed"], [35, 4, 1, "", "fermi_speed_mesh"], [36, 4, 1, "", "fermi_velocity"], [37, 4, 1, "", "fermi_velocity_mesh"], [38, 3, 1, "", "fix_collinear_spin"], [39, 4, 1, "", "harmonic_average_effective_mass"], [40, 4, 1, "", "harmonic_average_effective_mass_mesh"], [41, 3, 1, "", "ibz2fbz"], [42, 4, 1, "", "index_mesh"], [43, 3, 1, "", "interpolate_mesh_grid"], [44, 4, 1, "", "is_non_collinear"], [45, 4, 1, "", "kpoints_cartesian"], [46, 4, 1, "", "kpoints_cartesian_mesh"], [47, 4, 1, "", "kpoints_mesh"], [48, 4, 1, "", "kpoints_reduced"], [49, 3, 1, "", "mesh_to_array"], [50, 4, 1, "", "n_kx"], [51, 4, 1, "", "n_ky"], [52, 4, 1, "", "n_kz"], [53, 4, 1, "", "natoms"], [54, 4, 1, "", "nbands"], [55, 4, 1, "", "nkpoints"], [56, 4, 1, "", "norbitals"], [57, 4, 1, "", "nprincipals"], [58, 4, 1, "", "nspins"], [59, 3, 1, "", "plot_kpoints"], [60, 4, 1, "", "projected_mesh"], [61, 4, 1, "", "projected_phase_mesh"], [62, 3, 1, "", "ravel_array"], [63, 3, 1, "", "unfold"], [64, 3, 1, "", "update_weights"], [65, 4, 1, "", "weights_mesh"]], "pyprocar.core.FermiSurface": [[67, 3, 1, "", "__init__"], [68, 3, 1, "", "add_axes_labels"], [69, 3, 1, "", "add_legend"], [70, 3, 1, "", "find_energy"], [71, 3, 1, "", "plot"], [72, 3, 1, "", "savefig"], [73, 3, 1, "", "show"], [74, 3, 1, "", "spin_texture"]], "pyprocar.core.FermiSurface3D": [[76, 3, 1, "", "__init__"], [77, 3, 1, "", "extend_surface"], [78, 3, 1, "", "project_atomic_projections"], [79, 3, 1, "", "project_fermi_speed"], [80, 3, 1, "", "project_fermi_velocity"], [81, 3, 1, "", "project_harmonic_effective_mass"], [82, 3, 1, "", "project_spin_texture_atomic_projections"]], "pyprocar.core.Isosurface": [[84, 3, 1, "", "__init__"], [85, 4, 1, "", "dxyz"], [86, 4, 1, "", "nX"], [87, 4, 1, "", "nY"], [88, 4, 1, "", "nZ"], [89, 4, 1, "", "surface_boundaries"]], "pyprocar.core.KPath": [[91, 3, 1, "", "__init__"], [92, 3, 1, "", "get_kpoints_transformed"], [93, 3, 1, "", "get_optimized_kpoints_transformed"], [94, 4, 1, "", "kdistances"], [95, 4, 1, "", "nsegments"], [96, 4, 1, "", "tick_names"], [97, 4, 1, "", "tick_positions"], [98, 3, 1, "", "write_to_file"]], "pyprocar.core.Structure": [[100, 3, 1, "", "__init__"], [101, 4, 1, "", "a"], [102, 4, 1, "", "alpha"], [103, 4, 1, "", "atomic_numbers"], [104, 4, 1, "", "b"], [105, 4, 1, "", "beta"], [106, 4, 1, "", "c"], [107, 4, 1, "", "cell_convex_hull"], [108, 4, 1, "", "density"], [109, 4, 1, "", "gamma"], [110, 3, 1, "", "get_space_group_international"], [111, 3, 1, "", "get_space_group_number"], [112, 3, 1, "", "get_spglib_symmetry_dataset"], [113, 3, 1, "", "get_wyckoff_positions"], [114, 3, 1, "", "is_point_inside"], [115, 4, 1, "", "lattice_corners"], [116, 4, 1, "", "masses"], [117, 4, 1, "", "natoms"], [118, 4, 1, "", "nspecies"], [119, 3, 1, "", "plot_cell_convex_hull"], [120, 4, 1, "", "reciprocal_lattice"], [121, 4, 1, "", "species"], [122, 3, 1, "", "supercell"], [123, 3, 1, "", "transform"], [124, 4, 1, "", "volume"]], "pyprocar.core.Surface": [[126, 3, 1, "", "__init__"], [127, 4, 1, "", "centers"], [128, 3, 1, "", "export"], [129, 4, 1, "", "faces_array"], [130, 3, 1, "", "set_color_with_cmap"], [131, 3, 1, "", "set_scalars"], [132, 3, 1, "", "set_vectors"]], "pyprocar.io.abinit": [[144, 1, 1, "", "AbinitKpoints"], [146, 1, 1, "", "AbinitProcar"], [148, 1, 1, "", "Output"]], "pyprocar.io.abinit.AbinitKpoints": [[145, 3, 1, "", "__init__"]], "pyprocar.io.abinit.AbinitProcar": [[147, 3, 1, "", "__init__"]], "pyprocar.io.abinit.Output": [[149, 3, 1, "", "__init__"]], "pyprocar.io.bxsf": [[150, 1, 1, "", "BxsfParser"]], "pyprocar.io.bxsf.BxsfParser": [[151, 3, 1, "", "__init__"], [152, 3, 1, "", "parse_bxsf"]], "pyprocar.io.lobster": [[153, 1, 1, "", "LobsterParser"]], "pyprocar.io.lobster.LobsterParser": [[154, 3, 1, "", "__init__"], [155, 4, 1, "", "dos"], [156, 3, 1, "", "dos_parametric"], [157, 4, 1, "", "dos_projected"], [158, 4, 1, "", "dos_to_dict"], [159, 4, 1, "", "dos_total"], [160, 4, 1, "", "final_structure"], [161, 4, 1, "", "initial_structure"], [162, 3, 1, "", "parse_structure"], [163, 4, 1, "", "species"], [164, 4, 1, "", "structure"], [165, 4, 1, "", "structures"]], "pyprocar.io.qe": [[166, 1, 1, "", "QEParser"]], "pyprocar.io.qe.QEParser": [[167, 3, 1, "", "__init__"], [168, 4, 1, "", "final_structure"], [169, 3, 1, "", "getKpointLabels"], [170, 4, 1, "", "initial_structure"], [171, 3, 1, "", "kpoints_cart"], [172, 4, 1, "", "species"], [173, 4, 1, "", "structure"], [174, 4, 1, "", "structures"]], "pyprocar.io.siesta": [[175, 1, 1, "", "SiestaParser"]], "pyprocar.io.siesta.SiestaParser": [[176, 3, 1, "", "__init__"]], "pyprocar.io.vasp": [[177, 1, 1, "", "Kpoints"], [179, 1, 1, "", "Outcar"], [185, 1, 1, "", "Poscar"], [187, 1, 1, "", "Procar"], [193, 1, 1, "", "VaspXML"]], "pyprocar.io.vasp.Kpoints": [[178, 3, 1, "", "__init__"]], "pyprocar.io.vasp.Outcar": [[180, 3, 1, "", "__init__"], [181, 4, 1, "", "efermi"], [182, 3, 1, "", "get_symmetry_operations"], [183, 4, 1, "", "reciprocal_lattice"], [184, 4, 1, "", "rotations"]], "pyprocar.io.vasp.Poscar": [[186, 3, 1, "", "__init__"]], "pyprocar.io.vasp.Procar": [[188, 3, 1, "", "__init__"], [189, 4, 1, "", "kpoints_cartesian"], [190, 4, 1, "", "kpoints_reduced"], [191, 3, 1, "", "repair"], [192, 3, 1, "", "symmetrize"]], "pyprocar.io.vasp.VaspXML": [[194, 3, 1, "", "__init__"], [195, 4, 1, "", "bands"], [196, 4, 1, "", "bands_projected"], [197, 3, 1, "", "conv"], [198, 4, 1, "", "convergence"], [199, 4, 1, "", "convergence_electronic"], [200, 4, 1, "", "convergence_ionic"], [201, 4, 1, "", "dos"], [202, 4, 1, "", "dos_projected"], [203, 4, 1, "", "dos_to_dict"], [204, 4, 1, "", "dos_total"], [205, 4, 1, "", "energies"], [206, 4, 1, "", "energy"], [207, 4, 1, "", "fermi"], [208, 4, 1, "", "final_structure"], [209, 4, 1, "", "forces"], [210, 3, 1, "", "get_general"], [211, 3, 1, "", "get_params"], [212, 3, 1, "", "get_scstep"], [213, 3, 1, "", "get_set"], [214, 3, 1, "", "get_structure"], [215, 3, 1, "", "get_varray"], [216, 4, 1, "", "incar"], [217, 4, 1, "", "initial_structure"], [218, 4, 1, "", "is_finished"], [219, 4, 1, "", "iteration_data"], [220, 4, 1, "", "kpoints"], [221, 4, 1, "", "kpoints_list"], [222, 4, 1, "", "last_energy"], [223, 3, 1, "", "parse_vasprun"], [224, 4, 1, "", "potcar_info"], [225, 3, 1, "", "read"], [226, 4, 1, "", "species"], [227, 4, 1, "", "structure"], [228, 4, 1, "", "structures"], [229, 3, 1, "", "text_to_bool"], [230, 4, 1, "", "vasp_parameters"]], "pyprocar.plotter": [[238, 1, 1, "", "DOSPlot"], [258, 1, 1, "", "EBSPlot"], [279, 1, 1, "", "ProcarPlot"]], "pyprocar.plotter.DOSPlot": [[239, 3, 1, "", "__init__"], [240, 3, 1, "", "draw_fermi"], [241, 3, 1, "", "grid"], [242, 3, 1, "", "legend"], [243, 3, 1, "", "plot_dos"], [244, 3, 1, "", "plot_parametric"], [245, 3, 1, "", "plot_parametric_line"], [246, 3, 1, "", "plot_stack"], [247, 3, 1, "", "plot_stack_orbitals"], [248, 3, 1, "", "plot_stack_species"], [249, 3, 1, "", "save"], [250, 3, 1, "", "set_xlabel"], [251, 3, 1, "", "set_xlim"], [252, 3, 1, "", "set_xticks"], [253, 3, 1, "", "set_ylabel"], [254, 3, 1, "", "set_ylim"], [255, 3, 1, "", "set_yticks"], [256, 3, 1, "", "show"], [257, 3, 1, "", "update_config"]], "pyprocar.plotter.EBSPlot": [[259, 3, 1, "", "__init__"], [260, 3, 1, "", "draw_fermi"], [261, 3, 1, "", "grid"], [262, 3, 1, "", "legend"], [263, 3, 1, "", "plot_atomic_levels"], [264, 3, 1, "", "plot_bands"], [265, 3, 1, "", "plot_parameteric"], [266, 3, 1, "", "plot_parameteric_overlay"], [267, 3, 1, "", "plot_scatter"], [268, 3, 1, "", "save"], [269, 3, 1, "", "set_colorbar_title"], [270, 3, 1, "", "set_title"], [271, 3, 1, "", "set_xlabel"], [272, 3, 1, "", "set_xlim"], [273, 3, 1, "", "set_xticks"], [274, 3, 1, "", "set_ylabel"], [275, 3, 1, "", "set_ylim"], [276, 3, 1, "", "set_yticks"], [277, 3, 1, "", "show"], [278, 3, 1, "", "update_config"]], "pyprocar.plotter.ProcarPlot": [[280, 3, 1, "", "__init__"], [281, 3, 1, "", "atomicPlot"], [282, 3, 1, "", "parametricPlot"], [283, 3, 1, "", "plotBands"], [284, 3, 1, "", "scatterPlot"]], "pyprocar.pyposcar": [[289, 1, 1, "", "Poscar"], [298, 5, 1, "", "poscarDiff"], [299, 1, 1, "", "poscar_modify"], [309, 1, 1, "", "poscar_supercell"]], "pyprocar.pyposcar.Poscar": [[290, 3, 1, "", "__init__"], [291, 3, 1, "", "add"], [292, 3, 1, "", "load_from_data"], [293, 3, 1, "", "parse"], [294, 3, 1, "", "remove"], [295, 3, 1, "", "sort"], [296, 3, 1, "", "write"], [297, 3, 1, "", "xyz"]], "pyprocar.pyposcar.poscar_modify": [[300, 3, 1, "", "__init__"], [301, 3, 1, "", "add"], [302, 3, 1, "", "change_elements"], [303, 3, 1, "", "pos_multiply"], [304, 3, 1, "", "pos_sum"], [305, 3, 1, "", "remove"], [306, 3, 1, "", "scale_lattice"], [307, 3, 1, "", "shift"], [308, 3, 1, "", "write"]], "pyprocar.pyposcar.poscar_supercell": [[310, 3, 1, "", "__init__"], [311, 3, 1, "", "supercell"], [312, 3, 1, "", "write"]], "pyprocar": [[415, 0, 0, "-", "scriptDosplot"]], "pyprocar.scripts": [[316, 1, 1, "", "FermiHandler"], [324, 5, 1, "", "bandgap"], [325, 5, 1, "", "bandsdosplot"], [326, 5, 1, "", "bandsplot"], [327, 5, 1, "", "cat"], [328, 5, 1, "", "dosplot"], [329, 5, 1, "", "fermi2D"], [330, 5, 1, "", "generate2dkmesh"], [331, 5, 1, "", "kpath"], [332, 5, 1, "", "repair"], [412, 0, 0, "-", "scriptBandsplot"], [413, 0, 0, "-", "scriptCat"], [417, 0, 0, "-", "scriptFermi2D"], [418, 0, 0, "-", "scriptFermiHandler"], [419, 0, 0, "-", "scriptFilter"], [422, 0, 0, "-", "scriptRepair"], [424, 0, 0, "-", "scriptUnfold"]], "pyprocar.scripts.FermiHandler": [[317, 3, 1, "", "__init__"], [318, 3, 1, "", "create_isovalue_gif"], [319, 3, 1, "", "plot_fermi_cross_section"], [320, 3, 1, "", "plot_fermi_cross_section_box_widget"], [321, 3, 1, "", "plot_fermi_isoslider"], [322, 3, 1, "", "plot_fermi_surface"], [323, 3, 1, "", "print_default_settings"]], "pyprocar.scripts.scriptBandsplot": [[412, 5, 1, "", "bandsplot"]], "pyprocar.scripts.scriptCat": [[413, 5, 1, "", "cat"]], "pyprocar.scripts.scriptFermi2D": [[417, 5, 1, "", "fermi2D"]], "pyprocar.scripts.scriptFilter": [[419, 5, 1, "", "filter"]], "pyprocar.scripts.scriptRepair": [[422, 5, 1, "", "repair"]], "pyprocar.scripts.scriptUnfold": [[424, 5, 1, "", "unfold"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"band": [0, 1, 195, 345, 349, 351, 352, 353, 357, 358, 360, 361, 362, 363, 372, 377, 379, 395, 405, 412, 414, 416, 424], "structur": [0, 1, 99, 141, 164, 165, 173, 174, 227, 228, 345, 349, 351, 352, 353, 357, 358, 360, 361, 362, 363, 402, 405, 412, 416, 423], "plot": [0, 1, 2, 3, 6, 71, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 372, 373, 374, 377, 378, 379, 380, 384, 385, 386, 387, 388, 389, 390, 393, 396, 405, 412, 417, 424], "option": [0, 1, 2, 3, 6], "spin_color": [0, 2, 6], "color": [0, 2, 3, 6, 379], "colorbar_titl": [0, 2], "colorbar_title_s": [0, 2], "colorbar_title_pad": [0, 2], "colorbar_tick_labels": [0, 2], "cmap": [0, 2, 3, 6], "clim": [0, 2, 3, 6], "fermi_color": [0, 2, 6], "fermi_linestyl": [0, 2, 6], "fermi_linewidth": [0, 2, 6], "grid": [0, 1, 2, 6, 241, 261], "grid_axi": [0, 2, 6], "grid_color": [0, 2, 6], "grid_linestyl": [0, 2, 6], "grid_linewidth": [0, 2, 6], "grid_which": [0, 2, 6], "label": [0, 6], "legend": [0, 2, 6, 242, 262], "linestyl": [0, 2, 3, 6], "linewidth": [0, 2, 3, 6], "marker": [0, 2, 3, 6], "markers": [0, 2, 6], "opac": [0, 2, 6], "plot_color_bar": [0, 2, 3, 6], "savefig": [0, 2, 6, 72], "titl": [0, 2, 6], "weighted_color": [0, 2, 6], "weighted_width": [0, 2, 6], "figure_s": [0, 2, 6], "dpi": [0, 2, 3, 6], "2d": [1, 3, 353, 376, 405, 417], "surface_cmap": 1, "surface_color": 1, "surface_spinpol_color": 1, "surface_bands_color": 1, "surface_opac": 1, "surface_clim": 1, "extended_zone_direct": 1, "supercel": [1, 122, 311, 363, 403], "projection_accuraci": 1, "interpolation_factor": 1, "brillouin_zone_styl": 1, "brillouin_zone_line_width": 1, "brillouin_zone_color": 1, "brillouin_zone_opac": 1, "texture_cmap": 1, "texture_color": 1, "texture_s": 1, "texture_scal": 1, "texture_opac": 1, "add_ax": 1, "energy_lim": 1, "x_axes_label": 1, "y_axes_label": 1, "z_axes_label": 1, "axes_label_color": 1, "axes_line_width": 1, "add_scalar_bar": 1, "scalar_bar_titl": 1, "scalar_bar_label": 1, "scalar_bar_ital": 1, "scalar_bar_bold": 1, "scalar_bar_title_font_s": 1, "scalar_bar_label_font_s": 1, "scalar_bar_position_x": 1, "scalar_bar_position_i": 1, "scalar_bar_color": 1, "background_color": 1, "orbit_gif_n_point": 1, "orbit_gif_step": 1, "orbit_mp4_n_point": 1, "orbit_mp4_step": 1, "clip_brillouin_zon": 1, "clip_brillouin_zone_factor": 1, "grid_xtitl": 1, "grid_ytitl": 1, "grid_ztitl": 1, "grid_font_s": 1, "add_fermi_plan": 1, "fermi_plane_opac": 1, "fermi_plane_color": 1, "fermi_plane_s": 1, "show_fermi_plane_text": 1, "fermi_text_posit": 1, "plotter_offscreen": 1, "plotter_camera_po": 1, "isoslider_titl": 1, "isoslider_styl": 1, "isoslider_color": 1, "cross_section_slice_linewidth": 1, "cross_section_slice_show_area": 1, "do": [2, 155, 201, 368, 369, 372, 405], "font": 2, "font_siz": 2, "plot_bar": 2, "plot_tot": 2, "spin_label": 2, "verbos": 2, "stack_y_label": 2, "x_label": [2, 3], "y_label": [2, 3], "fermi": [3, 4, 207, 345, 349, 351, 376, 382, 383, 395, 405, 418], "surfac": [3, 4, 125, 142, 359, 383, 418], "add_axes_label": [3, 68], "add_legend": [3, 69], "no_arrow": 3, "arrow_color": 3, "arrow_dens": 3, "arrow_s": 3, "spin_project": 3, "3d": [4, 382, 405, 418], "configur": [4, 5, 356, 367, 378, 384], "api": [4, 138, 143, 233, 287, 313, 341], "file": [5, 400, 401, 402, 403], "unfold": [6, 63, 363, 424], "pyprocar": [7, 10, 19, 66, 75, 83, 90, 99, 125, 144, 146, 148, 150, 153, 166, 175, 177, 179, 185, 187, 193, 238, 258, 279, 289, 299, 309, 316, 356, 367, 378, 384, 406, 407, 409, 410], "core": [7, 10, 19, 66, 75, 83, 90, 99, 125, 138], "brillouinzon": [7, 133], "__init__": [8, 11, 20, 67, 76, 84, 91, 100, 126, 145, 147, 149, 151, 154, 167, 176, 178, 180, 186, 188, 194, 239, 259, 280, 290, 300, 310, 317], "wigner_seitz": 9, "densityofst": [10, 134], "coupled_to_uncoupled_basi": 12, "dos_sum": 13, "get_current_basi": 14, "is_non_collinear": [15, 44], "n_do": 16, "n_energi": 17, "n_spin": 18, "electronicbandstructur": [19, 135, 416], "bands_gradi": 21, "bands_gradient_mesh": 22, "bands_hessian": 23, "bands_hessian_mesh": 24, "bands_mesh": 25, "calculate_scalar_gradi": 26, "calculate_scalar_integr": 27, "create_nd_mesh": 28, "create_scaler_mesh": 29, "create_vector_mesh": 30, "ebs_ipr": 31, "ebs_ipr_atom": 32, "ebs_sum": 33, "fermi_spe": 34, "fermi_speed_mesh": 35, "fermi_veloc": 36, "fermi_velocity_mesh": 37, "fix_collinear_spin": 38, "harmonic_average_effective_mass": 39, "harmonic_average_effective_mass_mesh": 40, "ibz2fbz": 41, "index_mesh": 42, "interpolate_mesh_grid": 43, "kpoints_cartesian": [45, 189], "kpoints_cartesian_mesh": 46, "kpoints_mesh": 47, "kpoints_reduc": [48, 190], "mesh_to_arrai": 49, "n_kx": 50, "n_ky": 51, "n_kz": 52, "natom": [53, 117], "nband": 54, "nkpoint": 55, "norbit": 56, "nprincip": 57, "nspin": 58, "plot_kpoint": 59, "projected_mesh": 60, "projected_phase_mesh": 61, "ravel_arrai": 62, "update_weight": 64, "weights_mesh": 65, "fermisurfac": [66, 136], "find_energi": 70, "show": [73, 256, 277, 383], "spin_textur": [74, 390], "fermisurface3d": [75, 137], "extend_surfac": 77, "project_atomic_project": 78, "project_fermi_spe": 79, "project_fermi_veloc": 80, "project_harmonic_effective_mass": 81, "project_spin_texture_atomic_project": 82, "isosurfac": [83, 139], "dxyz": 85, "nx": 86, "ny": 87, "nz": 88, "surface_boundari": 89, "kpath": [90, 140, 331, 342, 421], "get_kpoints_transform": 92, "get_optimized_kpoints_transform": 93, "kdistanc": 94, "nsegment": 95, "tick_nam": 96, "tick_posit": 97, "write_to_fil": 98, "alpha": 102, "atomic_numb": 103, "b": 104, "beta": 105, "c": 106, "cell_convex_hul": 107, "densiti": [108, 349, 351, 365, 366, 370, 405, 415], "gamma": 109, "get_space_group_intern": 110, "get_space_group_numb": 111, "get_spglib_symmetry_dataset": 112, "get_wyckoff_posit": 113, "is_point_insid": 114, "lattice_corn": 115, "mass": [116, 395], "nspeci": 118, "plot_cell_convex_hul": 119, "reciprocal_lattic": [120, 183], "speci": [121, 163, 172, 226], "transform": 123, "volum": 124, "center": 127, "export": [128, 412, 417, 424], "faces_arrai": 129, "set_color_with_cmap": 130, "set_scalar": 131, "set_vector": 132, "refer": 143, "io": [144, 146, 148, 150, 153, 166, 175, 177, 179, 185, 187, 193, 233], "abinit": [144, 146, 148, 344], "abinitkpoint": 144, "abinitprocar": 146, "output": 148, "bxsf": 150, "bxsfparser": [150, 232], "parse_bxsf": 152, "lobster": [153, 348], "lobsterpars": [153, 234], "dos_parametr": 156, "dos_project": [157, 202], "dos_to_dict": [158, 203], "dos_tot": [159, 204], "final_structur": [160, 168, 208], "initial_structur": [161, 170, 217], "parse_structur": 162, "qe": 166, "qepars": [166, 235], "getkpointlabel": 169, "kpoints_cart": 171, "siesta": [175, 350], "siestapars": [175, 236], "vasp": [177, 179, 185, 187, 193, 351, 361, 369], "kpoint": [177, 220, 417], "outcar": 179, "efermi": 181, "get_symmetry_oper": 182, "rotat": [184, 417], "poscar": [185, 289, 314, 399, 400, 401, 402, 403], "procar": 187, "repair": [191, 332, 422], "symmetr": 192, "vaspxml": 193, "bands_project": 196, "conv": 197, "converg": 198, "convergence_electron": 199, "convergence_ion": 200, "energi": [205, 206, 380], "forc": 209, "get_gener": 210, "get_param": 211, "get_scstep": 212, "get_set": 213, "get_structur": 214, "get_varrai": 215, "incar": 216, "is_finish": 218, "iteration_data": 219, "kpoints_list": 221, "last_energi": 222, "parse_vasprun": 223, "potcar_info": 224, "read": [225, 402], "text_to_bool": 229, "vasp_paramet": 230, "abinitpars": 231, "vasppars": 237, "plotter": [238, 258, 279, 287], "dosplot": [238, 286, 328, 337], "draw_fermi": [240, 260], "plot_do": 243, "plot_parametr": 244, "plot_parametric_lin": 245, "plot_stack": 246, "plot_stack_orbit": 247, "plot_stack_speci": 248, "save": [249, 268, 385], "set_xlabel": [250, 271], "set_xlim": [251, 272], "set_xtick": [252, 273], "set_ylabel": [253, 274], "set_ylim": [254, 275], "set_ytick": [255, 276], "update_config": [257, 278], "ebsplot": [258, 285], "plot_atomic_level": 263, "plot_band": 264, "plot_parameter": 265, "plot_parameteric_overlai": 266, "plot_scatt": 267, "set_colorbar_titl": 269, "set_titl": 270, "procarplot": [279, 288], "atomicplot": 281, "parametricplot": 282, "plotband": 283, "scatterplot": 284, "pyposcar": [289, 299, 309, 313, 398, 405], "add": [291, 301], "load_from_data": 292, "pars": [293, 399, 401, 402], "remov": [294, 305], "sort": 295, "write": [296, 308, 312], "xyz": 297, "poscardiff": 298, "poscar_modifi": 299, "change_el": 302, "pos_multipli": 303, "pos_sum": 304, "scale_lattic": 306, "shift": 307, "poscar_supercel": 309, "poscarutil": 315, "script": [316, 341], "fermihandl": [316, 339], "create_isovalue_gif": 318, "plot_fermi_cross_sect": 319, "plot_fermi_cross_section_box_widget": 320, "plot_fermi_isoslid": 321, "plot_fermi_surfac": 322, "print_default_set": 323, "bandgap": [324, 333, 394, 395], "bandsdosplot": [325, 334, 373, 374], "bandsplot": [326, 335], "cat": [327, 336], "fermi2d": [329, 338, 377, 379], "generate2dkmesh": [330, 340], "reapir": 343, "perper": [344, 346, 348, 350], "dftb": 345, "prepar": [345, 349, 351, 354, 355, 356, 359, 367, 374, 378, 384], "calcul": [345, 349, 351, 413], "ssc": 345, "non": [345, 360, 361, 368, 369], "scc": 345, "ad": 345, "name": [345, 357], "k": [345, 349, 351, 396, 412, 419, 421], "point": [345, 349, 351, 412, 419], "elk": 346, "dft": 347, "prep": 347, "quantum": [349, 360, 368], "espresso": [349, 360, 368], "state": [349, 351, 359, 365, 366, 370, 405, 415], "format": [349, 351], "magnet": [349, 351], "plain": [353, 357, 360, 361, 362, 366, 370, 373, 377, 386, 387, 388, 389, 412, 415], "mode": [353, 354, 357, 360, 361, 362, 366, 368, 369, 370, 373, 377, 386, 387, 388, 389, 390, 415], "parametr": [353, 357, 360, 361, 362, 366, 368, 369, 370, 377, 388, 389, 415], "properti": [353, 395], "project": [353, 379, 380, 395, 411, 412], "spin": [353, 362, 370, 379, 380, 389, 390, 411, 412, 417, 419], "textur": [353, 379, 390, 417], "atom": [354, 402, 411, 412, 419], "level": 354, "set": [354, 355, 359], "up": [354, 355, 359], "environ": [354, 355, 359], "autoband": 355, "exampl": [355, 393, 394, 395, 396, 405], "parametric_linemod": 357, "scatter": [357, 362], "overlay_speci": [357, 366, 370, 415], "overlay_orbti": [357, 366, 370], "overlai": [357, 366, 370, 415], "orbit": [357, 411, 412, 419], "compar": [358, 414], "invers": 359, "particip": 359, "ratio": 359, "topolog": 359, "protect": 359, "bi_2se_3": 359, "nv": 359, "defect": [359, 400, 403], "diamond": 359, "colinear": [360, 361, 368, 369], "polar": [362, 370, 389], "primit": 363, "comput": [364, 371, 375, 381, 391, 397, 401, 404], "time": [364, 371, 375, 381, 391, 397, 404], "parametric_lin": [366, 370, 415], "stack_speci": [366, 370, 415], "stack_orbti": [366, 370], "stack": [366, 370, 415], "plain_band": 377, "select": [377, 379, 419], "indic": [377, 379, 410], "noncolinear": 379, "singl": 379, "rashba": 380, "split": 380, "0": [380, 383], "60": 380, "sx": 380, "arrow": 380, "sy": 380, "sz": 380, "90": 380, "how": 383, "get": [383, 407], "van": 383, "alphen": 383, "fequenc": 383, "from": [383, 412], "maxim": 383, "cross": [383, 385], "section": [383, 385], "area": 383, "along": 383, "1": [383, 411, 412, 415], "minim": 383, "extrem": 383, "fermi3d": [385, 386, 387, 388, 389, 390], "cross_sect": 385, "slice": 385, "isoslid": 386, "isovalue_gif": 387, "other": [392, 395, 405], "kmesh_gener": 393, "kmesh": 393, "find": [394, 395, 400], "gradient": 395, "veloc": 395, "effect": 395, "kpath_gener": 396, "path": [396, 412, 421], "visual": [399, 400, 401, 402, 403], "cluster": 399, "bi2se3": 399, "slab": 399, "util": [399, 400, 403], "function": [399, 400, 401, 403], "creat": [399, 400, 402, 403], "gif": [399, 400, 402, 403], "identifi": 399, "analyz": 401, "radial": 401, "distribut": 401, "rdf": 401, "kde": 401, "curv": 401, "result": 401, "substitut": 402, "modifi": 403, "scale": 403, "vacuum": 403, "space": 403, "lattic": 403, "introduc": 403, "author": 406, "citat": 406, "cite": [406, 407], "contributor": 406, "develop": 406, "licens": 406, "start": 407, "instal": [407, 408], "paper": 407, "support": 407, "pip": 408, "conda": 408, "clone": 408, "through": 408, "github": 408, "after": 408, "why": 409, "tabl": 410, "2": [411, 412, 415], "3": [411, 412, 415], "4": [412, 415], "matplotlib": [412, 417, 424], "pyplot": [412, 417, 424], "object": [412, 417, 424], "convert": 412, "reduc": 412, "cartesian": 412, "coordin": 412, "discontinu": 412, "concaten": 413, "multipl": 413, "5": 415, "6": 415, "stack_orbit": 415, "7": 415, "8": 415, "9": 415, "overlay_orbit": 415, "access": [416, 421, 423], "electron": 416, "translat": 417, "mesh": 417, "keyboard": 418, "shortcut": 418, "filter": 419, "data": 419, "To": 419, "user": 420, "guid": 420, "further": 420, "detail": 420, "inform": [421, 423]}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"band structure plotting Options": [[0, "band-structure-plotting-options"]], "spin_colors": [[0, "spin-colors"], [2, "spin-colors"], [6, "spin-colors"]], "color": [[0, "color"], [3, "color"], [6, "color"]], "colorbar_title": [[0, "colorbar-title"], [2, "colorbar-title"]], "colorbar_title_size": [[0, "colorbar-title-size"], [2, "colorbar-title-size"]], "colorbar_title_padding": [[0, "colorbar-title-padding"], [2, "colorbar-title-padding"]], "colorbar_tick_labelsize": [[0, "colorbar-tick-labelsize"], [2, "colorbar-tick-labelsize"]], "cmap": [[0, "cmap"], [2, "cmap"], [3, "cmap"], [6, "cmap"]], "clim": [[0, "clim"], [2, "clim"], [3, "clim"], [6, "clim"]], "fermi_color": [[0, "fermi-color"], [2, "fermi-color"], [6, "fermi-color"]], "fermi_linestyle": [[0, "fermi-linestyle"], [2, "fermi-linestyle"], [6, "fermi-linestyle"]], "fermi_linewidth": [[0, "fermi-linewidth"], [2, "fermi-linewidth"], [6, "fermi-linewidth"]], "grid": [[0, "grid"], [1, "grid"], [2, "grid"], [6, "grid"], [241, "grid"], [261, "grid"]], "grid_axis": [[0, "grid-axis"], [2, "grid-axis"], [6, "grid-axis"]], "grid_color": [[0, "grid-color"], [2, "grid-color"], [6, "grid-color"]], "grid_linestyle": [[0, "grid-linestyle"], [2, "grid-linestyle"], [6, "grid-linestyle"]], "grid_linewidth": [[0, "grid-linewidth"], [2, "grid-linewidth"], [6, "grid-linewidth"]], "grid_which": [[0, "grid-which"], [2, "grid-which"], [6, "grid-which"]], "label": [[0, "label"], [6, "label"]], "legend": [[0, "legend"], [2, "legend"], [6, "legend"], [242, "legend"], [262, "legend"]], "linestyle": [[0, "linestyle"], [2, "linestyle"], [3, "linestyle"], [6, "linestyle"]], "linewidth": [[0, "linewidth"], [2, "linewidth"], [3, "linewidth"], [6, "linewidth"]], "marker": [[0, "marker"], [2, "marker"], [3, "marker"], [6, "marker"]], "markersize": [[0, "markersize"], [2, "markersize"], [6, "markersize"]], "opacity": [[0, "opacity"], [2, "opacity"], [6, "opacity"]], "plot_color_bar": [[0, "plot-color-bar"], [2, "plot-color-bar"], [3, "plot-color-bar"], [6, "plot-color-bar"]], "savefig": [[0, "savefig"], [2, "savefig"], [6, "savefig"], [72, "savefig"]], "title": [[0, "title"], [2, "title"], [6, "title"]], "weighted_color": [[0, "weighted-color"], [2, "weighted-color"], [6, "weighted-color"]], "weighted_width": [[0, "weighted-width"], [2, "weighted-width"], [6, "weighted-width"]], "figure_size": [[0, "figure-size"], [2, "figure-size"], [6, "figure-size"]], "dpi": [[0, "dpi"], [2, "dpi"], [3, "dpi"], [6, "dpi"]], "band structure 2d plotting Options": [[1, "band-structure-2d-plotting-options"]], "surface_cmap": [[1, "surface-cmap"]], "surface_color": [[1, "surface-color"]], "surface_spinpol_colors": [[1, "surface-spinpol-colors"]], "surface_bands_colors": [[1, "surface-bands-colors"]], "surface_opacity": [[1, "surface-opacity"]], "surface_clim": [[1, "surface-clim"]], "extended_zone_directions": [[1, "extended-zone-directions"]], "supercell": [[1, "supercell"], [122, "supercell"], [311, "supercell"]], "projection_accuracy": [[1, "projection-accuracy"]], "interpolation_factor": [[1, "interpolation-factor"]], "brillouin_zone_style": [[1, "brillouin-zone-style"]], "brillouin_zone_line_width": [[1, "brillouin-zone-line-width"]], "brillouin_zone_color": [[1, "brillouin-zone-color"]], "brillouin_zone_opacity": [[1, "brillouin-zone-opacity"]], "texture_cmap": [[1, "texture-cmap"]], "texture_color": [[1, "texture-color"]], "texture_size": [[1, "texture-size"]], "texture_scale": [[1, "texture-scale"]], "texture_opacity": [[1, "texture-opacity"]], "add_axes": [[1, "add-axes"]], "energy_lim": [[1, "energy-lim"]], "x_axes_label": [[1, "x-axes-label"]], "y_axes_label": [[1, "y-axes-label"]], "z_axes_label": [[1, "z-axes-label"]], "axes_label_color": [[1, "axes-label-color"]], "axes_line_width": [[1, "axes-line-width"]], "add_scalar_bar": [[1, "add-scalar-bar"]], "scalar_bar_title": [[1, "scalar-bar-title"]], "scalar_bar_labels": [[1, "scalar-bar-labels"]], "scalar_bar_italic": [[1, "scalar-bar-italic"]], "scalar_bar_bold": [[1, "scalar-bar-bold"]], "scalar_bar_title_font_size": [[1, "scalar-bar-title-font-size"]], "scalar_bar_label_font_size": [[1, "scalar-bar-label-font-size"]], "scalar_bar_position_x": [[1, "scalar-bar-position-x"]], "scalar_bar_position_y": [[1, "scalar-bar-position-y"]], "scalar_bar_color": [[1, "scalar-bar-color"]], "background_color": [[1, "background-color"]], "orbit_gif_n_points": [[1, "orbit-gif-n-points"]], "orbit_gif_step": [[1, "orbit-gif-step"]], "orbit_mp4_n_points": [[1, "orbit-mp4-n-points"]], "orbit_mp4_step": [[1, "orbit-mp4-step"]], "clip_brillouin_zone": [[1, "clip-brillouin-zone"]], "clip_brillouin_zone_factor": [[1, "clip-brillouin-zone-factor"]], "grid_xtitle": [[1, "grid-xtitle"]], "grid_ytitle": [[1, "grid-ytitle"]], "grid_ztitle": [[1, "grid-ztitle"]], "grid_font_size": [[1, "grid-font-size"]], "add_fermi_plane": [[1, "add-fermi-plane"]], "fermi_plane_opacity": [[1, "fermi-plane-opacity"]], "fermi_plane_color": [[1, "fermi-plane-color"]], "fermi_plane_size": [[1, "fermi-plane-size"]], "show_fermi_plane_text": [[1, "show-fermi-plane-text"]], "fermi_text_position": [[1, "fermi-text-position"]], "plotter_offscreen": [[1, "plotter-offscreen"]], "plotter_camera_pos": [[1, "plotter-camera-pos"]], "isoslider_title": [[1, "isoslider-title"]], "isoslider_style": [[1, "isoslider-style"]], "isoslider_color": [[1, "isoslider-color"]], "cross_section_slice_linewidth": [[1, "cross-section-slice-linewidth"]], "cross_section_slice_show_area": [[1, "cross-section-slice-show-area"]], "dos plotting Options": [[2, "dos-plotting-options"]], "colors": [[2, "colors"]], "font": [[2, "font"]], "font_size": [[2, "font-size"]], "plot_bar": [[2, "plot-bar"]], "plot_total": [[2, "plot-total"]], "spin_labels": [[2, "spin-labels"]], "verbose": [[2, "verbose"]], "stack_y_label": [[2, "stack-y-label"]], "x_label": [[2, "x-label"], [3, "x-label"]], "y_label": [[2, "y-label"], [3, "y-label"]], "fermi surface 2d plotting Options": [[3, "fermi-surface-2d-plotting-options"]], "add_axes_labels": [[3, "add-axes-labels"], [68, "add-axes-labels"]], "add_legend": [[3, "add-legend"], [69, "add-legend"]], "no_arrow": [[3, "no-arrow"]], "arrow_color": [[3, "arrow-color"]], "arrow_density": [[3, "arrow-density"]], "arrow_size": [[3, "arrow-size"]], "spin_projection": [[3, "spin-projection"]], "Fermi Surface 3D Configuration API": [[4, "module-pyprocar.cfg.fermi_surface_3d"]], "Configuration Files": [[5, "configuration-files"]], "unfold plotting Options": [[6, "unfold-plotting-options"]], "pyprocar.core.BrillouinZone": [[7, "pyprocar-core-brillouinzone"]], "__init__": [[8, "init"], [11, "init"], [20, "init"], [67, "init"], [76, "init"], [84, "init"], [91, "init"], [100, "init"], [126, "init"], [145, "init"], [147, "init"], [149, "init"], [151, "init"], [154, "init"], [167, "init"], [176, "init"], [178, "init"], [180, "init"], [186, "init"], [188, "init"], [194, "init"], [239, "init"], [259, "init"], [280, "init"], [290, "init"], [300, "init"], [310, "init"], [317, "init"]], "wigner_seitz": [[9, "wigner-seitz"]], "pyprocar.core.DensityOfStates": [[10, "pyprocar-core-densityofstates"]], "coupled_to_uncoupled_basis": [[12, "coupled-to-uncoupled-basis"]], "dos_sum": [[13, "dos-sum"]], "get_current_basis": [[14, "get-current-basis"]], "is_non_collinear": [[15, "is-non-collinear"], [44, "is-non-collinear"]], "n_dos": [[16, "n-dos"]], "n_energies": [[17, "n-energies"]], "n_spins": [[18, "n-spins"]], "pyprocar.core.ElectronicBandStructure": [[19, "pyprocar-core-electronicbandstructure"]], "bands_gradient": [[21, "bands-gradient"]], "bands_gradient_mesh": [[22, "bands-gradient-mesh"]], "bands_hessian": [[23, "bands-hessian"]], "bands_hessian_mesh": [[24, "bands-hessian-mesh"]], "bands_mesh": [[25, "bands-mesh"]], "calculate_scalar_gradient": [[26, "calculate-scalar-gradient"]], "calculate_scalar_integral": [[27, "calculate-scalar-integral"]], "create_nd_mesh": [[28, "create-nd-mesh"]], "create_scaler_mesh": [[29, "create-scaler-mesh"]], "create_vector_mesh": [[30, "create-vector-mesh"]], "ebs_ipr": [[31, "ebs-ipr"]], "ebs_ipr_atom": [[32, "ebs-ipr-atom"]], "ebs_sum": [[33, "ebs-sum"]], "fermi_speed": [[34, "fermi-speed"]], "fermi_speed_mesh": [[35, "fermi-speed-mesh"]], "fermi_velocity": [[36, "fermi-velocity"]], "fermi_velocity_mesh": [[37, "fermi-velocity-mesh"]], "fix_collinear_spin": [[38, "fix-collinear-spin"]], "harmonic_average_effective_mass": [[39, "harmonic-average-effective-mass"]], "harmonic_average_effective_mass_mesh": [[40, "harmonic-average-effective-mass-mesh"]], "ibz2fbz": [[41, "ibz2fbz"]], "index_mesh": [[42, "index-mesh"]], "interpolate_mesh_grid": [[43, "interpolate-mesh-grid"]], "kpoints_cartesian": [[45, "kpoints-cartesian"], [189, "kpoints-cartesian"]], "kpoints_cartesian_mesh": [[46, "kpoints-cartesian-mesh"]], "kpoints_mesh": [[47, "kpoints-mesh"]], "kpoints_reduced": [[48, "kpoints-reduced"], [190, "kpoints-reduced"]], "mesh_to_array": [[49, "mesh-to-array"]], "n_kx": [[50, "n-kx"]], "n_ky": [[51, "n-ky"]], "n_kz": [[52, "n-kz"]], "natoms": [[53, "natoms"], [117, "natoms"]], "nbands": [[54, "nbands"]], "nkpoints": [[55, "nkpoints"]], "norbitals": [[56, "norbitals"]], "nprincipals": [[57, "nprincipals"]], "nspins": [[58, "nspins"]], "plot_kpoints": [[59, "plot-kpoints"]], "projected_mesh": [[60, "projected-mesh"]], "projected_phase_mesh": [[61, "projected-phase-mesh"]], "ravel_array": [[62, "ravel-array"]], "unfold": [[63, "unfold"]], "update_weights": [[64, "update-weights"]], "weights_mesh": [[65, "weights-mesh"]], "pyprocar.core.FermiSurface": [[66, "pyprocar-core-fermisurface"]], "find_energy": [[70, "find-energy"]], "plot": [[71, "plot"]], "show": [[73, "show"], [256, "show"], [277, "show"]], "spin_texture": [[74, "spin-texture"]], "pyprocar.core.FermiSurface3D": [[75, "pyprocar-core-fermisurface3d"]], "extend_surface": [[77, "extend-surface"]], "project_atomic_projections": [[78, "project-atomic-projections"]], "project_fermi_speed": [[79, "project-fermi-speed"]], "project_fermi_velocity": [[80, "project-fermi-velocity"]], "project_harmonic_effective_mass": [[81, "project-harmonic-effective-mass"]], "project_spin_texture_atomic_projections": [[82, "project-spin-texture-atomic-projections"]], "pyprocar.core.Isosurface": [[83, "pyprocar-core-isosurface"]], "dxyz": [[85, "dxyz"]], "nX": [[86, "nx"]], "nY": [[87, "ny"]], "nZ": [[88, "nz"]], "surface_boundaries": [[89, "surface-boundaries"]], "pyprocar.core.KPath": [[90, "pyprocar-core-kpath"]], "get_kpoints_transformed": [[92, "get-kpoints-transformed"]], "get_optimized_kpoints_transformed": [[93, "get-optimized-kpoints-transformed"]], "kdistances": [[94, "kdistances"]], "nsegments": [[95, "nsegments"]], "tick_names": [[96, "tick-names"]], "tick_positions": [[97, "tick-positions"]], "write_to_file": [[98, "write-to-file"]], "pyprocar.core.Structure": [[99, "pyprocar-core-structure"]], "a": [[101, "a"]], "alpha": [[102, "alpha"]], "atomic_numbers": [[103, "atomic-numbers"]], "b": [[104, "b"]], "beta": [[105, "beta"]], "c": [[106, "c"]], "cell_convex_hull": [[107, "cell-convex-hull"]], "density": [[108, "density"]], "gamma": [[109, "gamma"]], "get_space_group_international": [[110, "get-space-group-international"]], "get_space_group_number": [[111, "get-space-group-number"]], "get_spglib_symmetry_dataset": [[112, "get-spglib-symmetry-dataset"]], "get_wyckoff_positions": [[113, "get-wyckoff-positions"]], "is_point_inside": [[114, "is-point-inside"]], "lattice_corners": [[115, "lattice-corners"]], "masses": [[116, "masses"]], "nspecies": [[118, "nspecies"]], "plot_cell_convex_hull": [[119, "plot-cell-convex-hull"]], "reciprocal_lattice": [[120, "reciprocal-lattice"], [183, "reciprocal-lattice"]], "species": [[121, "species"], [163, "species"], [172, "species"], [226, "species"]], "transform": [[123, "transform"]], "volume": [[124, "volume"]], "pyprocar.core.Surface": [[125, "pyprocar-core-surface"]], "centers": [[127, "centers"]], "export": [[128, "export"]], "faces_array": [[129, "faces-array"]], "set_color_with_cmap": [[130, "set-color-with-cmap"]], "set_scalars": [[131, "set-scalars"]], "set_vectors": [[132, "set-vectors"]], "BrillouinZone": [[133, "brillouinzone"]], "DensityOfStates": [[134, "densityofstates"]], "ElectronicBandStructure": [[135, "electronicbandstructure"], [416, "electronicbandstructure"]], "FermiSurface": [[136, "fermisurface"]], "FermiSurface3D": [[137, "fermisurface3d"]], "Core API": [[138, "core-api"]], "Isosurface": [[139, "isosurface"]], "KPath": [[140, "kpath"]], "Structure": [[141, "structure"], [423, "structure"]], "Surface": [[142, "surface"]], "API Reference": [[143, "api-reference"]], "pyprocar.io.abinit.AbinitKpoints": [[144, "pyprocar-io-abinit-abinitkpoints"]], "pyprocar.io.abinit.AbinitProcar": [[146, "pyprocar-io-abinit-abinitprocar"]], "pyprocar.io.abinit.Output": [[148, "pyprocar-io-abinit-output"]], "pyprocar.io.bxsf.BxsfParser": [[150, "pyprocar-io-bxsf-bxsfparser"]], "parse_bxsf": [[152, "parse-bxsf"]], "pyprocar.io.lobster.LobsterParser": [[153, "pyprocar-io-lobster-lobsterparser"]], "dos": [[155, "dos"], [201, "dos"]], "dos_parametric": [[156, "dos-parametric"]], "dos_projected": [[157, "dos-projected"], [202, "dos-projected"]], "dos_to_dict": [[158, "dos-to-dict"], [203, "dos-to-dict"]], "dos_total": [[159, "dos-total"], [204, "dos-total"]], "final_structure": [[160, "final-structure"], [168, "final-structure"], [208, "final-structure"]], "initial_structure": [[161, "initial-structure"], [170, "initial-structure"], [217, "initial-structure"]], "parse_structure": [[162, "parse-structure"]], "structure": [[164, "structure"], [173, "structure"], [227, "structure"]], "structures": [[165, "structures"], [174, "structures"], [228, "structures"]], "pyprocar.io.qe.QEParser": [[166, "pyprocar-io-qe-qeparser"]], "getKpointLabels": [[169, "getkpointlabels"]], "kpoints_cart": [[171, "kpoints-cart"]], "pyprocar.io.siesta.SiestaParser": [[175, "pyprocar-io-siesta-siestaparser"]], "pyprocar.io.vasp.Kpoints": [[177, "pyprocar-io-vasp-kpoints"]], "pyprocar.io.vasp.Outcar": [[179, "pyprocar-io-vasp-outcar"]], "efermi": [[181, "efermi"]], "get_symmetry_operations": [[182, "get-symmetry-operations"]], "rotations": [[184, "rotations"]], "pyprocar.io.vasp.Poscar": [[185, "pyprocar-io-vasp-poscar"]], "pyprocar.io.vasp.Procar": [[187, "pyprocar-io-vasp-procar"]], "repair": [[191, "repair"], [332, "repair"]], "symmetrize": [[192, "symmetrize"]], "pyprocar.io.vasp.VaspXML": [[193, "pyprocar-io-vasp-vaspxml"]], "bands": [[195, "bands"]], "bands_projected": [[196, "bands-projected"]], "conv": [[197, "conv"]], "convergence": [[198, "convergence"]], "convergence_electronic": [[199, "convergence-electronic"]], "convergence_ionic": [[200, "convergence-ionic"]], "energies": [[205, "energies"]], "energy": [[206, "energy"]], "fermi": [[207, "fermi"]], "forces": [[209, "forces"]], "get_general": [[210, "get-general"]], "get_params": [[211, "get-params"]], "get_scstep": [[212, "get-scstep"]], "get_set": [[213, "get-set"]], "get_structure": [[214, "get-structure"]], "get_varray": [[215, "get-varray"]], "incar": [[216, "incar"]], "is_finished": [[218, "is-finished"]], "iteration_data": [[219, "iteration-data"]], "kpoints": [[220, "kpoints"]], "kpoints_list": [[221, "kpoints-list"]], "last_energy": [[222, "last-energy"]], "parse_vasprun": [[223, "parse-vasprun"]], "potcar_info": [[224, "potcar-info"]], "read": [[225, "read"]], "text_to_bool": [[229, "text-to-bool"]], "vasp_parameters": [[230, "vasp-parameters"]], "AbinitParser": [[231, "abinitparser"]], "BxsfParser": [[232, "bxsfparser"]], "IO API": [[233, "io-api"]], "LobsterParser": [[234, "lobsterparser"]], "QEParser": [[235, "qeparser"]], "SiestaParser": [[236, "siestaparser"]], "VaspParser": [[237, "vaspparser"]], "pyprocar.plotter.DOSPlot": [[238, "pyprocar-plotter-dosplot"]], "draw_fermi": [[240, "draw-fermi"], [260, "draw-fermi"]], "plot_dos": [[243, "plot-dos"]], "plot_parametric": [[244, "plot-parametric"]], "plot_parametric_line": [[245, "plot-parametric-line"]], "plot_stack": [[246, "plot-stack"]], "plot_stack_orbitals": [[247, "plot-stack-orbitals"]], "plot_stack_species": [[248, "plot-stack-species"]], "save": [[249, "save"], [268, "save"]], "set_xlabel": [[250, "set-xlabel"], [271, "set-xlabel"]], "set_xlim": [[251, "set-xlim"], [272, "set-xlim"]], "set_xticks": [[252, "set-xticks"], [273, "set-xticks"]], "set_ylabel": [[253, "set-ylabel"], [274, "set-ylabel"]], "set_ylim": [[254, "set-ylim"], [275, "set-ylim"]], "set_yticks": [[255, "set-yticks"], [276, "set-yticks"]], "update_config": [[257, "update-config"], [278, "update-config"]], "pyprocar.plotter.EBSPlot": [[258, "pyprocar-plotter-ebsplot"]], "plot_atomic_levels": [[263, "plot-atomic-levels"]], "plot_bands": [[264, "plot-bands"]], "plot_parameteric": [[265, "plot-parameteric"]], "plot_parameteric_overlay": [[266, "plot-parameteric-overlay"]], "plot_scatter": [[267, "plot-scatter"]], "set_colorbar_title": [[269, "set-colorbar-title"]], "set_title": [[270, "set-title"]], "pyprocar.plotter.ProcarPlot": [[279, "pyprocar-plotter-procarplot"]], "atomicPlot": [[281, "atomicplot"]], "parametricPlot": [[282, "parametricplot"]], "plotBands": [[283, "plotbands"]], "scatterPlot": [[284, "scatterplot"]], "EBSPlot": [[285, "ebsplot"]], "DosPlot": [[286, "dosplot"]], "Plotter API": [[287, "plotter-api"]], "ProcarPlot": [[288, "procarplot"]], "pyprocar.pyposcar.Poscar": [[289, "pyprocar-pyposcar-poscar"]], "add": [[291, "add"], [301, "add"]], "load_from_data": [[292, "load-from-data"]], "parse": [[293, "parse"]], "remove": [[294, "remove"], [305, "remove"]], "sort": [[295, "sort"]], "write": [[296, "write"], [308, "write"], [312, "write"]], "xyz": [[297, "xyz"]], "poscarDiff": [[298, "poscardiff"]], "pyprocar.pyposcar.poscar_modify": [[299, "pyprocar-pyposcar-poscar-modify"]], "change_elements": [[302, "change-elements"]], "pos_multiply": [[303, "pos-multiply"]], "pos_sum": [[304, "pos-sum"]], "scale_lattice": [[306, "scale-lattice"]], "shift": [[307, "shift"]], "pyprocar.pyposcar.poscar_supercell": [[309, "pyprocar-pyposcar-poscar-supercell"]], "PyPoscar API": [[313, "pyposcar-api"]], "Poscar": [[314, "poscar"]], "poscarUtils": [[315, "poscarutils"]], "pyprocar.scripts.FermiHandler": [[316, "pyprocar-scripts-fermihandler"]], "create_isovalue_gif": [[318, "create-isovalue-gif"]], "plot_fermi_cross_section": [[319, "plot-fermi-cross-section"]], "plot_fermi_cross_section_box_widget": [[320, "plot-fermi-cross-section-box-widget"]], "plot_fermi_isoslider": [[321, "plot-fermi-isoslider"]], "plot_fermi_surface": [[322, "plot-fermi-surface"]], "print_default_settings": [[323, "print-default-settings"]], "bandgap": [[324, "bandgap"], [333, "bandgap"]], "bandsdosplot": [[325, "bandsdosplot"], [334, "bandsdosplot"]], "bandsplot": [[326, "bandsplot"], [335, "bandsplot"]], "cat": [[327, "cat"], [336, "cat"]], "dosplot": [[328, "dosplot"], [337, "dosplot"]], "fermi2D": [[329, "fermi2d"], [338, "fermi2d"]], "generate2dkmesh": [[330, "generate2dkmesh"], [340, "generate2dkmesh"]], "kpath": [[331, "kpath"], [342, "kpath"]], "FermiHandler": [[339, "fermihandler"]], "Scripts API": [[341, "scripts-api"]], "reapir": [[343, "reapir"]], "Abinit Perperation": [[344, "abinit-perperation"]], "DFTB+ Preparation": [[345, "dftb-preparation"]], "Preparing Calculations": [[345, "preparing-calculations"], [349, "preparing-calculations"], [351, "preparing-calculations"]], "Band Structure (SSC)": [[345, "band-structure-ssc"]], "Band Structure (non-SSC)": [[345, "band-structure-non-ssc"]], "Fermi (SCC)": [[345, "fermi-scc"]], "Adding names to k-points": [[345, "adding-names-to-k-points"]], "Elk Perperation": [[346, "elk-perperation"]], "DFT Prep": [[347, "dft-prep"]], "Lobster Perperation": [[348, "lobster-perperation"]], "Quantum Espresso Preparation": [[349, "quantum-espresso-preparation"]], "Band Structure": [[349, "band-structure"], [351, "band-structure"], [352, "band-structure"], [405, "band-structure"]], "Density of States": [[349, "density-of-states"], [351, "density-of-states"], [365, "density-of-states"], [405, "density-of-states"], [415, "density-of-states"]], "Band Structure and Density of States": [[349, "band-structure-and-density-of-states"], [351, "band-structure-and-density-of-states"]], "Fermi": [[349, "fermi"], [351, "fermi"]], "K-Points Format": [[349, "k-points-format"], [351, "k-points-format"]], "Magnetic Calculations": [[349, "magnetic-calculations"], [351, "magnetic-calculations"]], "Siesta Perperation": [[350, "siesta-perperation"]], "VASP Preparation": [[351, "vasp-preparation"]], "Plotting 2D band structure": [[353, "plotting-2d-band-structure"]], "Plain mode": [[353, "plain-mode"], [357, "plain-mode"], [360, "plain-mode"], [361, "plain-mode"], [362, "plain-mode"], [366, "plain-mode"], [370, "plain-mode"], [373, "plain-mode"], [377, "plain-mode"], [386, "plain-mode"], [387, "plain-mode"], [388, "plain-mode"], [389, "plain-mode"]], "Parametric mode": [[353, "parametric-mode"], [357, "parametric-mode"], [360, "parametric-mode"], [361, "parametric-mode"], [362, "parametric-mode"], [366, "parametric-mode"], [368, "parametric-mode"], [369, "parametric-mode"], [370, "parametric-mode"], [388, "parametric-mode"], [389, "parametric-mode"]], "Property Projection mode": [[353, "property-projection-mode"]], "Spin Texture mode": [[353, "spin-texture-mode"], [390, "spin-texture-mode"]], "Plotting Atomic Levels": [[354, "plotting-atomic-levels"]], "Preparation": [[354, "preparation"], [355, "preparation"], [356, "preparation"], [359, "preparation"], [367, "preparation"], [374, "preparation"], [378, "preparation"], [384, "preparation"]], "Setting up the environment": [[354, "setting-up-the-environment"], [355, "setting-up-the-environment"], [359, "setting-up-the-environment"]], "Plotting in Atomic Mode": [[354, "plotting-in-atomic-mode"]], "Autobands plotting": [[355, "autobands-plotting"]], "Autobands Example": [[355, "autobands-example"]], "Plotting with Configurations in pyprocar": [[356, "plotting-with-configurations-in-pyprocar"], [367, "plotting-with-configurations-in-pyprocar"], [378, "plotting-with-configurations-in-pyprocar"], [384, "plotting-with-configurations-in-pyprocar"]], "Plotting band structure": [[357, "plotting-band-structure"]], "parametric_linemode": [[357, "parametric-linemode"]], "Scatter mode": [[357, "scatter-mode"], [362, "scatter-mode"]], "overlay_species mode": [[357, "overlay-species-mode"], [366, "overlay-species-mode"], [370, "overlay-species-mode"]], "overlay_orbtials mode": [[357, "overlay-orbtials-mode"], [366, "overlay-orbtials-mode"], [370, "overlay-orbtials-mode"]], "overlay mode": [[357, "overlay-mode"], [366, "overlay-mode"], [370, "overlay-mode"]], "overlay mode by orbital names": [[357, "overlay-mode-by-orbital-names"]], "Comparing band structures": [[358, "comparing-band-structures"]], "Plotting Inverse participation ratio": [[359, "plotting-inverse-participation-ratio"]], "Topologically-protected surface states in Bi_2Se_3": [[359, "topologically-protected-surface-states-in-bi-2se-3"]], "NV^- defect in diamond": [[359, "nv-defect-in-diamond"]], "Plotting non colinear band structures in Quantum Espresso": [[360, "plotting-non-colinear-band-structures-in-quantum-espresso"]], "Plotting non colinear band structures in VASP": [[361, "plotting-non-colinear-band-structures-in-vasp"]], "Plotting spin polarized band structures": [[362, "plotting-spin-polarized-band-structures"]], "Unfolding Band Structure": [[363, "unfolding-band-structure"]], "Plotting primitive bands": [[363, "plotting-primitive-bands"]], "Unfolding of the supercell bands": [[363, "unfolding-of-the-supercell-bands"]], "Computation times": [[364, "computation-times"], [371, "computation-times"], [375, "computation-times"], [381, "computation-times"], [391, "computation-times"], [397, "computation-times"], [404, "computation-times"]], "Plotting density of states": [[366, "plotting-density-of-states"]], "parametric_line mode": [[366, "parametric-line-mode"], [370, "parametric-line-mode"]], "stack_species mode": [[366, "stack-species-mode"], [370, "stack-species-mode"]], "stack_orbtials mode": [[366, "stack-orbtials-mode"], [370, "stack-orbtials-mode"]], "stack mode": [[366, "stack-mode"], [370, "stack-mode"]], "Plotting non colinear dos in Quantum Espresso": [[368, "plotting-non-colinear-dos-in-quantum-espresso"]], "Plotting non colinear dos in VASP": [[369, "plotting-non-colinear-dos-in-vasp"]], "Plotting spin-polarized density of states": [[370, "plotting-spin-polarized-density-of-states"]], "Bands and Dos plot": [[372, "bands-and-dos-plot"], [405, "bands-and-dos-plot"]], "Plotting bandsdosplot": [[373, "plotting-bandsdosplot"], [374, "plotting-bandsdosplot"]], "Fermi 2D": [[376, "fermi-2d"], [405, "fermi-2d"]], "Plotting fermi2d": [[377, "plotting-fermi2d"]], "plain_bands mode": [[377, "plain-bands-mode"]], "parametric mode": [[377, "parametric-mode"]], "Selecting band indices": [[377, "selecting-band-indices"], [379, "selecting-band-indices"]], "Plotting fermi2d noncolinear": [[379, "plotting-fermi2d-noncolinear"]], "Spin Texture Projection": [[379, "spin-texture-projection"]], "Spin Texture single color": [[379, "spin-texture-single-color"]], "Plotting rashba spin splitting": [[380, "plotting-rashba-spin-splitting"]], "energy = 0.60 sx projection no arrows": [[380, "energy-0-60-sx-projection-no-arrows"]], "energy = 0.60 sy projection no arrows": [[380, "energy-0-60-sy-projection-no-arrows"]], "energy = 0.60 sz projection no arrows": [[380, "energy-0-60-sz-projection-no-arrows"]], "energy = -0.90 sx projection no arrows": [[380, "energy-0-90-sx-projection-no-arrows"]], "energy = -0.90 sy projection no arrows": [[380, "energy-0-90-sy-projection-no-arrows"]], "energy = -0.90 sz projection no arrows": [[380, "energy-0-90-sz-projection-no-arrows"]], "energy = 0.60 sx projection with arrows": [[380, "energy-0-60-sx-projection-with-arrows"]], "energy = -0.90 sx projection with arrows": [[380, "energy-0-90-sx-projection-with-arrows"]], "Fermi 3D": [[382, "fermi-3d"], [405, "fermi-3d"]], "Showing how to get van alphen fequencies from the fermi surface": [[383, "showing-how-to-get-van-alphen-fequencies-from-the-fermi-surface"]], "Maximal cross sectional area along the (0,0,1)": [[383, "maximal-cross-sectional-area-along-the-0-0-1"]], "Minimal cross sectional area along the (0,0,1)": [[383, "minimal-cross-sectional-area-along-the-0-0-1"]], "Extremal cross sectional area along the (0,1,1)": [[383, "extremal-cross-sectional-area-along-the-0-1-1"]], "Plotting fermi3d cross_section": [[385, "plotting-fermi3d-cross-section"]], "Cross section": [[385, "cross-section"]], "Cross section. Save slice": [[385, "cross-section-save-slice"]], "Plotting fermi3d isoslider": [[386, "plotting-fermi3d-isoslider"]], "Plotting fermi3d isovalue_gif": [[387, "plotting-fermi3d-isovalue-gif"]], "Plotting fermi3d plain": [[388, "plotting-fermi3d-plain"]], "Plotting fermi3d spin-polarized": [[389, "plotting-fermi3d-spin-polarized"]], "Plotting fermi3d spin_texture": [[390, "plotting-fermi3d-spin-texture"]], "Other": [[392, "other"], [405, "other"]], "Example of kmesh_generator": [[393, "example-of-kmesh-generator"]], "Plotting Kmesh": [[393, "plotting-kmesh"]], "Example of finding the bandgap": [[394, "example-of-finding-the-bandgap"], [395, "example-of-finding-the-bandgap"]], "Other properties": [[395, "other-properties"]], "Bands": [[395, "bands"]], "Projections": [[395, "projections"]], "Gradients": [[395, "gradients"]], "Band/Fermi velocities": [[395, "band-fermi-velocities"]], "Effective mass": [[395, "effective-mass"]], "Example of kpath_generator": [[396, "example-of-kpath-generator"]], "Plotting K Path": [[396, "plotting-k-path"]], "PyPoscar": [[398, "pyposcar"], [405, "pyposcar"]], "Visualizing Clusters in Bi2Se3 Slab": [[399, "visualizing-clusters-in-bi2se3-slab"]], "Utility function for creating GIF visualizations": [[399, "utility-function-for-creating-gif-visualizations"], [400, "utility-function-for-creating-gif-visualizations"], [403, "utility-function-for-creating-gif-visualizations"]], "Parsing the POSCAR and Identifying Clusters": [[399, "parsing-the-poscar-and-identifying-clusters"]], "Visualizing the Clusters": [[399, "visualizing-the-clusters"]], "Finding defects in a POSCAR file": [[400, "finding-defects-in-a-poscar-file"]], "Finding defects": [[400, "finding-defects"]], "Analyzing Radial Distribution Functions (RDF)": [[401, "analyzing-radial-distribution-functions-rdf"]], "Parsing the POSCAR file": [[401, "parsing-the-poscar-file"]], "Computing RDF and KDE Curves": [[401, "computing-rdf-and-kde-curves"]], "Visualizing the Results": [[401, "visualizing-the-results"]], "Substituting Atoms in a POSCAR File": [[402, "substituting-atoms-in-a-poscar-file"]], "Reading and Parsing the POSCAR File": [[402, "reading-and-parsing-the-poscar-file"]], "Atom Substitution": [[402, "atom-substitution"]], "Visualization of Atomic Structures": [[402, "visualization-of-atomic-structures"]], "Creating GIFs for Visualization": [[402, "creating-gifs-for-visualization"]], "Modifying a POSCAR File: Scaling, Supercells, and Defects": [[403, "modifying-a-poscar-file-scaling-supercells-and-defects"]], "Scaling Vacuum Space in the Lattice": [[403, "scaling-vacuum-space-in-the-lattice"]], "Creating a Supercell": [[403, "creating-a-supercell"]], "Introducing Defects": [[403, "introducing-defects"]], "Examples": [[405, "examples"]], "Authors & Citation": [[406, "authors-citation"]], "Citing PyProcar": [[406, "citing-pyprocar"], [407, "citing-pyprocar"]], "Authors": [[406, "authors"]], "Contributors": [[406, "contributors"]], "Developers": [[406, "developers"]], "License": [[406, "license"]], "Getting started": [[407, "getting-started"]], "Installation": [[407, "installation"], [408, "installation"]], "Paper": [[407, "paper"]], "Support": [[407, "support"]], "Installing with pip": [[408, "installing-with-pip"]], "Installing with conda": [[408, "installing-with-conda"]], "Cloning through GitHub": [[408, "cloning-through-github"]], "After Installation": [[408, "after-installation"]], "Why PyProcar?": [[409, "why-pyprocar"]], "PyProcar": [[410, "pyprocar"]], "Indices and tables": [[410, "indices-and-tables"]], "Atomic Projections": [[411, "atomic-projections"]], "1. Spin projection": [[411, "spin-projection"]], "2. Atom projection": [[411, "atom-projection"]], "3. Orbital projection": [[411, "orbital-projection"]], "Band structure": [[412, "band-structure"]], "1. Plain band structure": [[412, "plain-band-structure"]], "2. Spin projection": [[412, "spin-projection"]], "3. Atom projection": [[412, "atom-projection"]], "4. Orbital projection": [[412, "orbital-projection"]], "Export plot as a matplotlib.pyplot object": [[412, "export-plot-as-a-matplotlib-pyplot-object"], [417, "export-plot-as-a-matplotlib-pyplot-object"], [424, "export-plot-as-a-matplotlib-pyplot-object"]], "Converting k-points from reduced to cartesian coordinates": [[412, "converting-k-points-from-reduced-to-cartesian-coordinates"]], "Plotting band structures with a discontinuous k-path": [[412, "plotting-band-structures-with-a-discontinuous-k-path"]], "Concatenating multiple calculations": [[413, "concatenating-multiple-calculations"]], "Compare bands": [[414, "compare-bands"]], "1. mode='plain'": [[415, "mode-plain"]], "2. mode='parametric'": [[415, "mode-parametric"]], "3. mode='parametric_line'": [[415, "mode-parametric-line"]], "4. mode='stack'": [[415, "mode-stack"]], "5. mode='stack_species'": [[415, "mode-stack-species"]], "6. mode='stack_orbitals'": [[415, "mode-stack-orbitals"]], "7. mode='overlay'": [[415, "mode-overlay"]], "8. mode='overlay_species'": [[415, "mode-overlay-species"]], "9. mode='overlay_orbitals'": [[415, "mode-overlay-orbitals"]], "Accessing Electronic Band Structure": [[416, "accessing-electronic-band-structure"]], "2D spin-texture": [[417, "d-spin-texture"]], "Translate and Rotate the 2D KPOINT mesh": [[417, "translate-and-rotate-the-2d-kpoint-mesh"]], "3D Fermi surface": [[418, "d-fermi-surface"]], "3D surfaces": [[418, "d-surfaces"]], "Keyboard shortcuts": [[418, "keyboard-shortcuts"]], "Filtering data": [[419, "filtering-data"]], "To filter selected orbitals": [[419, "to-filter-selected-orbitals"]], "To filter selected k-points": [[419, "to-filter-selected-k-points"]], "To filter selected spins": [[419, "to-filter-selected-spins"]], "To filter selected atoms": [[419, "to-filter-selected-atoms"]], "User Guide": [[420, "user-guide"]], "Further Details": [[420, "further-details"]], "K Path": [[421, "k-path"]], "Accessing Kpath Information": [[421, "accessing-kpath-information"]], "Repair": [[422, "repair"]], "Accessing Structure Information": [[423, "accessing-structure-information"]], "Band unfolding": [[424, "band-unfolding"]]}, "indexentries": {"fermi_speed (pyprocar.cfg.fermi_surface_3d.fermisurfaceproperty attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurfaceProperty.FERMI_SPEED"]], "fermi_velocity (pyprocar.cfg.fermi_surface_3d.fermisurfaceproperty attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurfaceProperty.FERMI_VELOCITY"]], "fermisurface3dconfig (class in pyprocar.cfg.fermi_surface_3d)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig"]], "fermisurfacemode (class in pyprocar.cfg.fermi_surface_3d)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurfaceMode"]], "fermisurfaceproperty (class in pyprocar.cfg.fermi_surface_3d)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurfaceProperty"]], "harmonic_average_effective_mass (pyprocar.cfg.fermi_surface_3d.fermisurfaceproperty attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurfaceProperty.HARMONIC_AVERAGE_EFFECTIVE_MASS"]], "parametric (pyprocar.cfg.fermi_surface_3d.fermisurfacemode attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurfaceMode.PARAMETRIC"]], "plain (pyprocar.cfg.fermi_surface_3d.fermisurfacemode attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurfaceMode.PLAIN"]], "spin_texture (pyprocar.cfg.fermi_surface_3d.fermisurfacemode attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurfaceMode.SPIN_TEXTURE"]], "add_axes (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.add_axes"]], "add_scalar_bar (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.add_scalar_bar"]], "arrow_size (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.arrow_size"]], "as_dict() (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig method)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.as_dict"]], "axes_label_color (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.axes_label_color"]], "axes_line_width (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.axes_line_width"]], "background_color (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.background_color"]], "brillouin_zone_color (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.brillouin_zone_color"]], "brillouin_zone_line_width (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.brillouin_zone_line_width"]], "brillouin_zone_opacity (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.brillouin_zone_opacity"]], "brillouin_zone_style (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.brillouin_zone_style"]], "cross_section_slice_linewidth (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.cross_section_slice_linewidth"]], "cross_section_slice_show_area (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.cross_section_slice_show_area"]], "extended_zone_directions (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.extended_zone_directions"]], "fermi_tolerance (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.fermi_tolerance"]], "interpolation_factor (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.interpolation_factor"]], "isoslider_color (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.isoslider_color"]], "isoslider_style (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.isoslider_style"]], "isoslider_title (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.isoslider_title"]], "max_distance (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.max_distance"]], "mode (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.mode"]], "module": [[4, "module-pyprocar.cfg.fermi_surface_3d"], [412, "module-pyprocar.scripts.scriptBandsplot"], [413, "module-pyprocar.scripts.scriptCat"], [415, "module-pyprocar.scriptDosplot"], [417, "module-pyprocar.scripts.scriptFermi2D"], [418, "module-pyprocar.scripts.scriptFermiHandler"], [419, "module-pyprocar.scripts.scriptFilter"], [422, "module-pyprocar.scripts.scriptRepair"], [424, "module-pyprocar.scripts.scriptUnfold"]], "orbit_gif_n_points (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.orbit_gif_n_points"]], "orbit_gif_step (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.orbit_gif_step"]], "orbit_mp4_n_points (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.orbit_mp4_n_points"]], "orbit_mp4_step (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.orbit_mp4_step"]], "plotter_camera_pos (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.plotter_camera_pos"]], "plotter_offscreen (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.plotter_offscreen"]], "projection_accuracy (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.projection_accuracy"]], "property (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.property"]], "property_name (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.property_name"]], "pyprocar.cfg.fermi_surface_3d": [[4, "module-pyprocar.cfg.fermi_surface_3d"]], "scalar_bar_bold (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.scalar_bar_bold"]], "scalar_bar_color (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.scalar_bar_color"]], "scalar_bar_italic (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.scalar_bar_italic"]], "scalar_bar_label_font_size (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.scalar_bar_label_font_size"]], "scalar_bar_labels (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.scalar_bar_labels"]], "scalar_bar_position_x (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.scalar_bar_position_x"]], "scalar_bar_position_y (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.scalar_bar_position_y"]], "scalar_bar_title (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.scalar_bar_title"]], "scalar_bar_title_font_size (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.scalar_bar_title_font_size"]], "spin_colors (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.spin_colors"]], "supercell (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.supercell"]], "surface_bands_colors (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.surface_bands_colors"]], "surface_clim (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.surface_clim"]], "surface_cmap (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.surface_cmap"]], "surface_color (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.surface_color"]], "surface_opacity (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.surface_opacity"]], "texture_cmap (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.texture_cmap"]], "texture_color (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.texture_color"]], "texture_opacity (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.texture_opacity"]], "texture_scale (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.texture_scale"]], "texture_size (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.texture_size"]], "x_axes_label (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.x_axes_label"]], "y_axes_label (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.y_axes_label"]], "z_axes_label (pyprocar.cfg.fermi_surface_3d.fermisurface3dconfig attribute)": [[4, "pyprocar.cfg.fermi_surface_3d.FermiSurface3DConfig.z_axes_label"]], "brillouinzone (class in pyprocar.core)": [[7, "pyprocar.core.BrillouinZone"]], "__init__() (pyprocar.core.brillouinzone method)": [[8, "pyprocar.core.BrillouinZone.__init__"]], "wigner_seitz() (pyprocar.core.brillouinzone method)": [[9, "pyprocar.core.BrillouinZone.wigner_seitz"]], "densityofstates (class in pyprocar.core)": [[10, "pyprocar.core.DensityOfStates"]], "__init__() (pyprocar.core.densityofstates method)": [[11, "pyprocar.core.DensityOfStates.__init__"]], "coupled_to_uncoupled_basis() (pyprocar.core.densityofstates method)": [[12, "pyprocar.core.DensityOfStates.coupled_to_uncoupled_basis"]], "dos_sum() (pyprocar.core.densityofstates method)": [[13, "pyprocar.core.DensityOfStates.dos_sum"]], "get_current_basis() (pyprocar.core.densityofstates method)": [[14, "pyprocar.core.DensityOfStates.get_current_basis"]], "is_non_collinear (pyprocar.core.densityofstates property)": [[15, "pyprocar.core.DensityOfStates.is_non_collinear"]], "n_dos (pyprocar.core.densityofstates property)": [[16, "pyprocar.core.DensityOfStates.n_dos"]], "n_energies (pyprocar.core.densityofstates property)": [[17, "pyprocar.core.DensityOfStates.n_energies"]], "n_spins (pyprocar.core.densityofstates property)": [[18, "pyprocar.core.DensityOfStates.n_spins"]], "electronicbandstructure (class in pyprocar.core)": [[19, "pyprocar.core.ElectronicBandStructure"]], "__init__() (pyprocar.core.electronicbandstructure method)": [[20, "pyprocar.core.ElectronicBandStructure.__init__"]], "bands_gradient (pyprocar.core.electronicbandstructure property)": [[21, "pyprocar.core.ElectronicBandStructure.bands_gradient"]], "bands_gradient_mesh (pyprocar.core.electronicbandstructure property)": [[22, "pyprocar.core.ElectronicBandStructure.bands_gradient_mesh"]], "bands_hessian (pyprocar.core.electronicbandstructure property)": [[23, "pyprocar.core.ElectronicBandStructure.bands_hessian"]], "bands_hessian_mesh (pyprocar.core.electronicbandstructure property)": [[24, "pyprocar.core.ElectronicBandStructure.bands_hessian_mesh"]], "bands_mesh (pyprocar.core.electronicbandstructure property)": [[25, "pyprocar.core.ElectronicBandStructure.bands_mesh"]], "calculate_scalar_gradient() (pyprocar.core.electronicbandstructure method)": [[26, "pyprocar.core.ElectronicBandStructure.calculate_scalar_gradient"]], "calculate_scalar_integral() (pyprocar.core.electronicbandstructure method)": [[27, "pyprocar.core.ElectronicBandStructure.calculate_scalar_integral"]], "create_nd_mesh() (pyprocar.core.electronicbandstructure method)": [[28, "pyprocar.core.ElectronicBandStructure.create_nd_mesh"]], "create_scaler_mesh() (pyprocar.core.electronicbandstructure method)": [[29, "pyprocar.core.ElectronicBandStructure.create_scaler_mesh"]], "create_vector_mesh() (pyprocar.core.electronicbandstructure method)": [[30, "pyprocar.core.ElectronicBandStructure.create_vector_mesh"]], "ebs_ipr() (pyprocar.core.electronicbandstructure method)": [[31, "pyprocar.core.ElectronicBandStructure.ebs_ipr"]], "ebs_ipr_atom() (pyprocar.core.electronicbandstructure method)": [[32, "pyprocar.core.ElectronicBandStructure.ebs_ipr_atom"]], "ebs_sum() (pyprocar.core.electronicbandstructure method)": [[33, "pyprocar.core.ElectronicBandStructure.ebs_sum"]], "fermi_speed (pyprocar.core.electronicbandstructure property)": [[34, "pyprocar.core.ElectronicBandStructure.fermi_speed"]], "fermi_speed_mesh (pyprocar.core.electronicbandstructure property)": [[35, "pyprocar.core.ElectronicBandStructure.fermi_speed_mesh"]], "fermi_velocity (pyprocar.core.electronicbandstructure property)": [[36, "pyprocar.core.ElectronicBandStructure.fermi_velocity"]], "fermi_velocity_mesh (pyprocar.core.electronicbandstructure property)": [[37, "pyprocar.core.ElectronicBandStructure.fermi_velocity_mesh"]], "fix_collinear_spin() (pyprocar.core.electronicbandstructure method)": [[38, "pyprocar.core.ElectronicBandStructure.fix_collinear_spin"]], "harmonic_average_effective_mass (pyprocar.core.electronicbandstructure property)": [[39, "pyprocar.core.ElectronicBandStructure.harmonic_average_effective_mass"]], "harmonic_average_effective_mass_mesh (pyprocar.core.electronicbandstructure property)": [[40, "pyprocar.core.ElectronicBandStructure.harmonic_average_effective_mass_mesh"]], "ibz2fbz() (pyprocar.core.electronicbandstructure method)": [[41, "pyprocar.core.ElectronicBandStructure.ibz2fbz"]], "index_mesh (pyprocar.core.electronicbandstructure property)": [[42, "pyprocar.core.ElectronicBandStructure.index_mesh"]], "interpolate_mesh_grid() (pyprocar.core.electronicbandstructure method)": [[43, "pyprocar.core.ElectronicBandStructure.interpolate_mesh_grid"]], "is_non_collinear (pyprocar.core.electronicbandstructure property)": [[44, "pyprocar.core.ElectronicBandStructure.is_non_collinear"]], "kpoints_cartesian (pyprocar.core.electronicbandstructure property)": [[45, "pyprocar.core.ElectronicBandStructure.kpoints_cartesian"]], "kpoints_cartesian_mesh (pyprocar.core.electronicbandstructure property)": [[46, "pyprocar.core.ElectronicBandStructure.kpoints_cartesian_mesh"]], "kpoints_mesh (pyprocar.core.electronicbandstructure property)": [[47, "pyprocar.core.ElectronicBandStructure.kpoints_mesh"]], "kpoints_reduced (pyprocar.core.electronicbandstructure property)": [[48, "pyprocar.core.ElectronicBandStructure.kpoints_reduced"]], "mesh_to_array() (pyprocar.core.electronicbandstructure method)": [[49, "pyprocar.core.ElectronicBandStructure.mesh_to_array"]], "n_kx (pyprocar.core.electronicbandstructure property)": [[50, "pyprocar.core.ElectronicBandStructure.n_kx"]], "n_ky (pyprocar.core.electronicbandstructure property)": [[51, "pyprocar.core.ElectronicBandStructure.n_ky"]], "n_kz (pyprocar.core.electronicbandstructure property)": [[52, "pyprocar.core.ElectronicBandStructure.n_kz"]], "natoms (pyprocar.core.electronicbandstructure property)": [[53, "pyprocar.core.ElectronicBandStructure.natoms"]], "nbands (pyprocar.core.electronicbandstructure property)": [[54, "pyprocar.core.ElectronicBandStructure.nbands"]], "nkpoints (pyprocar.core.electronicbandstructure property)": [[55, "pyprocar.core.ElectronicBandStructure.nkpoints"]], "norbitals (pyprocar.core.electronicbandstructure property)": [[56, "pyprocar.core.ElectronicBandStructure.norbitals"]], "nprincipals (pyprocar.core.electronicbandstructure property)": [[57, "pyprocar.core.ElectronicBandStructure.nprincipals"]], "nspins (pyprocar.core.electronicbandstructure property)": [[58, "pyprocar.core.ElectronicBandStructure.nspins"]], "plot_kpoints() (pyprocar.core.electronicbandstructure method)": [[59, "pyprocar.core.ElectronicBandStructure.plot_kpoints"]], "projected_mesh (pyprocar.core.electronicbandstructure property)": [[60, "pyprocar.core.ElectronicBandStructure.projected_mesh"]], "projected_phase_mesh (pyprocar.core.electronicbandstructure property)": [[61, "pyprocar.core.ElectronicBandStructure.projected_phase_mesh"]], "ravel_array() (pyprocar.core.electronicbandstructure method)": [[62, "pyprocar.core.ElectronicBandStructure.ravel_array"]], "unfold() (pyprocar.core.electronicbandstructure method)": [[63, "pyprocar.core.ElectronicBandStructure.unfold"]], "update_weights() (pyprocar.core.electronicbandstructure method)": [[64, "pyprocar.core.ElectronicBandStructure.update_weights"]], "weights_mesh (pyprocar.core.electronicbandstructure property)": [[65, "pyprocar.core.ElectronicBandStructure.weights_mesh"]], "fermisurface (class in pyprocar.core)": [[66, "pyprocar.core.FermiSurface"]], "__init__() (pyprocar.core.fermisurface method)": [[67, "pyprocar.core.FermiSurface.__init__"]], "add_axes_labels() (pyprocar.core.fermisurface method)": [[68, "pyprocar.core.FermiSurface.add_axes_labels"]], "add_legend() (pyprocar.core.fermisurface method)": [[69, "pyprocar.core.FermiSurface.add_legend"]], "find_energy() (pyprocar.core.fermisurface method)": [[70, "pyprocar.core.FermiSurface.find_energy"]], "plot() (pyprocar.core.fermisurface method)": [[71, "pyprocar.core.FermiSurface.plot"]], "savefig() (pyprocar.core.fermisurface method)": [[72, "pyprocar.core.FermiSurface.savefig"]], "show() (pyprocar.core.fermisurface method)": [[73, "pyprocar.core.FermiSurface.show"]], "spin_texture() (pyprocar.core.fermisurface method)": [[74, "pyprocar.core.FermiSurface.spin_texture"]], "fermisurface3d (class in pyprocar.core)": [[75, "pyprocar.core.FermiSurface3D"]], "__init__() (pyprocar.core.fermisurface3d method)": [[76, "pyprocar.core.FermiSurface3D.__init__"]], "extend_surface() (pyprocar.core.fermisurface3d method)": [[77, "pyprocar.core.FermiSurface3D.extend_surface"]], "project_atomic_projections() (pyprocar.core.fermisurface3d method)": [[78, "pyprocar.core.FermiSurface3D.project_atomic_projections"]], "project_fermi_speed() (pyprocar.core.fermisurface3d method)": [[79, "pyprocar.core.FermiSurface3D.project_fermi_speed"]], "project_fermi_velocity() (pyprocar.core.fermisurface3d method)": [[80, "pyprocar.core.FermiSurface3D.project_fermi_velocity"]], "project_harmonic_effective_mass() (pyprocar.core.fermisurface3d method)": [[81, "pyprocar.core.FermiSurface3D.project_harmonic_effective_mass"]], "project_spin_texture_atomic_projections() (pyprocar.core.fermisurface3d method)": [[82, "pyprocar.core.FermiSurface3D.project_spin_texture_atomic_projections"]], "isosurface (class in pyprocar.core)": [[83, "pyprocar.core.Isosurface"]], "__init__() (pyprocar.core.isosurface method)": [[84, "pyprocar.core.Isosurface.__init__"]], "dxyz (pyprocar.core.isosurface property)": [[85, "pyprocar.core.Isosurface.dxyz"]], "nx (pyprocar.core.isosurface property)": [[86, "pyprocar.core.Isosurface.nX"]], "ny (pyprocar.core.isosurface property)": [[87, "pyprocar.core.Isosurface.nY"]], "nz (pyprocar.core.isosurface property)": [[88, "pyprocar.core.Isosurface.nZ"]], "surface_boundaries (pyprocar.core.isosurface property)": [[89, "pyprocar.core.Isosurface.surface_boundaries"]], "kpath (class in pyprocar.core)": [[90, "pyprocar.core.KPath"]], "__init__() (pyprocar.core.kpath method)": [[91, "pyprocar.core.KPath.__init__"]], "get_kpoints_transformed() (pyprocar.core.kpath method)": [[92, "pyprocar.core.KPath.get_kpoints_transformed"]], "get_optimized_kpoints_transformed() (pyprocar.core.kpath method)": [[93, "pyprocar.core.KPath.get_optimized_kpoints_transformed"]], "kdistances (pyprocar.core.kpath property)": [[94, "pyprocar.core.KPath.kdistances"]], "nsegments (pyprocar.core.kpath property)": [[95, "pyprocar.core.KPath.nsegments"]], "tick_names (pyprocar.core.kpath property)": [[96, "pyprocar.core.KPath.tick_names"]], "tick_positions (pyprocar.core.kpath property)": [[97, "pyprocar.core.KPath.tick_positions"]], "write_to_file() (pyprocar.core.kpath method)": [[98, "pyprocar.core.KPath.write_to_file"]], "structure (class in pyprocar.core)": [[99, "pyprocar.core.Structure"]], "__init__() (pyprocar.core.structure method)": [[100, "pyprocar.core.Structure.__init__"]], "a (pyprocar.core.structure property)": [[101, "pyprocar.core.Structure.a"]], "alpha (pyprocar.core.structure property)": [[102, "pyprocar.core.Structure.alpha"]], "atomic_numbers (pyprocar.core.structure property)": [[103, "pyprocar.core.Structure.atomic_numbers"]], "b (pyprocar.core.structure property)": [[104, "pyprocar.core.Structure.b"]], "beta (pyprocar.core.structure property)": [[105, "pyprocar.core.Structure.beta"]], "c (pyprocar.core.structure property)": [[106, "pyprocar.core.Structure.c"]], "cell_convex_hull (pyprocar.core.structure property)": [[107, "pyprocar.core.Structure.cell_convex_hull"]], "density (pyprocar.core.structure property)": [[108, "pyprocar.core.Structure.density"]], "gamma (pyprocar.core.structure property)": [[109, "pyprocar.core.Structure.gamma"]], "get_space_group_international() (pyprocar.core.structure method)": [[110, "pyprocar.core.Structure.get_space_group_international"]], "get_space_group_number() (pyprocar.core.structure method)": [[111, "pyprocar.core.Structure.get_space_group_number"]], "get_spglib_symmetry_dataset() (pyprocar.core.structure method)": [[112, "pyprocar.core.Structure.get_spglib_symmetry_dataset"]], "get_wyckoff_positions() (pyprocar.core.structure method)": [[113, "pyprocar.core.Structure.get_wyckoff_positions"]], "is_point_inside() (pyprocar.core.structure method)": [[114, "pyprocar.core.Structure.is_point_inside"]], "lattice_corners (pyprocar.core.structure property)": [[115, "pyprocar.core.Structure.lattice_corners"]], "masses (pyprocar.core.structure property)": [[116, "pyprocar.core.Structure.masses"]], "natoms (pyprocar.core.structure property)": [[117, "pyprocar.core.Structure.natoms"]], "nspecies (pyprocar.core.structure property)": [[118, "pyprocar.core.Structure.nspecies"]], "plot_cell_convex_hull() (pyprocar.core.structure method)": [[119, "pyprocar.core.Structure.plot_cell_convex_hull"]], "reciprocal_lattice (pyprocar.core.structure property)": [[120, "pyprocar.core.Structure.reciprocal_lattice"]], "species (pyprocar.core.structure property)": [[121, "pyprocar.core.Structure.species"]], "supercell() (pyprocar.core.structure method)": [[122, "pyprocar.core.Structure.supercell"]], "transform() (pyprocar.core.structure method)": [[123, "pyprocar.core.Structure.transform"]], "volume (pyprocar.core.structure property)": [[124, "pyprocar.core.Structure.volume"]], "surface (class in pyprocar.core)": [[125, "pyprocar.core.Surface"]], "__init__() (pyprocar.core.surface method)": [[126, "pyprocar.core.Surface.__init__"]], "centers (pyprocar.core.surface property)": [[127, "pyprocar.core.Surface.centers"]], "export() (pyprocar.core.surface method)": [[128, "pyprocar.core.Surface.export"]], "faces_array (pyprocar.core.surface property)": [[129, "pyprocar.core.Surface.faces_array"]], "set_color_with_cmap() (pyprocar.core.surface method)": [[130, "pyprocar.core.Surface.set_color_with_cmap"]], "set_scalars() (pyprocar.core.surface method)": [[131, "pyprocar.core.Surface.set_scalars"]], "set_vectors() (pyprocar.core.surface method)": [[132, "pyprocar.core.Surface.set_vectors"]], "abinitkpoints (class in pyprocar.io.abinit)": [[144, "pyprocar.io.abinit.AbinitKpoints"]], "__init__() (pyprocar.io.abinit.abinitkpoints method)": [[145, "pyprocar.io.abinit.AbinitKpoints.__init__"]], "abinitprocar (class in pyprocar.io.abinit)": [[146, "pyprocar.io.abinit.AbinitProcar"]], "__init__() (pyprocar.io.abinit.abinitprocar method)": [[147, "pyprocar.io.abinit.AbinitProcar.__init__"]], "output (class in pyprocar.io.abinit)": [[148, "pyprocar.io.abinit.Output"]], "__init__() (pyprocar.io.abinit.output method)": [[149, "pyprocar.io.abinit.Output.__init__"]], "bxsfparser (class in pyprocar.io.bxsf)": [[150, "pyprocar.io.bxsf.BxsfParser"]], "__init__() (pyprocar.io.bxsf.bxsfparser method)": [[151, "pyprocar.io.bxsf.BxsfParser.__init__"]], "parse_bxsf() (pyprocar.io.bxsf.bxsfparser method)": [[152, "pyprocar.io.bxsf.BxsfParser.parse_bxsf"]], "lobsterparser (class in pyprocar.io.lobster)": [[153, "pyprocar.io.lobster.LobsterParser"]], "__init__() (pyprocar.io.lobster.lobsterparser method)": [[154, "pyprocar.io.lobster.LobsterParser.__init__"]], "dos (pyprocar.io.lobster.lobsterparser property)": [[155, "pyprocar.io.lobster.LobsterParser.dos"]], "dos_parametric() (pyprocar.io.lobster.lobsterparser method)": [[156, "pyprocar.io.lobster.LobsterParser.dos_parametric"]], "dos_projected (pyprocar.io.lobster.lobsterparser property)": [[157, "pyprocar.io.lobster.LobsterParser.dos_projected"]], "dos_to_dict (pyprocar.io.lobster.lobsterparser property)": [[158, "pyprocar.io.lobster.LobsterParser.dos_to_dict"]], "dos_total (pyprocar.io.lobster.lobsterparser property)": [[159, "pyprocar.io.lobster.LobsterParser.dos_total"]], "final_structure (pyprocar.io.lobster.lobsterparser property)": [[160, "pyprocar.io.lobster.LobsterParser.final_structure"]], "initial_structure (pyprocar.io.lobster.lobsterparser property)": [[161, "pyprocar.io.lobster.LobsterParser.initial_structure"]], "parse_structure() (pyprocar.io.lobster.lobsterparser method)": [[162, "pyprocar.io.lobster.LobsterParser.parse_structure"]], "species (pyprocar.io.lobster.lobsterparser property)": [[163, "pyprocar.io.lobster.LobsterParser.species"]], "structure (pyprocar.io.lobster.lobsterparser property)": [[164, "pyprocar.io.lobster.LobsterParser.structure"]], "structures (pyprocar.io.lobster.lobsterparser property)": [[165, "pyprocar.io.lobster.LobsterParser.structures"]], "qeparser (class in pyprocar.io.qe)": [[166, "pyprocar.io.qe.QEParser"]], "__init__() (pyprocar.io.qe.qeparser method)": [[167, "pyprocar.io.qe.QEParser.__init__"]], "final_structure (pyprocar.io.qe.qeparser property)": [[168, "pyprocar.io.qe.QEParser.final_structure"]], "getkpointlabels() (pyprocar.io.qe.qeparser method)": [[169, "pyprocar.io.qe.QEParser.getKpointLabels"]], "initial_structure (pyprocar.io.qe.qeparser property)": [[170, "pyprocar.io.qe.QEParser.initial_structure"]], "kpoints_cart() (pyprocar.io.qe.qeparser method)": [[171, "pyprocar.io.qe.QEParser.kpoints_cart"]], "species (pyprocar.io.qe.qeparser property)": [[172, "pyprocar.io.qe.QEParser.species"]], "structure (pyprocar.io.qe.qeparser property)": [[173, "pyprocar.io.qe.QEParser.structure"]], "structures (pyprocar.io.qe.qeparser property)": [[174, "pyprocar.io.qe.QEParser.structures"]], "siestaparser (class in pyprocar.io.siesta)": [[175, "pyprocar.io.siesta.SiestaParser"]], "__init__() (pyprocar.io.siesta.siestaparser method)": [[176, "pyprocar.io.siesta.SiestaParser.__init__"]], "kpoints (class in pyprocar.io.vasp)": [[177, "pyprocar.io.vasp.Kpoints"]], "__init__() (pyprocar.io.vasp.kpoints method)": [[178, "pyprocar.io.vasp.Kpoints.__init__"]], "outcar (class in pyprocar.io.vasp)": [[179, "pyprocar.io.vasp.Outcar"]], "__init__() (pyprocar.io.vasp.outcar method)": [[180, "pyprocar.io.vasp.Outcar.__init__"]], "efermi (pyprocar.io.vasp.outcar property)": [[181, "pyprocar.io.vasp.Outcar.efermi"]], "get_symmetry_operations() (pyprocar.io.vasp.outcar method)": [[182, "pyprocar.io.vasp.Outcar.get_symmetry_operations"]], "reciprocal_lattice (pyprocar.io.vasp.outcar property)": [[183, "pyprocar.io.vasp.Outcar.reciprocal_lattice"]], "rotations (pyprocar.io.vasp.outcar property)": [[184, "pyprocar.io.vasp.Outcar.rotations"]], "poscar (class in pyprocar.io.vasp)": [[185, "pyprocar.io.vasp.Poscar"]], "__init__() (pyprocar.io.vasp.poscar method)": [[186, "pyprocar.io.vasp.Poscar.__init__"]], "procar (class in pyprocar.io.vasp)": [[187, "pyprocar.io.vasp.Procar"]], "__init__() (pyprocar.io.vasp.procar method)": [[188, "pyprocar.io.vasp.Procar.__init__"]], "kpoints_cartesian (pyprocar.io.vasp.procar property)": [[189, "pyprocar.io.vasp.Procar.kpoints_cartesian"]], "kpoints_reduced (pyprocar.io.vasp.procar property)": [[190, "pyprocar.io.vasp.Procar.kpoints_reduced"]], "repair() (pyprocar.io.vasp.procar method)": [[191, "pyprocar.io.vasp.Procar.repair"]], "symmetrize() (pyprocar.io.vasp.procar method)": [[192, "pyprocar.io.vasp.Procar.symmetrize"]], "vaspxml (class in pyprocar.io.vasp)": [[193, "pyprocar.io.vasp.VaspXML"]], "__init__() (pyprocar.io.vasp.vaspxml method)": [[194, "pyprocar.io.vasp.VaspXML.__init__"]], "bands (pyprocar.io.vasp.vaspxml property)": [[195, "pyprocar.io.vasp.VaspXML.bands"]], "bands_projected (pyprocar.io.vasp.vaspxml property)": [[196, "pyprocar.io.vasp.VaspXML.bands_projected"]], "conv() (pyprocar.io.vasp.vaspxml method)": [[197, "pyprocar.io.vasp.VaspXML.conv"]], "convergence (pyprocar.io.vasp.vaspxml property)": [[198, "pyprocar.io.vasp.VaspXML.convergence"]], "convergence_electronic (pyprocar.io.vasp.vaspxml property)": [[199, "pyprocar.io.vasp.VaspXML.convergence_electronic"]], "convergence_ionic (pyprocar.io.vasp.vaspxml property)": [[200, "pyprocar.io.vasp.VaspXML.convergence_ionic"]], "dos (pyprocar.io.vasp.vaspxml property)": [[201, "pyprocar.io.vasp.VaspXML.dos"]], "dos_projected (pyprocar.io.vasp.vaspxml property)": [[202, "pyprocar.io.vasp.VaspXML.dos_projected"]], "dos_to_dict (pyprocar.io.vasp.vaspxml property)": [[203, "pyprocar.io.vasp.VaspXML.dos_to_dict"]], "dos_total (pyprocar.io.vasp.vaspxml property)": [[204, "pyprocar.io.vasp.VaspXML.dos_total"]], "energies (pyprocar.io.vasp.vaspxml property)": [[205, "pyprocar.io.vasp.VaspXML.energies"]], "energy (pyprocar.io.vasp.vaspxml property)": [[206, "pyprocar.io.vasp.VaspXML.energy"]], "fermi (pyprocar.io.vasp.vaspxml property)": [[207, "pyprocar.io.vasp.VaspXML.fermi"]], "final_structure (pyprocar.io.vasp.vaspxml property)": [[208, "pyprocar.io.vasp.VaspXML.final_structure"]], "forces (pyprocar.io.vasp.vaspxml property)": [[209, "pyprocar.io.vasp.VaspXML.forces"]], "get_general() (pyprocar.io.vasp.vaspxml method)": [[210, "pyprocar.io.vasp.VaspXML.get_general"]], "get_params() (pyprocar.io.vasp.vaspxml method)": [[211, "pyprocar.io.vasp.VaspXML.get_params"]], "get_scstep() (pyprocar.io.vasp.vaspxml method)": [[212, "pyprocar.io.vasp.VaspXML.get_scstep"]], "get_set() (pyprocar.io.vasp.vaspxml method)": [[213, "pyprocar.io.vasp.VaspXML.get_set"]], "get_structure() (pyprocar.io.vasp.vaspxml method)": [[214, "pyprocar.io.vasp.VaspXML.get_structure"]], "get_varray() (pyprocar.io.vasp.vaspxml method)": [[215, "pyprocar.io.vasp.VaspXML.get_varray"]], "incar (pyprocar.io.vasp.vaspxml property)": [[216, "pyprocar.io.vasp.VaspXML.incar"]], "initial_structure (pyprocar.io.vasp.vaspxml property)": [[217, "pyprocar.io.vasp.VaspXML.initial_structure"]], "is_finished (pyprocar.io.vasp.vaspxml property)": [[218, "pyprocar.io.vasp.VaspXML.is_finished"]], "iteration_data (pyprocar.io.vasp.vaspxml property)": [[219, "pyprocar.io.vasp.VaspXML.iteration_data"]], "kpoints (pyprocar.io.vasp.vaspxml property)": [[220, "pyprocar.io.vasp.VaspXML.kpoints"]], "kpoints_list (pyprocar.io.vasp.vaspxml property)": [[221, "pyprocar.io.vasp.VaspXML.kpoints_list"]], "last_energy (pyprocar.io.vasp.vaspxml property)": [[222, "pyprocar.io.vasp.VaspXML.last_energy"]], "parse_vasprun() (pyprocar.io.vasp.vaspxml method)": [[223, "pyprocar.io.vasp.VaspXML.parse_vasprun"]], "potcar_info (pyprocar.io.vasp.vaspxml property)": [[224, "pyprocar.io.vasp.VaspXML.potcar_info"]], "read() (pyprocar.io.vasp.vaspxml method)": [[225, "pyprocar.io.vasp.VaspXML.read"]], "species (pyprocar.io.vasp.vaspxml property)": [[226, "pyprocar.io.vasp.VaspXML.species"]], "structure (pyprocar.io.vasp.vaspxml property)": [[227, "pyprocar.io.vasp.VaspXML.structure"]], "structures (pyprocar.io.vasp.vaspxml property)": [[228, "pyprocar.io.vasp.VaspXML.structures"]], "text_to_bool() (pyprocar.io.vasp.vaspxml method)": [[229, "pyprocar.io.vasp.VaspXML.text_to_bool"]], "vasp_parameters (pyprocar.io.vasp.vaspxml property)": [[230, "pyprocar.io.vasp.VaspXML.vasp_parameters"]], "dosplot (class in pyprocar.plotter)": [[238, "pyprocar.plotter.DOSPlot"]], "__init__() (pyprocar.plotter.dosplot method)": [[239, "pyprocar.plotter.DOSPlot.__init__"]], "draw_fermi() (pyprocar.plotter.dosplot method)": [[240, "pyprocar.plotter.DOSPlot.draw_fermi"]], "grid() (pyprocar.plotter.dosplot method)": [[241, "pyprocar.plotter.DOSPlot.grid"]], "legend() (pyprocar.plotter.dosplot method)": [[242, "pyprocar.plotter.DOSPlot.legend"]], "plot_dos() (pyprocar.plotter.dosplot method)": [[243, "pyprocar.plotter.DOSPlot.plot_dos"]], "plot_parametric() (pyprocar.plotter.dosplot method)": [[244, "pyprocar.plotter.DOSPlot.plot_parametric"]], "plot_parametric_line() (pyprocar.plotter.dosplot method)": [[245, "pyprocar.plotter.DOSPlot.plot_parametric_line"]], "plot_stack() (pyprocar.plotter.dosplot method)": [[246, "pyprocar.plotter.DOSPlot.plot_stack"]], "plot_stack_orbitals() (pyprocar.plotter.dosplot method)": [[247, "pyprocar.plotter.DOSPlot.plot_stack_orbitals"]], "plot_stack_species() (pyprocar.plotter.dosplot method)": [[248, "pyprocar.plotter.DOSPlot.plot_stack_species"]], "save() (pyprocar.plotter.dosplot method)": [[249, "pyprocar.plotter.DOSPlot.save"]], "set_xlabel() (pyprocar.plotter.dosplot method)": [[250, "pyprocar.plotter.DOSPlot.set_xlabel"]], "set_xlim() (pyprocar.plotter.dosplot method)": [[251, "pyprocar.plotter.DOSPlot.set_xlim"]], "set_xticks() (pyprocar.plotter.dosplot method)": [[252, "pyprocar.plotter.DOSPlot.set_xticks"]], "set_ylabel() (pyprocar.plotter.dosplot method)": [[253, "pyprocar.plotter.DOSPlot.set_ylabel"]], "set_ylim() (pyprocar.plotter.dosplot method)": [[254, "pyprocar.plotter.DOSPlot.set_ylim"]], "set_yticks() (pyprocar.plotter.dosplot method)": [[255, "pyprocar.plotter.DOSPlot.set_yticks"]], "show() (pyprocar.plotter.dosplot method)": [[256, "pyprocar.plotter.DOSPlot.show"]], "update_config() (pyprocar.plotter.dosplot method)": [[257, "pyprocar.plotter.DOSPlot.update_config"]], "ebsplot (class in pyprocar.plotter)": [[258, "pyprocar.plotter.EBSPlot"]], "__init__() (pyprocar.plotter.ebsplot method)": [[259, "pyprocar.plotter.EBSPlot.__init__"]], "draw_fermi() (pyprocar.plotter.ebsplot method)": [[260, "pyprocar.plotter.EBSPlot.draw_fermi"]], "grid() (pyprocar.plotter.ebsplot method)": [[261, "pyprocar.plotter.EBSPlot.grid"]], "legend() (pyprocar.plotter.ebsplot method)": [[262, "pyprocar.plotter.EBSPlot.legend"]], "plot_atomic_levels() (pyprocar.plotter.ebsplot method)": [[263, "pyprocar.plotter.EBSPlot.plot_atomic_levels"]], "plot_bands() (pyprocar.plotter.ebsplot method)": [[264, "pyprocar.plotter.EBSPlot.plot_bands"]], "plot_parameteric() (pyprocar.plotter.ebsplot method)": [[265, "pyprocar.plotter.EBSPlot.plot_parameteric"]], "plot_parameteric_overlay() (pyprocar.plotter.ebsplot method)": [[266, "pyprocar.plotter.EBSPlot.plot_parameteric_overlay"]], "plot_scatter() (pyprocar.plotter.ebsplot method)": [[267, "pyprocar.plotter.EBSPlot.plot_scatter"]], "save() (pyprocar.plotter.ebsplot method)": [[268, "pyprocar.plotter.EBSPlot.save"]], "set_colorbar_title() (pyprocar.plotter.ebsplot method)": [[269, "pyprocar.plotter.EBSPlot.set_colorbar_title"]], "set_title() (pyprocar.plotter.ebsplot method)": [[270, "pyprocar.plotter.EBSPlot.set_title"]], "set_xlabel() (pyprocar.plotter.ebsplot method)": [[271, "pyprocar.plotter.EBSPlot.set_xlabel"]], "set_xlim() (pyprocar.plotter.ebsplot method)": [[272, "pyprocar.plotter.EBSPlot.set_xlim"]], "set_xticks() (pyprocar.plotter.ebsplot method)": [[273, "pyprocar.plotter.EBSPlot.set_xticks"]], "set_ylabel() (pyprocar.plotter.ebsplot method)": [[274, "pyprocar.plotter.EBSPlot.set_ylabel"]], "set_ylim() (pyprocar.plotter.ebsplot method)": [[275, "pyprocar.plotter.EBSPlot.set_ylim"]], "set_yticks() (pyprocar.plotter.ebsplot method)": [[276, "pyprocar.plotter.EBSPlot.set_yticks"]], "show() (pyprocar.plotter.ebsplot method)": [[277, "pyprocar.plotter.EBSPlot.show"]], "update_config() (pyprocar.plotter.ebsplot method)": [[278, "pyprocar.plotter.EBSPlot.update_config"]], "procarplot (class in pyprocar.plotter)": [[279, "pyprocar.plotter.ProcarPlot"]], "__init__() (pyprocar.plotter.procarplot method)": [[280, "pyprocar.plotter.ProcarPlot.__init__"]], "atomicplot() (pyprocar.plotter.procarplot method)": [[281, "pyprocar.plotter.ProcarPlot.atomicPlot"]], "parametricplot() (pyprocar.plotter.procarplot method)": [[282, "pyprocar.plotter.ProcarPlot.parametricPlot"]], "plotbands() (pyprocar.plotter.procarplot method)": [[283, "pyprocar.plotter.ProcarPlot.plotBands"]], "scatterplot() (pyprocar.plotter.procarplot method)": [[284, "pyprocar.plotter.ProcarPlot.scatterPlot"]], "poscar (class in pyprocar.pyposcar)": [[289, "pyprocar.pyposcar.Poscar"]], "__init__() (pyprocar.pyposcar.poscar method)": [[290, "pyprocar.pyposcar.Poscar.__init__"]], "add() (pyprocar.pyposcar.poscar method)": [[291, "pyprocar.pyposcar.Poscar.add"]], "load_from_data() (pyprocar.pyposcar.poscar method)": [[292, "pyprocar.pyposcar.Poscar.load_from_data"]], "parse() (pyprocar.pyposcar.poscar method)": [[293, "pyprocar.pyposcar.Poscar.parse"]], "remove() (pyprocar.pyposcar.poscar method)": [[294, "pyprocar.pyposcar.Poscar.remove"]], "sort() (pyprocar.pyposcar.poscar method)": [[295, "pyprocar.pyposcar.Poscar.sort"]], "write() (pyprocar.pyposcar.poscar method)": [[296, "pyprocar.pyposcar.Poscar.write"]], "xyz() (pyprocar.pyposcar.poscar method)": [[297, "pyprocar.pyposcar.Poscar.xyz"]], "poscardiff() (in module pyprocar.pyposcar)": [[298, "pyprocar.pyposcar.poscarDiff"]], "poscar_modify (class in pyprocar.pyposcar)": [[299, "pyprocar.pyposcar.poscar_modify"]], "__init__() (pyprocar.pyposcar.poscar_modify method)": [[300, "pyprocar.pyposcar.poscar_modify.__init__"]], "add() (pyprocar.pyposcar.poscar_modify method)": [[301, "pyprocar.pyposcar.poscar_modify.add"]], "change_elements() (pyprocar.pyposcar.poscar_modify method)": [[302, "pyprocar.pyposcar.poscar_modify.change_elements"]], "pos_multiply() (pyprocar.pyposcar.poscar_modify method)": [[303, "pyprocar.pyposcar.poscar_modify.pos_multiply"]], "pos_sum() (pyprocar.pyposcar.poscar_modify method)": [[304, "pyprocar.pyposcar.poscar_modify.pos_sum"]], "remove() (pyprocar.pyposcar.poscar_modify method)": [[305, "pyprocar.pyposcar.poscar_modify.remove"]], "scale_lattice() (pyprocar.pyposcar.poscar_modify method)": [[306, "pyprocar.pyposcar.poscar_modify.scale_lattice"]], "shift() (pyprocar.pyposcar.poscar_modify method)": [[307, "pyprocar.pyposcar.poscar_modify.shift"]], "write() (pyprocar.pyposcar.poscar_modify method)": [[308, "pyprocar.pyposcar.poscar_modify.write"]], "poscar_supercell (class in pyprocar.pyposcar)": [[309, "pyprocar.pyposcar.poscar_supercell"]], "__init__() (pyprocar.pyposcar.poscar_supercell method)": [[310, "pyprocar.pyposcar.poscar_supercell.__init__"]], "supercell() (pyprocar.pyposcar.poscar_supercell method)": [[311, "pyprocar.pyposcar.poscar_supercell.supercell"]], "write() (pyprocar.pyposcar.poscar_supercell method)": [[312, "pyprocar.pyposcar.poscar_supercell.write"]], "fermihandler (class in pyprocar.scripts)": [[316, "pyprocar.scripts.FermiHandler"]], "__init__() (pyprocar.scripts.fermihandler method)": [[317, "pyprocar.scripts.FermiHandler.__init__"]], "create_isovalue_gif() (pyprocar.scripts.fermihandler method)": [[318, "pyprocar.scripts.FermiHandler.create_isovalue_gif"]], "plot_fermi_cross_section() (pyprocar.scripts.fermihandler method)": [[319, "pyprocar.scripts.FermiHandler.plot_fermi_cross_section"]], "plot_fermi_cross_section_box_widget() (pyprocar.scripts.fermihandler method)": [[320, "pyprocar.scripts.FermiHandler.plot_fermi_cross_section_box_widget"]], "plot_fermi_isoslider() (pyprocar.scripts.fermihandler method)": [[321, "pyprocar.scripts.FermiHandler.plot_fermi_isoslider"]], "plot_fermi_surface() (pyprocar.scripts.fermihandler method)": [[322, "pyprocar.scripts.FermiHandler.plot_fermi_surface"]], "print_default_settings() (pyprocar.scripts.fermihandler method)": [[323, "pyprocar.scripts.FermiHandler.print_default_settings"]], "bandgap() (in module pyprocar.scripts)": [[324, "pyprocar.scripts.bandgap"]], "bandsdosplot() (in module pyprocar.scripts)": [[325, "pyprocar.scripts.bandsdosplot"]], "bandsplot() (in module pyprocar.scripts)": [[326, "pyprocar.scripts.bandsplot"]], "cat() (in module pyprocar.scripts)": [[327, "pyprocar.scripts.cat"]], "dosplot() (in module pyprocar.scripts)": [[328, "pyprocar.scripts.dosplot"]], "fermi2d() (in module pyprocar.scripts)": [[329, "pyprocar.scripts.fermi2D"]], "generate2dkmesh() (in module pyprocar.scripts)": [[330, "pyprocar.scripts.generate2dkmesh"]], "kpath() (in module pyprocar.scripts)": [[331, "pyprocar.scripts.kpath"]], "repair() (in module pyprocar.scripts)": [[332, "pyprocar.scripts.repair"]], "bandsplot() (in module pyprocar.scripts.scriptbandsplot)": [[412, "pyprocar.scripts.scriptBandsplot.bandsplot"]], "pyprocar.scripts.scriptbandsplot": [[412, "module-pyprocar.scripts.scriptBandsplot"]], "cat() (in module pyprocar.scripts.scriptcat)": [[413, "pyprocar.scripts.scriptCat.cat"]], "pyprocar.scripts.scriptcat": [[413, "module-pyprocar.scripts.scriptCat"]], "pyprocar.scriptdosplot": [[415, "module-pyprocar.scriptDosplot"]], "fermi2d() (in module pyprocar.scripts.scriptfermi2d)": [[417, "pyprocar.scripts.scriptFermi2D.fermi2D"]], "pyprocar.scripts.scriptfermi2d": [[417, "module-pyprocar.scripts.scriptFermi2D"]], "pyprocar.scripts.scriptfermihandler": [[418, "module-pyprocar.scripts.scriptFermiHandler"]], "filter() (in module pyprocar.scripts.scriptfilter)": [[419, "pyprocar.scripts.scriptFilter.filter"]], "pyprocar.scripts.scriptfilter": [[419, "module-pyprocar.scripts.scriptFilter"]], "pyprocar.scripts.scriptrepair": [[422, "module-pyprocar.scripts.scriptRepair"]], "repair() (in module pyprocar.scripts.scriptrepair)": [[422, "pyprocar.scripts.scriptRepair.repair"]], "pyprocar.scripts.scriptunfold": [[424, "module-pyprocar.scripts.scriptUnfold"]], "unfold() (in module pyprocar.scripts.scriptunfold)": [[424, "pyprocar.scripts.scriptUnfold.unfold"]]}})